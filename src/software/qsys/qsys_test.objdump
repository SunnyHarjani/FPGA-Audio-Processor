
qsys_test.elf:     file format elf32-littlenios2
qsys_test.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x040201bc

Program Header:
    LOAD off    0x00001000 vaddr 0x04020000 paddr 0x04020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x04020020 paddr 0x04020020 align 2**12
         filesz 0x00010558 memsz 0x00010558 flags r-x
    LOAD off    0x00012000 vaddr 0x00000000 paddr 0x04030578 align 2**12
         filesz 0x00001e54 memsz 0x00001fbc flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  04020000  04020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000019c  04020020  04020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000103bc  040201bc  040201bc  000011bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000034c  00000000  04030578  00012000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b08  0000034c  040308c4  0001234c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000168  00001e54  040323cc  00013e54  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00001fbc  00001fbc  00013e54  2**0
                  CONTENTS
  7 .onchip_memory2 00000000  040323cc  040323cc  00013e54  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00013e54  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000fa0  00000000  00000000  00013e78  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00025c23  00000000  00000000  00014e18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00009936  00000000  00000000  0003aa3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000bcb3  00000000  00000000  00044371  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002330  00000000  00000000  00050024  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0000357e  00000000  00000000  00052354  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00016ebd  00000000  00000000  000558d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  0006c790  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000018a0  00000000  00000000  0006c7d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0007150c  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000a  00000000  00000000  0007150f  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00071519  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0007151a  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0007151b  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0007151f  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  00071523  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  00071527  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  00071530  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  00071539  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000c  00000000  00000000  00071542  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000028  00000000  00000000  0007154e  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0007cb81  00000000  00000000  00071576  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
04020000 l    d  .entry	00000000 .entry
04020020 l    d  .exceptions	00000000 .exceptions
040201bc l    d  .text	00000000 .text
00000000 l    d  .rodata	00000000 .rodata
0000034c l    d  .rwdata	00000000 .rwdata
00001e54 l    d  .bss	00000000 .bss
00001fbc l    d  .sdram	00000000 .sdram
040323cc l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../qsys_test_bsp//obj/HAL/src/crt0.o
040201f4 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
04020094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 main.c
040201f8 l     F .text	00000270 recordAudio
04020468 l     F .text	0000014c playAudio
040205b4 l     F .text	00000068 playIsr
0402061c l     F .text	00000068 recordIsr
04020684 l     F .text	000000f8 syncIsr
00000000 l    df *ABS*	00000000 mem_verify.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
04020fe0 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000009a l     O .rodata	00000010 zeroes.4255
04023540 l     F .text	000000bc __sbprintf
000000aa l     O .rodata	00000010 blanks.4254
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
04023750 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
04025334 l     F .text	00000008 __fp_lock
0402533c l     F .text	00000008 __fp_unlock
04025350 l     F .text	0000019c __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0000034c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00000790 l     O .rwdata	00000020 lc_ctype_charset
00000770 l     O .rwdata	00000020 lc_message_charset
000007b0 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000000dc l     O .rodata	0000000c p05.2710
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
040288cc l     F .text	000000fc __sprint_r.part.0
00000200 l     O .rodata	00000010 zeroes.4200
00000210 l     O .rodata	00000010 blanks.4199
04029cf4 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0402dc20 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
0402dd64 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0402dd90 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0402e168 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0402e264 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0402e348 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0402e52c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00001e48 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0402e97c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0402eacc l     F .text	00000038 alt_dev_reg
00000d98 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0402edc0 l     F .text	00000204 altera_avalon_jtag_uart_irq
0402efc4 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0402f5e4 l     F .text	00000074 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0402f978 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0402fb40 l     F .text	000000e0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
0402fc98 l     F .text	00000050 alt_get_errno
0402fce8 l     F .text	000000f4 alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
040212dc g     F .text	00000018 putchar
04027dd8 g     F .text	00000074 _mprec_log10
04027ec4 g     F .text	0000008c __any_on
0402a3c8 g     F .text	00000054 _isatty_r
000000e8 g     O .rodata	00000028 __mprec_tinytens
0402e474 g     F .text	00000078 alt_main
040212f4 g     F .text	000000a8 _puts_r
00001ebc g     O .bss	00000100 alt_irq
0402a41c g     F .text	0000005c _lseek_r
040308c4 g       *ABS*	00000000 __flash_rwdata_start
0402c640 g     F .text	00000084 .hidden __eqdf2
00001fbc g       *ABS*	00000000 __alt_heap_start
00001dfc g     O .rwdata	00000004 record_btn_ptr
04021298 g     F .text	0000003c printf
0402a4d4 g     F .text	0000009c _wcrtomb_r
040287c4 g     F .text	0000005c __sseek
04025694 g     F .text	00000010 __sinit
04029db0 g     F .text	00000138 __swbuf_r
0402614c g     F .text	0000007c _setlocale_r
040254ec g     F .text	00000078 __sfmoreglue
0402e50c g     F .text	00000020 __malloc_unlock
04026c74 g     F .text	0000015c memmove
0402567c g     F .text	00000018 _cleanup
04026ef4 g     F .text	000000a8 _Balloc
0402c6c4 g     F .text	000000e0 .hidden __gtdf2
00000000  w      *UND*	00000000 __errno
04020000 g     F .entry	0000000c __reset
00001e5c g     O .bss	00000004 edge_capture
04020020 g       *ABS*	00000000 __flash_exceptions_start
0402a370 g     F .text	00000058 _fstat_r
00001e78 g     O .bss	00000004 errno
04028740 g     F .text	00000008 __seofread
00001e84 g     O .bss	00000004 alt_argv
00009df8 g       *ABS*	00000000 _gp
0402e94c g     F .text	00000030 usleep
00000c18 g     O .rwdata	00000180 alt_fd_list
040212d4 g     F .text	00000008 _putchar_r
0402ff5c g     F .text	00000090 alt_find_dev
04021134 g     F .text	00000138 memcpy
04020888 g     F .text	00000510 TMEM_Verify
04025344 g     F .text	0000000c _cleanup_r
0402da48 g     F .text	000000d0 .hidden __floatsidf
00001e04 g     O .rwdata	00000004 sdram_base_ptr
0402fc20 g     F .text	00000078 alt_io_redirect
0402c7a4 g     F .text	000000e0 .hidden __ltdf2
04030578 g       *ABS*	00000000 __DTOR_END__
0402139c g     F .text	00000014 puts
04028624 g     F .text	00000074 __fpclassifyd
04027d34 g     F .text	000000a4 __ratio
04029cd0 g     F .text	00000024 __vfiprintf_internal
0402f1c0 g     F .text	0000020c altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
0402126c g     F .text	0000002c _printf_r
040210fc g     F .text	00000008 .hidden __udivsi3
0402e1b8 g     F .text	000000ac isatty
00001e58 g     O .bss	00000004 currentState
00000138 g     O .rodata	000000c8 __mprec_tens
040261c8 g     F .text	0000000c __locale_charset
00001e74 g     O .bss	00000004 __malloc_top_pad
00001e1c g     O .rwdata	00000004 __mb_cur_max
040261f8 g     F .text	0000000c _localeconv_r
04027328 g     F .text	0000003c __i2b
04025af8 g     F .text	000004cc __sfvwrite_r
04028698 g     F .text	00000054 _sbrk_r
0402a478 g     F .text	0000005c _read_r
00001e3c g     O .rwdata	00000004 alt_max_fd
0402a08c g     F .text	000000f0 _fclose_r
04025304 g     F .text	00000030 fflush
00001e70 g     O .bss	00000004 __malloc_max_sbrked_mem
0402b424 g     F .text	0000089c .hidden __adddf3
04027adc g     F .text	0000011c __b2d
0402ae08 g     F .text	0000061c .hidden __umoddi3
0402e398 g     F .text	000000dc lseek
00001e14 g     O .rwdata	00000004 _global_impure_ptr
040280bc g     F .text	00000568 _realloc_r
00001fbc g       *ABS*	00000000 __bss_end
0402e078 g     F .text	000000f0 alt_iic_isr_register
0402e848 g     F .text	00000104 alt_tick
0402a7c8 g     F .text	00000640 .hidden __udivdi3
0402a190 g     F .text	00000184 _fputwc_r
00000110 g     O .rodata	00000028 __mprec_bigtens
0402710c g     F .text	00000104 __s2b
0402db18 g     F .text	000000a4 .hidden __floatunsidf
04027884 g     F .text	00000060 __mcmp
040256b4 g     F .text	00000018 __fp_lock_all
0402e02c g     F .text	0000004c alt_ic_irq_enabled
0402e7b0 g     F .text	00000098 alt_alarm_stop
00001e7c g     O .bss	00000004 alt_irq_active
040200ec g     F .exceptions	000000d0 alt_irq_handler
00000bf0 g     O .rwdata	00000028 alt_dev_null
0402dd48 g     F .text	0000001c alt_dcache_flush_all
04027210 g     F .text	00000068 __hi0bits
0402d9c0 g     F .text	00000088 .hidden __fixdfsi
00001e54 g       *ABS*	00000000 __ram_rwdata_end
00001e34 g     O .rwdata	00000008 alt_dev_list
0402e9cc g     F .text	00000100 write
04027f50 g     F .text	000000a0 _putc_r
0000034c g       *ABS*	00000000 __ram_rodata_end
0402dde0 g     F .text	000000b8 fstat
0402c7a4 g     F .text	000000e0 .hidden __ledf2
040275f4 g     F .text	00000140 __pow5mult
040289e0 g     F .text	000012f0 ___vfiprintf_internal_r
00001e68 g     O .bss	00000004 __nlocale_changed
04021104 g     F .text	00000008 .hidden __umodsi3
00001e08 g     O .rwdata	00000004 sdram_max_ptr
00001fbc g       *ABS*	00000000 end
00001e00 g     O .rwdata	00000004 sync_ptr
0402ecfc g     F .text	000000c4 altera_avalon_jtag_uart_init
04030578 g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
0402f658 g     F .text	00000088 alt_avalon_timer_sc_init
0402dbbc g     F .text	00000064 .hidden __clzsi2
0402f3cc g     F .text	00000218 altera_avalon_jtag_uart_write
040256a4 g     F .text	00000004 __sfp_lock_acquire
04026b8c g     F .text	000000e8 memchr
040214c4 g     F .text	00002058 ___vfprintf_internal_r
04025808 g     F .text	000002f0 _free_r
040261d4 g     F .text	00000010 __locale_mb_cur_max
040303b0 g     F .text	00000194 __call_exitprocs
00001e64 g     O .bss	00000004 __mlocale_changed
00001e20 g     O .rwdata	00000004 __malloc_sbrk_base
040201bc g     F .text	0000003c _start
00001e8c g     O .bss	00000004 _alt_tick_rate
040213c8 g     F .text	00000064 rand
04027734 g     F .text	00000150 __lshift
00001e90 g     O .bss	00000004 _alt_nticks
0402e57c g     F .text	00000104 read
0402eb38 g     F .text	00000060 alt_sys_init
0403029c g     F .text	00000114 __register_exitproc
04027364 g     F .text	00000290 __multiply
0402f06c g     F .text	00000068 altera_avalon_jtag_uart_close
0402110c g     F .text	00000028 .hidden __mulsi3
0000034c g       *ABS*	00000000 __ram_rwdata_start
00000000 g       *ABS*	00000000 __ram_rodata_start
00001e94 g     O .bss	00000028 __malloc_current_mallinfo
04027bf8 g     F .text	0000013c __d2b
0402eb98 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
04030100 g     F .text	000000d4 alt_get_fd
0402f820 g     F .text	00000158 alt_busy_sleep
04029f60 g     F .text	00000054 _close_r
04030220 g     F .text	0000007c memcmp
0402ec58 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00001fbc g       *ABS*	00000000 __alt_stack_base
0402eca8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
040235fc g     F .text	00000154 __swsetup_r
0402bcc0 g     F .text	00000980 .hidden __divdf3
04025564 g     F .text	00000118 __sfp
04027e4c g     F .text	00000078 __copybits
000007e8 g     O .rwdata	00000408 __malloc_av_
040256b0 g     F .text	00000004 __sinit_lock_release
0402c884 g     F .text	0000086c .hidden __muldf3
040286ec g     F .text	00000054 __sread
0402ffec g     F .text	00000114 alt_find_file
0402f9c8 g     F .text	000000a4 alt_dev_llist_insert
0402e4ec g     F .text	00000020 __malloc_lock
0402e700 g     F .text	000000b0 sbrk
040252a8 g     F .text	0000005c _fflush_r
04029fb4 g     F .text	000000d8 _calloc_r
00001df8 g     O .rwdata	00000004 play_btn_ptr
00001e54 g       *ABS*	00000000 __bss_start
04026dd0 g     F .text	00000124 memset
0402077c g     F .text	0000010c main
00001e88 g     O .bss	00000004 alt_envp
00001e6c g     O .bss	00000004 __malloc_max_total_mem
0402ebf8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
04029ee8 g     F .text	0000001c __swbuf
040213b0 g     F .text	00000018 srand
04028820 g     F .text	00000008 __sclose
04000000 g       *ABS*	00000000 __alt_heap_limit
0402a17c g     F .text	00000014 fclose
04023978 g     F .text	00001728 _dtoa_r
040263e4 g     F .text	000007a8 _malloc_r
0402a630 g     F .text	00000030 __ascii_wctomb
00001e40 g     O .rwdata	00000004 alt_errno
04025fc4 g     F .text	000000c4 _fwalk
04027ff0 g     F .text	000000cc putc
0402104c g     F .text	00000054 .hidden __divsi3
040256e4 g     F .text	00000124 _malloc_trim_r
04030578 g       *ABS*	00000000 __CTOR_END__
04028828 g     F .text	000000a4 strcmp
04030578 g       *ABS*	00000000 __flash_rodata_start
04030578 g       *ABS*	00000000 __DTOR_LIST__
0402c640 g     F .text	00000084 .hidden __nedf2
0402eb04 g     F .text	00000034 alt_irq_init
0402e680 g     F .text	00000080 alt_release_fd
00000220 g     O .rodata	00000100 .hidden __clz_tab
00001e60 g     O .bss	00000004 _PathLocale
040301d4 g     F .text	00000014 atexit
04029f04 g     F .text	0000005c _write_r
04026204 g     F .text	0000001c setlocale
00001e18 g     O .rwdata	00000004 _impure_ptr
00001e80 g     O .bss	00000004 alt_argc
040250a0 g     F .text	00000208 __sflush_r
0402fac8 g     F .text	0000005c _do_dtors
040261f0 g     F .text	00000008 __locale_cjk_lang
04020020 g       .exceptions	00000000 alt_irq_entry
04027a7c g     F .text	00000060 __ulp
040256cc g     F .text	00000018 __fp_unlock_all
00001e2c g     O .rwdata	00000008 alt_fs_list
04020020 g       *ABS*	00000000 __ram_exceptions_start
04026220 g     F .text	0000000c localeconv
04020000 g       *ABS*	00000000 __alt_mem_onchip_memory2
0402de98 g     F .text	00000050 alt_ic_isr_register
00001e54 g       *ABS*	00000000 _edata
00001fbc g       *ABS*	00000000 _end
040201bc g       *ABS*	00000000 __ram_exceptions_end
0402f0d4 g     F .text	000000ec altera_avalon_jtag_uart_ioctl
0402df88 g     F .text	000000a4 alt_ic_irq_disable
04028748 g     F .text	0000007c __swrite
00001e24 g     O .rwdata	00000004 __malloc_trim_threshold
0402ff3c g     F .text	00000020 altera_nios2_qsys_irq_init
040261e4 g     F .text	0000000c __locale_msgcharset
040301e8 g     F .text	00000038 exit
04026088 g     F .text	000000c4 _fwalk_reent
040278e4 g     F .text	00000198 __mdiff
040210a0 g     F .text	0000005c .hidden __modsi3
04020d98 g     F .text	00000248 TMEM_QuickVerify
04000000 g       *ABS*	00000000 __alt_data_end
04020020 g     F .exceptions	00000000 alt_exception
040256a8 g     F .text	00000004 __sfp_lock_release
00000000 g       *ABS*	00000000 __alt_mem_sdram
04030544 g     F .text	00000034 _exit
0402f6e0 g     F .text	00000140 alt_alarm_start
0402a6bc g     F .text	0000010c .hidden __muldi3
0402622c g     F .text	000001b8 __smakebuf_r
00001e10 g     O .rwdata	00000004 data_out_ptr
0402142c g     F .text	00000098 strlen
0402fddc g     F .text	00000160 open
0402c6c4 g     F .text	000000e0 .hidden __gedf2
00001e28 g     O .rwdata	00000004 __wctomb
040289c8 g     F .text	00000018 __sprint_r
0402fb24 g     F .text	0000001c alt_icache_flush_all
00001e44 g     O .rwdata	00000004 alt_priority_mask
0402dee8 g     F .text	000000a0 alt_ic_irq_enable
0402351c g     F .text	00000024 __vfprintf_internal
0402a660 g     F .text	0000005c _wctomb_r
0402d0f0 g     F .text	000008d0 .hidden __subdf3
00001e0c g     O .rwdata	00000004 data_in_ptr
04027278 g     F .text	000000b0 __lo0bits
00001e4c g     O .rwdata	00000008 alt_alarm_list
0402fa6c g     F .text	0000005c _do_ctors
0402a570 g     F .text	000000c0 wcrtomb
0402dc70 g     F .text	000000d8 close
0402e2c8 g     F .text	00000080 alt_load
0402a314 g     F .text	0000005c fputwc
00000000  w      *UND*	00000000 free
040256ac g     F .text	00000004 __sinit_lock_acquire
00001e54 g     O .bss	00000004 sdram_current_ptr
04026fc4 g     F .text	00000148 __multadd
04026f9c g     F .text	00000028 _Bfree



Disassembly of section .entry:

04020000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 4020000:	004100b4 	movhi	at,1026
    ori r1, r1, %lo(_start)
 4020004:	08406f14 	ori	at,at,444
    jmp r1
 4020008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

04020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 4020020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 4020024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 4020028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 402002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 4020030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 4020034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 4020038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 402003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 4020040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 4020044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 4020048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 402004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 4020050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 4020054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 4020058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 402005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 4020060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 4020064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 4020068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 402006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 4020070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 4020074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 4020078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 402007c:	10000326 	beq	r2,zero,402008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 4020080:	20000226 	beq	r4,zero,402008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 4020084:	40200ec0 	call	40200ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 4020088:	00000306 	br	4020098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 402008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 4020090:	e8bfff17 	ldw	r2,-4(ea)

04020094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
 4020094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 4020098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 402009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 40200a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 40200a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 40200a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 40200ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 40200b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 40200b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 40200b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 40200bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 40200c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 40200c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 40200c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 40200cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 40200d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 40200d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 40200d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 40200dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 40200e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 40200e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 40200e8:	ef80083a 	eret

040200ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 40200ec:	defff904 	addi	sp,sp,-28
 40200f0:	dfc00615 	stw	ra,24(sp)
 40200f4:	df000515 	stw	fp,20(sp)
 40200f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 40200fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 4020100:	0005313a 	rdctl	r2,ipending
 4020104:	e0bffe15 	stw	r2,-8(fp)

  return active;
 4020108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 402010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 4020110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 4020114:	00800044 	movi	r2,1
 4020118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 402011c:	e0fffb17 	ldw	r3,-20(fp)
 4020120:	e0bffc17 	ldw	r2,-16(fp)
 4020124:	1884703a 	and	r2,r3,r2
 4020128:	10001426 	beq	r2,zero,402017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 402012c:	00800034 	movhi	r2,0
 4020130:	1087af04 	addi	r2,r2,7868
 4020134:	e0fffd17 	ldw	r3,-12(fp)
 4020138:	180690fa 	slli	r3,r3,3
 402013c:	10c5883a 	add	r2,r2,r3
 4020140:	10c00017 	ldw	r3,0(r2)
 4020144:	00800034 	movhi	r2,0
 4020148:	1087af04 	addi	r2,r2,7868
 402014c:	e13ffd17 	ldw	r4,-12(fp)
 4020150:	200890fa 	slli	r4,r4,3
 4020154:	21000104 	addi	r4,r4,4
 4020158:	1105883a 	add	r2,r2,r4
 402015c:	10800017 	ldw	r2,0(r2)
 4020160:	1009883a 	mov	r4,r2
 4020164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 4020168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 402016c:	0005313a 	rdctl	r2,ipending
 4020170:	e0bfff15 	stw	r2,-4(fp)

  return active;
 4020174:	e0bfff17 	ldw	r2,-4(fp)
 4020178:	00000706 	br	4020198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 402017c:	e0bffc17 	ldw	r2,-16(fp)
 4020180:	1085883a 	add	r2,r2,r2
 4020184:	e0bffc15 	stw	r2,-16(fp)
      i++;
 4020188:	e0bffd17 	ldw	r2,-12(fp)
 402018c:	10800044 	addi	r2,r2,1
 4020190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 4020194:	003fe106 	br	402011c <__flash_rwdata_start+0xfffef858>

    active = alt_irq_pending ();
 4020198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 402019c:	e0bffb17 	ldw	r2,-20(fp)
 40201a0:	103fdb1e 	bne	r2,zero,4020110 <__flash_rwdata_start+0xfffef84c>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 40201a4:	0001883a 	nop
}
 40201a8:	e037883a 	mov	sp,fp
 40201ac:	dfc00117 	ldw	ra,4(sp)
 40201b0:	df000017 	ldw	fp,0(sp)
 40201b4:	dec00204 	addi	sp,sp,8
 40201b8:	f800283a 	ret

Disassembly of section .text:

040201bc <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 40201bc:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
 40201c0:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 40201c4:	06800034 	movhi	gp,0
    ori gp, gp, %lo(_gp)
 40201c8:	d6a77e14 	ori	gp,gp,40440
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 40201cc:	00800034 	movhi	r2,0
    ori r2, r2, %lo(__bss_start)
 40201d0:	10879514 	ori	r2,r2,7764

    movhi r3, %hi(__bss_end)
 40201d4:	00c00034 	movhi	r3,0
    ori r3, r3, %lo(__bss_end)
 40201d8:	18c7ef14 	ori	r3,r3,8124

    beq r2, r3, 1f
 40201dc:	10c00326 	beq	r2,r3,40201ec <_start+0x30>

0:
    stw zero, (r2)
 40201e0:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 40201e4:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 40201e8:	10fffd36 	bltu	r2,r3,40201e0 <__flash_rwdata_start+0xfffef91c>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 40201ec:	402e2c80 	call	402e2c8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 40201f0:	402e4740 	call	402e474 <alt_main>

040201f4 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 40201f4:	003fff06 	br	40201f4 <__flash_rwdata_start+0xfffef930>

040201f8 <recordAudio>:
state currentState = IDLE;

// Declare a global variable to hold the edge capture value.
volatile int edge_capture;

static void recordAudio(alt_u32 BaseAddr, alt_u32 ByteLen, alt_u32 InitValue) {
 40201f8:	def7e704 	addi	sp,sp,-8292
 40201fc:	dfc81815 	stw	ra,8288(sp)
 4020200:	df081715 	stw	fp,8284(sp)
 4020204:	df081704 	addi	fp,sp,8284
 4020208:	e13ffd15 	stw	r4,-12(fp)
 402020c:	e17ffe15 	stw	r5,-8(fp)
 4020210:	e1bfff15 	stw	r6,-4(fp)

	bool bPass = TRUE;
 4020214:	00800044 	movi	r2,1
 4020218:	e0b7ed15 	stw	r2,-8268(fp)
	alt_u32 szData[1025];
	alt_u32 szRead[1025];
	int i, nRemainedLen, nAccessLen;
	alt_u32 *pDes, *pSrc, nItemNum, nPos;

	int nProgressIndex = 0;
 402021c:	e037ee15 	stw	zero,-8264(fp)
	alt_u32 szProgress[10];

	for (i = 0; i < 10; i++) {
 4020220:	e037e915 	stw	zero,-8284(fp)
 4020224:	00001506 	br	402027c <recordAudio+0x84>
		szProgress[i] = ByteLen / 10 * (i + 1);
 4020228:	e0bffe17 	ldw	r2,-8(fp)
 402022c:	1009883a 	mov	r4,r2
 4020230:	01400284 	movi	r5,10
 4020234:	40210fc0 	call	40210fc <__udivsi3>
 4020238:	1007883a 	mov	r3,r2
 402023c:	e0b7e917 	ldw	r2,-8284(fp)
 4020240:	10800044 	addi	r2,r2,1
 4020244:	1809883a 	mov	r4,r3
 4020248:	100b883a 	mov	r5,r2
 402024c:	402110c0 	call	402110c <__mulsi3>
 4020250:	1007883a 	mov	r3,r2
 4020254:	e0b7e917 	ldw	r2,-8284(fp)
 4020258:	1085883a 	add	r2,r2,r2
 402025c:	1085883a 	add	r2,r2,r2
 4020260:	e137e904 	addi	r4,fp,-8284
 4020264:	2085883a 	add	r2,r4,r2
 4020268:	10880a04 	addi	r2,r2,8232
 402026c:	10c00015 	stw	r3,0(r2)
	alt_u32 *pDes, *pSrc, nItemNum, nPos;

	int nProgressIndex = 0;
	alt_u32 szProgress[10];

	for (i = 0; i < 10; i++) {
 4020270:	e0b7e917 	ldw	r2,-8284(fp)
 4020274:	10800044 	addi	r2,r2,1
 4020278:	e0b7e915 	stw	r2,-8284(fp)
 402027c:	e0b7e917 	ldw	r2,-8284(fp)
 4020280:	10800290 	cmplti	r2,r2,10
 4020284:	103fe81e 	bne	r2,zero,4020228 <__flash_rwdata_start+0xfffef964>
		szProgress[i] = ByteLen / 10 * (i + 1);
	}

	nItemNum = sizeof(szData) / sizeof(szData[0]);
 4020288:	00810044 	movi	r2,1025
 402028c:	e0b7ef15 	stw	r2,-8260(fp)
	for (i = 0; i < nItemNum; i++) {
 4020290:	e037e915 	stw	zero,-8284(fp)
 4020294:	00002106 	br	402031c <recordAudio+0x124>
		if (i == 0)
 4020298:	e0b7e917 	ldw	r2,-8284(fp)
 402029c:	1000091e 	bne	r2,zero,40202c4 <recordAudio+0xcc>
			szData[i] = InitValue;
 40202a0:	e0b7e917 	ldw	r2,-8284(fp)
 40202a4:	1085883a 	add	r2,r2,r2
 40202a8:	1085883a 	add	r2,r2,r2
 40202ac:	e0f7e904 	addi	r3,fp,-8284
 40202b0:	1885883a 	add	r2,r3,r2
 40202b4:	10800804 	addi	r2,r2,32
 40202b8:	e0ffff17 	ldw	r3,-4(fp)
 40202bc:	10c00015 	stw	r3,0(r2)
 40202c0:	00001306 	br	4020310 <recordAudio+0x118>
		else
			szData[i] = szData[i - 1] * 13;
 40202c4:	e0b7e917 	ldw	r2,-8284(fp)
 40202c8:	10bfffc4 	addi	r2,r2,-1
 40202cc:	1085883a 	add	r2,r2,r2
 40202d0:	1085883a 	add	r2,r2,r2
 40202d4:	e137e904 	addi	r4,fp,-8284
 40202d8:	2085883a 	add	r2,r4,r2
 40202dc:	10800804 	addi	r2,r2,32
 40202e0:	10800017 	ldw	r2,0(r2)
 40202e4:	1009883a 	mov	r4,r2
 40202e8:	01400344 	movi	r5,13
 40202ec:	402110c0 	call	402110c <__mulsi3>
 40202f0:	1007883a 	mov	r3,r2
 40202f4:	e0b7e917 	ldw	r2,-8284(fp)
 40202f8:	1085883a 	add	r2,r2,r2
 40202fc:	1085883a 	add	r2,r2,r2
 4020300:	e137e904 	addi	r4,fp,-8284
 4020304:	2085883a 	add	r2,r4,r2
 4020308:	10800804 	addi	r2,r2,32
 402030c:	10c00015 	stw	r3,0(r2)
	for (i = 0; i < 10; i++) {
		szProgress[i] = ByteLen / 10 * (i + 1);
	}

	nItemNum = sizeof(szData) / sizeof(szData[0]);
	for (i = 0; i < nItemNum; i++) {
 4020310:	e0b7e917 	ldw	r2,-8284(fp)
 4020314:	10800044 	addi	r2,r2,1
 4020318:	e0b7e915 	stw	r2,-8284(fp)
 402031c:	e0f7e917 	ldw	r3,-8284(fp)
 4020320:	e0b7ef17 	ldw	r2,-8260(fp)
 4020324:	18bfdc36 	bltu	r3,r2,4020298 <__flash_rwdata_start+0xfffef9d4>
		if (i == 0)
			szData[i] = InitValue;
		else
			szData[i] = szData[i - 1] * 13;
	}
	szData[nItemNum - 1] = 0xAAAAAAAA;
 4020328:	e0b7ef17 	ldw	r2,-8260(fp)
 402032c:	10bfffc4 	addi	r2,r2,-1
 4020330:	1085883a 	add	r2,r2,r2
 4020334:	1085883a 	add	r2,r2,r2
 4020338:	e0f7e904 	addi	r3,fp,-8284
 402033c:	1885883a 	add	r2,r3,r2
 4020340:	10c00804 	addi	r3,r2,32
 4020344:	00aaaaf4 	movhi	r2,43691
 4020348:	10aaaa84 	addi	r2,r2,-21846
 402034c:	18800015 	stw	r2,0(r3)
	szData[nItemNum - 2] = 0x55555555;
 4020350:	e0b7ef17 	ldw	r2,-8260(fp)
 4020354:	10bfff84 	addi	r2,r2,-2
 4020358:	1085883a 	add	r2,r2,r2
 402035c:	1085883a 	add	r2,r2,r2
 4020360:	e137e904 	addi	r4,fp,-8284
 4020364:	2085883a 	add	r2,r4,r2
 4020368:	10c00804 	addi	r3,r2,32
 402036c:	00955574 	movhi	r2,21845
 4020370:	10955544 	addi	r2,r2,21845
 4020374:	18800015 	stw	r2,0(r3)
	szData[nItemNum - 3] = 0x00000000;
 4020378:	e0b7ef17 	ldw	r2,-8260(fp)
 402037c:	10bfff44 	addi	r2,r2,-3
 4020380:	1085883a 	add	r2,r2,r2
 4020384:	1085883a 	add	r2,r2,r2
 4020388:	e0f7e904 	addi	r3,fp,-8284
 402038c:	1885883a 	add	r2,r3,r2
 4020390:	10800804 	addi	r2,r2,32
 4020394:	10000015 	stw	zero,0(r2)
	szData[nItemNum - 4] = 0xFFFFFFFF;
 4020398:	e0b7ef17 	ldw	r2,-8260(fp)
 402039c:	10bfff04 	addi	r2,r2,-4
 40203a0:	1085883a 	add	r2,r2,r2
 40203a4:	1085883a 	add	r2,r2,r2
 40203a8:	e137e904 	addi	r4,fp,-8284
 40203ac:	2085883a 	add	r2,r4,r2
 40203b0:	10800804 	addi	r2,r2,32
 40203b4:	00ffffc4 	movi	r3,-1
 40203b8:	10c00015 	stw	r3,0(r2)

	// write
	pDes = (alt_u32 *) BaseAddr;
 40203bc:	e0bffd17 	ldw	r2,-12(fp)
 40203c0:	e0b7eb15 	stw	r2,-8276(fp)
	nAccessLen = sizeof(szData);
 40203c4:	00840104 	movi	r2,4100
 40203c8:	e0b7ea15 	stw	r2,-8280(fp)
	nPos = 0;
 40203cc:	e037ec15 	stw	zero,-8272(fp)
	while (nPos < ByteLen) {
 40203d0:	00001d06 	br	4020448 <recordAudio+0x250>
		nRemainedLen = ByteLen - nPos;
 40203d4:	e0fffe17 	ldw	r3,-8(fp)
 40203d8:	e0b7ec17 	ldw	r2,-8272(fp)
 40203dc:	1885c83a 	sub	r2,r3,r2
 40203e0:	e0b7f015 	stw	r2,-8256(fp)
		if (nAccessLen > nRemainedLen)
 40203e4:	e0b7ea17 	ldw	r2,-8280(fp)
 40203e8:	e0f7f017 	ldw	r3,-8256(fp)
 40203ec:	1880020e 	bge	r3,r2,40203f8 <recordAudio+0x200>
			nAccessLen = nRemainedLen;
 40203f0:	e0b7f017 	ldw	r2,-8256(fp)
 40203f4:	e0b7ea15 	stw	r2,-8280(fp)
		memcpy(pDes, szData, nAccessLen);
 40203f8:	e0b7ea17 	ldw	r2,-8280(fp)
 40203fc:	e0f7f104 	addi	r3,fp,-8252
 4020400:	e137eb17 	ldw	r4,-8276(fp)
 4020404:	180b883a 	mov	r5,r3
 4020408:	100d883a 	mov	r6,r2
 402040c:	40211340 	call	4021134 <memcpy>
		pDes += nAccessLen / 4;
 4020410:	e0b7ea17 	ldw	r2,-8280(fp)
 4020414:	1000010e 	bge	r2,zero,402041c <recordAudio+0x224>
 4020418:	108000c4 	addi	r2,r2,3
 402041c:	1005d0ba 	srai	r2,r2,2
 4020420:	1085883a 	add	r2,r2,r2
 4020424:	1085883a 	add	r2,r2,r2
 4020428:	1007883a 	mov	r3,r2
 402042c:	e0b7eb17 	ldw	r2,-8276(fp)
 4020430:	10c5883a 	add	r2,r2,r3
 4020434:	e0b7eb15 	stw	r2,-8276(fp)
		nPos += nAccessLen;
 4020438:	e0b7ea17 	ldw	r2,-8280(fp)
 402043c:	e0f7ec17 	ldw	r3,-8272(fp)
 4020440:	1885883a 	add	r2,r3,r2
 4020444:	e0b7ec15 	stw	r2,-8272(fp)

	// write
	pDes = (alt_u32 *) BaseAddr;
	nAccessLen = sizeof(szData);
	nPos = 0;
	while (nPos < ByteLen) {
 4020448:	e0f7ec17 	ldw	r3,-8272(fp)
 402044c:	e0bffe17 	ldw	r2,-8(fp)
 4020450:	18bfe036 	bltu	r3,r2,40203d4 <__flash_rwdata_start+0xfffefb10>
		memcpy(pDes, szData, nAccessLen);
		pDes += nAccessLen / 4;
		nPos += nAccessLen;

		}
	}
 4020454:	e037883a 	mov	sp,fp
 4020458:	dfc00117 	ldw	ra,4(sp)
 402045c:	df000017 	ldw	fp,0(sp)
 4020460:	dec00204 	addi	sp,sp,8
 4020464:	f800283a 	ret

04020468 <playAudio>:

	//alt_dcache_flush_all();

static void playAudio(alt_u32 BaseAddr, alt_u32 ByteLen, alt_u32 InitValue) {
 4020468:	def7e704 	addi	sp,sp,-8292
 402046c:	dfc81815 	stw	ra,8288(sp)
 4020470:	df081715 	stw	fp,8284(sp)
 4020474:	df081704 	addi	fp,sp,8284
 4020478:	e13ffd15 	stw	r4,-12(fp)
 402047c:	e17ffe15 	stw	r5,-8(fp)
 4020480:	e1bfff15 	stw	r6,-4(fp)

	bool bPass = TRUE;
 4020484:	00800044 	movi	r2,1
 4020488:	e0b7e915 	stw	r2,-8284(fp)
	alt_u32 szData[1025];
	alt_u32 szRead[1025];
	int i, nRemainedLen, nAccessLen;
	alt_u32 *pDes, *pSrc, nItemNum, nPos;

	int nProgressIndex = 0;
 402048c:	e037ee15 	stw	zero,-8264(fp)
	alt_u32 szProgress[10];

	// read & verify
	pSrc = (alt_u32 *) BaseAddr;
 4020490:	e0bffd17 	ldw	r2,-12(fp)
 4020494:	e0b7ec15 	stw	r2,-8272(fp)
	nAccessLen = sizeof(szRead);
 4020498:	00840104 	movi	r2,4100
 402049c:	e0b7eb15 	stw	r2,-8276(fp)
	nPos = 0;
 40204a0:	e037ed15 	stw	zero,-8268(fp)
	while (bPass && nPos < ByteLen) {
 40204a4:	00003906 	br	402058c <playAudio+0x124>
		nRemainedLen = ByteLen - nPos;
 40204a8:	e0fffe17 	ldw	r3,-8(fp)
 40204ac:	e0b7ed17 	ldw	r2,-8268(fp)
 40204b0:	1885c83a 	sub	r2,r3,r2
 40204b4:	e0b7ef15 	stw	r2,-8260(fp)
		if (nAccessLen > nRemainedLen)
 40204b8:	e0b7eb17 	ldw	r2,-8276(fp)
 40204bc:	e0f7ef17 	ldw	r3,-8260(fp)
 40204c0:	1880020e 	bge	r3,r2,40204cc <playAudio+0x64>
			nAccessLen = nRemainedLen;
 40204c4:	e0b7ef17 	ldw	r2,-8260(fp)
 40204c8:	e0b7eb15 	stw	r2,-8276(fp)
		// memset(szRead, 0xAA, nAccessLen); // reset content
		memcpy(szRead, pSrc, nAccessLen);
 40204cc:	e0b7eb17 	ldw	r2,-8276(fp)
 40204d0:	e0fbf204 	addi	r3,fp,-4152
 40204d4:	1809883a 	mov	r4,r3
 40204d8:	e177ec17 	ldw	r5,-8272(fp)
 40204dc:	100d883a 	mov	r6,r2
 40204e0:	40211340 	call	4021134 <memcpy>
		// verify
		nItemNum = nAccessLen / 4;
 40204e4:	e0b7eb17 	ldw	r2,-8276(fp)
 40204e8:	1000010e 	bge	r2,zero,40204f0 <playAudio+0x88>
 40204ec:	108000c4 	addi	r2,r2,3
 40204f0:	1005d0ba 	srai	r2,r2,2
 40204f4:	e0b7f015 	stw	r2,-8256(fp)
		for (i = 0; i < nItemNum && bPass; i++) {
 40204f8:	e037ea15 	stw	zero,-8280(fp)
 40204fc:	00001306 	br	402054c <playAudio+0xe4>
			if (szRead[i] != szData[i]) {
 4020500:	e0b7ea17 	ldw	r2,-8280(fp)
 4020504:	1085883a 	add	r2,r2,r2
 4020508:	1085883a 	add	r2,r2,r2
 402050c:	e0f7e904 	addi	r3,fp,-8284
 4020510:	1885883a 	add	r2,r3,r2
 4020514:	10840904 	addi	r2,r2,4132
 4020518:	10c00017 	ldw	r3,0(r2)
 402051c:	e0b7ea17 	ldw	r2,-8280(fp)
 4020520:	1085883a 	add	r2,r2,r2
 4020524:	1085883a 	add	r2,r2,r2
 4020528:	e137e904 	addi	r4,fp,-8284
 402052c:	2085883a 	add	r2,r4,r2
 4020530:	10800804 	addi	r2,r2,32
 4020534:	10800017 	ldw	r2,0(r2)
 4020538:	18800126 	beq	r3,r2,4020540 <playAudio+0xd8>
				bPass = FALSE;
 402053c:	e037e915 	stw	zero,-8284(fp)
			nAccessLen = nRemainedLen;
		// memset(szRead, 0xAA, nAccessLen); // reset content
		memcpy(szRead, pSrc, nAccessLen);
		// verify
		nItemNum = nAccessLen / 4;
		for (i = 0; i < nItemNum && bPass; i++) {
 4020540:	e0b7ea17 	ldw	r2,-8280(fp)
 4020544:	10800044 	addi	r2,r2,1
 4020548:	e0b7ea15 	stw	r2,-8280(fp)
 402054c:	e0f7ea17 	ldw	r3,-8280(fp)
 4020550:	e0b7f017 	ldw	r2,-8256(fp)
 4020554:	1880022e 	bgeu	r3,r2,4020560 <playAudio+0xf8>
 4020558:	e0b7e917 	ldw	r2,-8284(fp)
 402055c:	103fe81e 	bne	r2,zero,4020500 <__flash_rwdata_start+0xfffefc3c>
			if (szRead[i] != szData[i]) {
				bPass = FALSE;
			}
		}
		//
		pSrc += nItemNum;
 4020560:	e0b7f017 	ldw	r2,-8256(fp)
 4020564:	1085883a 	add	r2,r2,r2
 4020568:	1085883a 	add	r2,r2,r2
 402056c:	1007883a 	mov	r3,r2
 4020570:	e0b7ec17 	ldw	r2,-8272(fp)
 4020574:	10c5883a 	add	r2,r2,r3
 4020578:	e0b7ec15 	stw	r2,-8272(fp)
		nPos += nAccessLen;
 402057c:	e0b7eb17 	ldw	r2,-8276(fp)
 4020580:	e0f7ed17 	ldw	r3,-8268(fp)
 4020584:	1885883a 	add	r2,r3,r2
 4020588:	e0b7ed15 	stw	r2,-8268(fp)

	// read & verify
	pSrc = (alt_u32 *) BaseAddr;
	nAccessLen = sizeof(szRead);
	nPos = 0;
	while (bPass && nPos < ByteLen) {
 402058c:	e0b7e917 	ldw	r2,-8284(fp)
 4020590:	10000326 	beq	r2,zero,40205a0 <playAudio+0x138>
 4020594:	e0f7ed17 	ldw	r3,-8268(fp)
 4020598:	e0bffe17 	ldw	r2,-8(fp)
 402059c:	18bfc236 	bltu	r3,r2,40204a8 <__flash_rwdata_start+0xfffefbe4>
		}
		//
		pSrc += nItemNum;
		nPos += nAccessLen;
	}
}
 40205a0:	e037883a 	mov	sp,fp
 40205a4:	dfc00117 	ldw	ra,4(sp)
 40205a8:	df000017 	ldw	fp,0(sp)
 40205ac:	dec00204 	addi	sp,sp,8
 40205b0:	f800283a 	ret

040205b4 <playIsr>:
static void playIsr(void* context) {
 40205b4:	defffd04 	addi	sp,sp,-12
 40205b8:	df000215 	stw	fp,8(sp)
 40205bc:	df000204 	addi	fp,sp,8
 40205c0:	e13fff15 	stw	r4,-4(fp)
	// Cast context to edge_capture's type. It is important that this
	//	be declared volatile to avoid unwanted compiler optimization.
	volatile int* edge_capture_ptr = (volatile int*) context;
 40205c4:	e0bfff17 	ldw	r2,-4(fp)
 40205c8:	e0bffe15 	stw	r2,-8(fp)

	currentState = PLAYING;
 40205cc:	00800044 	movi	r2,1
 40205d0:	d0a01815 	stw	r2,-32672(gp)
	sdram_current_ptr = sdram_base_ptr;
 40205d4:	d0a00317 	ldw	r2,-32756(gp)
 40205d8:	d0a01715 	stw	r2,-32676(gp)

	// Read the edge capture register on the button PIO.
	// Store value.
	*edge_capture_ptr = IORD_ALTERA_AVALON_PIO_EDGE_CAP(PLAY_BTN_IN_BASE);
 40205dc:	00810134 	movhi	r2,1028
 40205e0:	10840f04 	addi	r2,r2,4156
 40205e4:	10c00037 	ldwio	r3,0(r2)
 40205e8:	e0bffe17 	ldw	r2,-8(fp)
 40205ec:	10c00015 	stw	r3,0(r2)

	// Write to the edge capture register to reset it.
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PLAY_BTN_IN_BASE, 0);
 40205f0:	0007883a 	mov	r3,zero
 40205f4:	00810134 	movhi	r2,1028
 40205f8:	10840f04 	addi	r2,r2,4156
 40205fc:	10c00035 	stwio	r3,0(r2)

	// Read the PIO to delay ISR exit. This is done to prevent a
	// spurious interrupt in systems with high processor -> pio
	// latency and fast interrupts.
	IORD_ALTERA_AVALON_PIO_EDGE_CAP(PLAY_BTN_IN_BASE);
 4020600:	00810134 	movhi	r2,1028
 4020604:	10840f04 	addi	r2,r2,4156
 4020608:	10800037 	ldwio	r2,0(r2)
}
 402060c:	e037883a 	mov	sp,fp
 4020610:	df000017 	ldw	fp,0(sp)
 4020614:	dec00104 	addi	sp,sp,4
 4020618:	f800283a 	ret

0402061c <recordIsr>:

static void recordIsr(void* context) {
 402061c:	defffd04 	addi	sp,sp,-12
 4020620:	df000215 	stw	fp,8(sp)
 4020624:	df000204 	addi	fp,sp,8
 4020628:	e13fff15 	stw	r4,-4(fp)
	// Cast context to edge_capture's type. It is important that this
	//	be declared volatile to avoid unwanted compiler optimization.
	volatile int* edge_capture_ptr = (volatile int*) context;
 402062c:	e0bfff17 	ldw	r2,-4(fp)
 4020630:	e0bffe15 	stw	r2,-8(fp)

	currentState = RECORDING;
 4020634:	00800084 	movi	r2,2
 4020638:	d0a01815 	stw	r2,-32672(gp)
	sdram_current_ptr = sdram_base_ptr;
 402063c:	d0a00317 	ldw	r2,-32756(gp)
 4020640:	d0a01715 	stw	r2,-32676(gp)

	// Read the edge capture register on the button PIO.
	// Store value.
	*edge_capture_ptr = IORD_ALTERA_AVALON_PIO_EDGE_CAP(RECORD_BTN_IN_BASE);
 4020644:	00810134 	movhi	r2,1028
 4020648:	10840b04 	addi	r2,r2,4140
 402064c:	10c00037 	ldwio	r3,0(r2)
 4020650:	e0bffe17 	ldw	r2,-8(fp)
 4020654:	10c00015 	stw	r3,0(r2)

	// Write to the edge capture register to reset it.
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(RECORD_BTN_IN_BASE, 0);
 4020658:	0007883a 	mov	r3,zero
 402065c:	00810134 	movhi	r2,1028
 4020660:	10840b04 	addi	r2,r2,4140
 4020664:	10c00035 	stwio	r3,0(r2)

	// Read the PIO to delay ISR exit. This is done to prevent a
	// spurious interrupt in systems with high processor -> pio
	// latency and fast interrupts.
	IORD_ALTERA_AVALON_PIO_EDGE_CAP(RECORD_BTN_IN_BASE);
 4020668:	00810134 	movhi	r2,1028
 402066c:	10840b04 	addi	r2,r2,4140
 4020670:	10800037 	ldwio	r2,0(r2)
}
 4020674:	e037883a 	mov	sp,fp
 4020678:	df000017 	ldw	fp,0(sp)
 402067c:	dec00104 	addi	sp,sp,4
 4020680:	f800283a 	ret

04020684 <syncIsr>:

static void syncIsr(void* context) {
 4020684:	defffc04 	addi	sp,sp,-16
 4020688:	dfc00315 	stw	ra,12(sp)
 402068c:	df000215 	stw	fp,8(sp)
 4020690:	df000204 	addi	fp,sp,8
 4020694:	e13fff15 	stw	r4,-4(fp)
	// Cast context to edge_capture's type. It is important that this
	//	be declared volatile to avoid unwanted compiler optimization.
	volatile int* edge_capture_ptr = (volatile int*) context;
 4020698:	e0bfff17 	ldw	r2,-4(fp)
 402069c:	e0bffe15 	stw	r2,-8(fp)

	if (currentState == RECORDING) {
 40206a0:	d0a01817 	ldw	r2,-32672(gp)
 40206a4:	10800098 	cmpnei	r2,r2,2
 40206a8:	10000a1e 	bne	r2,zero,40206d4 <syncIsr+0x50>
		//memcpy(sdram_current_ptr++, data_in_ptr, DATA_IN_DATA_WIDTH);
		memcpy(sdram_current_ptr++, data_in_ptr, DATA_OUT_DATA_WIDTH);
 40206ac:	d0a01717 	ldw	r2,-32676(gp)
 40206b0:	10c00104 	addi	r3,r2,4
 40206b4:	d0e01715 	stw	r3,-32676(gp)
 40206b8:	d0e00517 	ldw	r3,-32748(gp)
 40206bc:	1009883a 	mov	r4,r2
 40206c0:	180b883a 	mov	r5,r3
 40206c4:	01800404 	movi	r6,16
 40206c8:	40211340 	call	4021134 <memcpy>
		//recordAudio(SDRAM_BASE, SDRAM_SPAN, *data_in_ptr);
		alt_dcache_flush_all();
 40206cc:	402dd480 	call	402dd48 <alt_dcache_flush_all>
 40206d0:	00000a06 	br	40206fc <syncIsr+0x78>

		//*sdram_current_ptr++ = *data_in_ptr;
	} else if (currentState == PLAYING) {
 40206d4:	d0a01817 	ldw	r2,-32672(gp)
 40206d8:	10800058 	cmpnei	r2,r2,1
 40206dc:	1000071e 	bne	r2,zero,40206fc <syncIsr+0x78>
		//*data_out_ptr = *sdram_current_ptr++;
		//memcpy(data_out_ptr, sdram_current_ptr++, DATA_OUT_DATA_WIDTH);
		memcpy(data_out_ptr, sdram_current_ptr++, DATA_OUT_DATA_WIDTH);
 40206e0:	d1200617 	ldw	r4,-32744(gp)
 40206e4:	d0a01717 	ldw	r2,-32676(gp)
 40206e8:	10c00104 	addi	r3,r2,4
 40206ec:	d0e01715 	stw	r3,-32676(gp)
 40206f0:	100b883a 	mov	r5,r2
 40206f4:	01800404 	movi	r6,16
 40206f8:	40211340 	call	4021134 <memcpy>
		//playAudio(SDRAM_BASE, SDRAM_SPAN, *data_in_ptr);
	}
	if (sdram_current_ptr >= sdram_max_ptr) {
 40206fc:	d0e01717 	ldw	r3,-32676(gp)
 4020700:	d0a00417 	ldw	r2,-32752(gp)
 4020704:	18800c36 	bltu	r3,r2,4020738 <syncIsr+0xb4>
		sdram_current_ptr = sdram_base_ptr;
 4020708:	d0a00317 	ldw	r2,-32756(gp)
 402070c:	d0a01715 	stw	r2,-32676(gp)
		if (currentState == RECORDING) {
 4020710:	d0a01817 	ldw	r2,-32672(gp)
 4020714:	10800098 	cmpnei	r2,r2,2
 4020718:	1000031e 	bne	r2,zero,4020728 <syncIsr+0xa4>
			currentState = PLAYING;
 402071c:	00800044 	movi	r2,1
 4020720:	d0a01815 	stw	r2,-32672(gp)
 4020724:	00000406 	br	4020738 <syncIsr+0xb4>
		} else if (currentState == PLAYING) {
 4020728:	d0a01817 	ldw	r2,-32672(gp)
 402072c:	10800058 	cmpnei	r2,r2,1
 4020730:	1000011e 	bne	r2,zero,4020738 <syncIsr+0xb4>
			currentState = IDLE;
 4020734:	d0201815 	stw	zero,-32672(gp)

	//memcpy(data_out_ptr, data_in_ptr, DATA_IN_DATA_WIDTH); // Passthrough

	// Read the edge capture register on the button PIO.
	// Store value.
	*edge_capture_ptr = IORD_ALTERA_AVALON_PIO_EDGE_CAP(SYNC_IN_BASE);
 4020738:	00810134 	movhi	r2,1028
 402073c:	10841b04 	addi	r2,r2,4204
 4020740:	10c00037 	ldwio	r3,0(r2)
 4020744:	e0bffe17 	ldw	r2,-8(fp)
 4020748:	10c00015 	stw	r3,0(r2)

	// Write to the edge capture register to reset it.
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(SYNC_IN_BASE, 0);
 402074c:	0007883a 	mov	r3,zero
 4020750:	00810134 	movhi	r2,1028
 4020754:	10841b04 	addi	r2,r2,4204
 4020758:	10c00035 	stwio	r3,0(r2)

	// Read the PIO to delay ISR exit. This is done to prevent a
	// spurious interrupt in systems with high processor -> pio
	// latency and fast interrupts.
	IORD_ALTERA_AVALON_PIO_EDGE_CAP(SYNC_IN_BASE);
 402075c:	00810134 	movhi	r2,1028
 4020760:	10841b04 	addi	r2,r2,4204
 4020764:	10800037 	ldwio	r2,0(r2)
}
 4020768:	e037883a 	mov	sp,fp
 402076c:	dfc00117 	ldw	ra,4(sp)
 4020770:	df000017 	ldw	fp,0(sp)
 4020774:	dec00204 	addi	sp,sp,8
 4020778:	f800283a 	ret

0402077c <main>:

int main() {
 402077c:	defffb04 	addi	sp,sp,-20
 4020780:	dfc00415 	stw	ra,16(sp)
 4020784:	df000315 	stw	fp,12(sp)
 4020788:	df000304 	addi	fp,sp,12
	alt_u32 zero = 0;
 402078c:	e03ffe15 	stw	zero,-8(fp)
	 //sdram_current_ptr = zero;
	 } */

	// Recast the edge_capture pointer to match the
	//	alt_irq_register() function prototype.
	 void* edge_capture_ptr = (void*) &edge_capture;
 4020790:	d0a01904 	addi	r2,gp,-32668
 4020794:	e0bfff15 	stw	r2,-4(fp)

	// Enable all 4 button interrupts.
	IOWR_ALTERA_AVALON_PIO_IRQ_MASK(PLAY_BTN_IN_BASE, 0xf);
 4020798:	00c003c4 	movi	r3,15
 402079c:	00810134 	movhi	r2,1028
 40207a0:	10840e04 	addi	r2,r2,4152
 40207a4:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_IRQ_MASK(RECORD_BTN_IN_BASE, 0xf);
 40207a8:	00c003c4 	movi	r3,15
 40207ac:	00810134 	movhi	r2,1028
 40207b0:	10840a04 	addi	r2,r2,4136
 40207b4:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_IRQ_MASK(SYNC_IN_BASE, 0xf);
 40207b8:	00c003c4 	movi	r3,15
 40207bc:	00810134 	movhi	r2,1028
 40207c0:	10841a04 	addi	r2,r2,4200
 40207c4:	10c00035 	stwio	r3,0(r2)

	// Reset the edge capture register.
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PLAY_BTN_IN_BASE, 0x0);
 40207c8:	0007883a 	mov	r3,zero
 40207cc:	00810134 	movhi	r2,1028
 40207d0:	10840f04 	addi	r2,r2,4156
 40207d4:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(RECORD_BTN_IN_BASE, 0x0);
 40207d8:	0007883a 	mov	r3,zero
 40207dc:	00810134 	movhi	r2,1028
 40207e0:	10840b04 	addi	r2,r2,4140
 40207e4:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(SYNC_IN_BASE, 0x0);
 40207e8:	0007883a 	mov	r3,zero
 40207ec:	00810134 	movhi	r2,1028
 40207f0:	10841b04 	addi	r2,r2,4204
 40207f4:	10c00035 	stwio	r3,0(r2)

	// Register the ISR.
	alt_ic_isr_register(PLAY_BTN_IN_IRQ_INTERRUPT_CONTROLLER_ID,
 40207f8:	d8000015 	stw	zero,0(sp)
 40207fc:	0009883a 	mov	r4,zero
 4020800:	01400104 	movi	r5,4
 4020804:	018100b4 	movhi	r6,1026
 4020808:	31816d04 	addi	r6,r6,1460
 402080c:	e1ffff17 	ldw	r7,-4(fp)
 4020810:	402de980 	call	402de98 <alt_ic_isr_register>
			PLAY_BTN_IN_IRQ, playIsr, edge_capture_ptr, 0x0);
	alt_ic_isr_register(RECORD_BTN_IN_IRQ_INTERRUPT_CONTROLLER_ID,
 4020814:	d8000015 	stw	zero,0(sp)
 4020818:	0009883a 	mov	r4,zero
 402081c:	01400144 	movi	r5,5
 4020820:	018100b4 	movhi	r6,1026
 4020824:	31818704 	addi	r6,r6,1564
 4020828:	e1ffff17 	ldw	r7,-4(fp)
 402082c:	402de980 	call	402de98 <alt_ic_isr_register>
			RECORD_BTN_IN_IRQ, recordIsr, edge_capture_ptr, 0x0);
	alt_ic_isr_register(SYNC_IN_IRQ_INTERRUPT_CONTROLLER_ID, SYNC_IN_IRQ,
 4020830:	d8000015 	stw	zero,0(sp)
 4020834:	0009883a 	mov	r4,zero
 4020838:	014000c4 	movi	r5,3
 402083c:	018100b4 	movhi	r6,1026
 4020840:	3181a104 	addi	r6,r6,1668
 4020844:	e1ffff17 	ldw	r7,-4(fp)
 4020848:	402de980 	call	402de98 <alt_ic_isr_register>
			syncIsr, edge_capture_ptr, 0x0);

	while (1) {
		switch (edge_capture) {
 402084c:	d0a01917 	ldw	r2,-32668(gp)
 4020850:	10c00120 	cmpeqi	r3,r2,4
 4020854:	1800051e 	bne	r3,zero,402086c <main+0xf0>
 4020858:	10c00160 	cmpeqi	r3,r2,5
 402085c:	1800051e 	bne	r3,zero,4020874 <main+0xf8>
 4020860:	108000e0 	cmpeqi	r2,r2,3
 4020864:	1000051e 	bne	r2,zero,402087c <main+0x100>
			//*led_out_ptr = 0b0000010;
			edge_capture = 0;
			break;
		default:
			//*led_out_ptr = 0b0000011;
			break;
 4020868:	00000606 	br	4020884 <main+0x108>

	while (1) {
		switch (edge_capture) {
		case PLAY_BTN_IN_IRQ:
			//*led_out_ptr = 0b0000001;
			edge_capture = 0;
 402086c:	d0201915 	stw	zero,-32668(gp)
			break;
 4020870:	00000406 	br	4020884 <main+0x108>
		case RECORD_BTN_IN_IRQ:
			//*led_out_ptr = 0b0000010;
			edge_capture = 0;
 4020874:	d0201915 	stw	zero,-32668(gp)
			break;
 4020878:	00000206 	br	4020884 <main+0x108>
		case SYNC_IN_IRQ:
			//*led_out_ptr = 0b0000010;
			edge_capture = 0;
 402087c:	d0201915 	stw	zero,-32668(gp)
			break;
 4020880:	0001883a 	nop
		default:
			//*led_out_ptr = 0b0000011;
			break;
		}
	}
 4020884:	003ff106 	br	402084c <__flash_rwdata_start+0xfffeff88>

04020888 <TMEM_Verify>:
#include "terasic_includes.h"
#include "mem_verify.h"



bool TMEM_Verify(alt_u32 BaseAddr, alt_u32 ByteLen, alt_u32 InitValue, bool bShowMessage){
 4020888:	def7e504 	addi	sp,sp,-8300
 402088c:	dfc81a15 	stw	ra,8296(sp)
 4020890:	df081915 	stw	fp,8292(sp)
 4020894:	df081904 	addi	fp,sp,8292
 4020898:	e13ffc15 	stw	r4,-16(fp)
 402089c:	e17ffd15 	stw	r5,-12(fp)
 40208a0:	e1bffe15 	stw	r6,-8(fp)
 40208a4:	e1ffff15 	stw	r7,-4(fp)
    bool bPass = TRUE;
 40208a8:	00800044 	movi	r2,1
 40208ac:	e0b7e715 	stw	r2,-8292(fp)
    alt_u32 szData[1025];
    alt_u32 szRead[1025];
    int i, nRemainedLen, nAccessLen;
    alt_u32 *pDes, *pSrc, nItemNum, nPos;

    int nProgressIndex=0;
 40208b0:	e037ed15 	stw	zero,-8268(fp)
    alt_u32 szProgress[10];
    
    for(i=0;i<10;i++){
 40208b4:	e037e815 	stw	zero,-8288(fp)
 40208b8:	00001506 	br	4020910 <TMEM_Verify+0x88>
        szProgress[i] = ByteLen/10*(i+1);     
 40208bc:	e0bffd17 	ldw	r2,-12(fp)
 40208c0:	1009883a 	mov	r4,r2
 40208c4:	01400284 	movi	r5,10
 40208c8:	40210fc0 	call	40210fc <__udivsi3>
 40208cc:	1007883a 	mov	r3,r2
 40208d0:	e0b7e817 	ldw	r2,-8288(fp)
 40208d4:	10800044 	addi	r2,r2,1
 40208d8:	1809883a 	mov	r4,r3
 40208dc:	100b883a 	mov	r5,r2
 40208e0:	402110c0 	call	402110c <__mulsi3>
 40208e4:	1007883a 	mov	r3,r2
 40208e8:	e0b7e817 	ldw	r2,-8288(fp)
 40208ec:	1085883a 	add	r2,r2,r2
 40208f0:	1085883a 	add	r2,r2,r2
 40208f4:	e137e704 	addi	r4,fp,-8292
 40208f8:	2085883a 	add	r2,r4,r2
 40208fc:	10880b04 	addi	r2,r2,8236
 4020900:	10c00015 	stw	r3,0(r2)
    alt_u32 *pDes, *pSrc, nItemNum, nPos;

    int nProgressIndex=0;
    alt_u32 szProgress[10];
    
    for(i=0;i<10;i++){
 4020904:	e0b7e817 	ldw	r2,-8288(fp)
 4020908:	10800044 	addi	r2,r2,1
 402090c:	e0b7e815 	stw	r2,-8288(fp)
 4020910:	e0b7e817 	ldw	r2,-8288(fp)
 4020914:	10800290 	cmplti	r2,r2,10
 4020918:	103fe81e 	bne	r2,zero,40208bc <__flash_rwdata_start+0xfffefff8>
        szProgress[i] = ByteLen/10*(i+1);     
    }
    
    
    
    nItemNum = sizeof(szData)/sizeof(szData[0]);
 402091c:	00810044 	movi	r2,1025
 4020920:	e0b7ee15 	stw	r2,-8264(fp)
    for(i=0;i<nItemNum;i++){
 4020924:	e037e815 	stw	zero,-8288(fp)
 4020928:	00002106 	br	40209b0 <TMEM_Verify+0x128>
        if (i == 0)
 402092c:	e0b7e817 	ldw	r2,-8288(fp)
 4020930:	1000091e 	bne	r2,zero,4020958 <TMEM_Verify+0xd0>
            szData[i] = InitValue;
 4020934:	e0b7e817 	ldw	r2,-8288(fp)
 4020938:	1085883a 	add	r2,r2,r2
 402093c:	1085883a 	add	r2,r2,r2
 4020940:	e0f7e704 	addi	r3,fp,-8292
 4020944:	1885883a 	add	r2,r3,r2
 4020948:	10800904 	addi	r2,r2,36
 402094c:	e0fffe17 	ldw	r3,-8(fp)
 4020950:	10c00015 	stw	r3,0(r2)
 4020954:	00001306 	br	40209a4 <TMEM_Verify+0x11c>
        else     
            szData[i] = szData[i-1] * 13;
 4020958:	e0b7e817 	ldw	r2,-8288(fp)
 402095c:	10bfffc4 	addi	r2,r2,-1
 4020960:	1085883a 	add	r2,r2,r2
 4020964:	1085883a 	add	r2,r2,r2
 4020968:	e137e704 	addi	r4,fp,-8292
 402096c:	2085883a 	add	r2,r4,r2
 4020970:	10800904 	addi	r2,r2,36
 4020974:	10800017 	ldw	r2,0(r2)
 4020978:	1009883a 	mov	r4,r2
 402097c:	01400344 	movi	r5,13
 4020980:	402110c0 	call	402110c <__mulsi3>
 4020984:	1007883a 	mov	r3,r2
 4020988:	e0b7e817 	ldw	r2,-8288(fp)
 402098c:	1085883a 	add	r2,r2,r2
 4020990:	1085883a 	add	r2,r2,r2
 4020994:	e137e704 	addi	r4,fp,-8292
 4020998:	2085883a 	add	r2,r4,r2
 402099c:	10800904 	addi	r2,r2,36
 40209a0:	10c00015 	stw	r3,0(r2)
    }
    
    
    
    nItemNum = sizeof(szData)/sizeof(szData[0]);
    for(i=0;i<nItemNum;i++){
 40209a4:	e0b7e817 	ldw	r2,-8288(fp)
 40209a8:	10800044 	addi	r2,r2,1
 40209ac:	e0b7e815 	stw	r2,-8288(fp)
 40209b0:	e0f7e817 	ldw	r3,-8288(fp)
 40209b4:	e0b7ee17 	ldw	r2,-8264(fp)
 40209b8:	18bfdc36 	bltu	r3,r2,402092c <__flash_rwdata_start+0xffff0068>
        if (i == 0)
            szData[i] = InitValue;
        else     
            szData[i] = szData[i-1] * 13;
    }
    szData[nItemNum-1] = 0xAAAAAAAA;
 40209bc:	e0b7ee17 	ldw	r2,-8264(fp)
 40209c0:	10bfffc4 	addi	r2,r2,-1
 40209c4:	1085883a 	add	r2,r2,r2
 40209c8:	1085883a 	add	r2,r2,r2
 40209cc:	e0f7e704 	addi	r3,fp,-8292
 40209d0:	1885883a 	add	r2,r3,r2
 40209d4:	10c00904 	addi	r3,r2,36
 40209d8:	00aaaaf4 	movhi	r2,43691
 40209dc:	10aaaa84 	addi	r2,r2,-21846
 40209e0:	18800015 	stw	r2,0(r3)
    szData[nItemNum-2] = 0x55555555;
 40209e4:	e0b7ee17 	ldw	r2,-8264(fp)
 40209e8:	10bfff84 	addi	r2,r2,-2
 40209ec:	1085883a 	add	r2,r2,r2
 40209f0:	1085883a 	add	r2,r2,r2
 40209f4:	e137e704 	addi	r4,fp,-8292
 40209f8:	2085883a 	add	r2,r4,r2
 40209fc:	10c00904 	addi	r3,r2,36
 4020a00:	00955574 	movhi	r2,21845
 4020a04:	10955544 	addi	r2,r2,21845
 4020a08:	18800015 	stw	r2,0(r3)
    szData[nItemNum-3] = 0x00000000;
 4020a0c:	e0b7ee17 	ldw	r2,-8264(fp)
 4020a10:	10bfff44 	addi	r2,r2,-3
 4020a14:	1085883a 	add	r2,r2,r2
 4020a18:	1085883a 	add	r2,r2,r2
 4020a1c:	e0f7e704 	addi	r3,fp,-8292
 4020a20:	1885883a 	add	r2,r3,r2
 4020a24:	10800904 	addi	r2,r2,36
 4020a28:	10000015 	stw	zero,0(r2)
    szData[nItemNum-4] = 0xFFFFFFFF;
 4020a2c:	e0b7ee17 	ldw	r2,-8264(fp)
 4020a30:	10bfff04 	addi	r2,r2,-4
 4020a34:	1085883a 	add	r2,r2,r2
 4020a38:	1085883a 	add	r2,r2,r2
 4020a3c:	e137e704 	addi	r4,fp,-8292
 4020a40:	2085883a 	add	r2,r4,r2
 4020a44:	10800904 	addi	r2,r2,36
 4020a48:	00ffffc4 	movi	r3,-1
 4020a4c:	10c00015 	stw	r3,0(r2)
    
    if (bShowMessage)
 4020a50:	e0bfff17 	ldw	r2,-4(fp)
 4020a54:	10000326 	beq	r2,zero,4020a64 <TMEM_Verify+0x1dc>
        printf("write...\n");
 4020a58:	01000034 	movhi	r4,0
 4020a5c:	21000004 	addi	r4,r4,0
 4020a60:	402139c0 	call	402139c <puts>
    // write
    pDes = (alt_u32 *)BaseAddr;
 4020a64:	e0bffc17 	ldw	r2,-16(fp)
 4020a68:	e0b7ea15 	stw	r2,-8280(fp)
    nAccessLen = sizeof(szData);
 4020a6c:	00840104 	movi	r2,4100
 4020a70:	e0b7e915 	stw	r2,-8284(fp)
    nPos = 0;
 4020a74:	e037ec15 	stw	zero,-8272(fp)
    while(nPos < ByteLen){
 4020a78:	00003706 	br	4020b58 <TMEM_Verify+0x2d0>
        nRemainedLen = ByteLen - nPos;
 4020a7c:	e0fffd17 	ldw	r3,-12(fp)
 4020a80:	e0b7ec17 	ldw	r2,-8272(fp)
 4020a84:	1885c83a 	sub	r2,r3,r2
 4020a88:	e0b7ef15 	stw	r2,-8260(fp)
        if (nAccessLen > nRemainedLen)
 4020a8c:	e0b7e917 	ldw	r2,-8284(fp)
 4020a90:	e0f7ef17 	ldw	r3,-8260(fp)
 4020a94:	1880020e 	bge	r3,r2,4020aa0 <TMEM_Verify+0x218>
            nAccessLen = nRemainedLen;
 4020a98:	e0b7ef17 	ldw	r2,-8260(fp)
 4020a9c:	e0b7e915 	stw	r2,-8284(fp)
        memcpy(pDes, szData, nAccessLen);
 4020aa0:	e0b7e917 	ldw	r2,-8284(fp)
 4020aa4:	e0f7f004 	addi	r3,fp,-8256
 4020aa8:	e137ea17 	ldw	r4,-8280(fp)
 4020aac:	180b883a 	mov	r5,r3
 4020ab0:	100d883a 	mov	r6,r2
 4020ab4:	40211340 	call	4021134 <memcpy>
        pDes += nAccessLen/4;
 4020ab8:	e0b7e917 	ldw	r2,-8284(fp)
 4020abc:	1000010e 	bge	r2,zero,4020ac4 <TMEM_Verify+0x23c>
 4020ac0:	108000c4 	addi	r2,r2,3
 4020ac4:	1005d0ba 	srai	r2,r2,2
 4020ac8:	1085883a 	add	r2,r2,r2
 4020acc:	1085883a 	add	r2,r2,r2
 4020ad0:	1007883a 	mov	r3,r2
 4020ad4:	e0b7ea17 	ldw	r2,-8280(fp)
 4020ad8:	10c5883a 	add	r2,r2,r3
 4020adc:	e0b7ea15 	stw	r2,-8280(fp)
        nPos += nAccessLen;
 4020ae0:	e0b7e917 	ldw	r2,-8284(fp)
 4020ae4:	e0f7ec17 	ldw	r3,-8272(fp)
 4020ae8:	1885883a 	add	r2,r3,r2
 4020aec:	e0b7ec15 	stw	r2,-8272(fp)
        
        if (bShowMessage){
 4020af0:	e0bfff17 	ldw	r2,-4(fp)
 4020af4:	10001826 	beq	r2,zero,4020b58 <TMEM_Verify+0x2d0>
            if (nProgressIndex <= 9 && nPos >= szProgress[nProgressIndex]){
 4020af8:	e0b7ed17 	ldw	r2,-8268(fp)
 4020afc:	10800288 	cmpgei	r2,r2,10
 4020b00:	1000151e 	bne	r2,zero,4020b58 <TMEM_Verify+0x2d0>
 4020b04:	e0b7ed17 	ldw	r2,-8268(fp)
 4020b08:	1085883a 	add	r2,r2,r2
 4020b0c:	1085883a 	add	r2,r2,r2
 4020b10:	e0f7e704 	addi	r3,fp,-8292
 4020b14:	1885883a 	add	r2,r3,r2
 4020b18:	10880b04 	addi	r2,r2,8236
 4020b1c:	10800017 	ldw	r2,0(r2)
 4020b20:	e0f7ec17 	ldw	r3,-8272(fp)
 4020b24:	18800c36 	bltu	r3,r2,4020b58 <TMEM_Verify+0x2d0>
                nProgressIndex++;
 4020b28:	e0b7ed17 	ldw	r2,-8268(fp)
 4020b2c:	10800044 	addi	r2,r2,1
 4020b30:	e0b7ed15 	stw	r2,-8268(fp)
                printf("%02d%% ", nProgressIndex*10);
 4020b34:	e137ed17 	ldw	r4,-8268(fp)
 4020b38:	01400284 	movi	r5,10
 4020b3c:	402110c0 	call	402110c <__mulsi3>
 4020b40:	01000034 	movhi	r4,0
 4020b44:	21000304 	addi	r4,r4,12
 4020b48:	100b883a 	mov	r5,r2
 4020b4c:	40212980 	call	4021298 <printf>
                usleep(50);
 4020b50:	01000c84 	movi	r4,50
 4020b54:	402e94c0 	call	402e94c <usleep>
        printf("write...\n");
    // write
    pDes = (alt_u32 *)BaseAddr;
    nAccessLen = sizeof(szData);
    nPos = 0;
    while(nPos < ByteLen){
 4020b58:	e0f7ec17 	ldw	r3,-8272(fp)
 4020b5c:	e0bffd17 	ldw	r2,-12(fp)
 4020b60:	18bfc636 	bltu	r3,r2,4020a7c <__flash_rwdata_start+0xffff01b8>
                usleep(50);
            }
        }            
    } 
    
    alt_dcache_flush_all();
 4020b64:	402dd480 	call	402dd48 <alt_dcache_flush_all>
    
    if (bShowMessage){
 4020b68:	e0bfff17 	ldw	r2,-4(fp)
 4020b6c:	10000626 	beq	r2,zero,4020b88 <TMEM_Verify+0x300>
        nProgressIndex = 0;
 4020b70:	e037ed15 	stw	zero,-8268(fp)
        printf("\nread/verify...\n");
 4020b74:	01000034 	movhi	r4,0
 4020b78:	21000504 	addi	r4,r4,20
 4020b7c:	402139c0 	call	402139c <puts>
        usleep(50);
 4020b80:	01000c84 	movi	r4,50
 4020b84:	402e94c0 	call	402e94c <usleep>
    }        
    
    // read & verify
    pSrc = (alt_u32 *)BaseAddr;
 4020b88:	e0bffc17 	ldw	r2,-16(fp)
 4020b8c:	e0b7eb15 	stw	r2,-8276(fp)
    nAccessLen = sizeof(szRead);
 4020b90:	00840104 	movi	r2,4100
 4020b94:	e0b7e915 	stw	r2,-8284(fp)
    nPos = 0;
 4020b98:	e037ec15 	stw	zero,-8272(fp)
    while(bPass && nPos < ByteLen){
 4020b9c:	00006f06 	br	4020d5c <TMEM_Verify+0x4d4>
        nRemainedLen = ByteLen - nPos;
 4020ba0:	e0fffd17 	ldw	r3,-12(fp)
 4020ba4:	e0b7ec17 	ldw	r2,-8272(fp)
 4020ba8:	1885c83a 	sub	r2,r3,r2
 4020bac:	e0b7ef15 	stw	r2,-8260(fp)
        if (nAccessLen > nRemainedLen)
 4020bb0:	e0b7e917 	ldw	r2,-8284(fp)
 4020bb4:	e0f7ef17 	ldw	r3,-8260(fp)
 4020bb8:	1880020e 	bge	r3,r2,4020bc4 <TMEM_Verify+0x33c>
            nAccessLen = nRemainedLen;
 4020bbc:	e0b7ef17 	ldw	r2,-8260(fp)
 4020bc0:	e0b7e915 	stw	r2,-8284(fp)
       // memset(szRead, 0xAA, nAccessLen); // reset content    
        memcpy(szRead, pSrc, nAccessLen);
 4020bc4:	e0b7e917 	ldw	r2,-8284(fp)
 4020bc8:	e0fbf104 	addi	r3,fp,-4156
 4020bcc:	1809883a 	mov	r4,r3
 4020bd0:	e177eb17 	ldw	r5,-8276(fp)
 4020bd4:	100d883a 	mov	r6,r2
 4020bd8:	40211340 	call	4021134 <memcpy>
        // verify
        nItemNum = nAccessLen / 4;
 4020bdc:	e0b7e917 	ldw	r2,-8284(fp)
 4020be0:	1000010e 	bge	r2,zero,4020be8 <TMEM_Verify+0x360>
 4020be4:	108000c4 	addi	r2,r2,3
 4020be8:	1005d0ba 	srai	r2,r2,2
 4020bec:	e0b7ee15 	stw	r2,-8264(fp)
        for(i=0;i<nItemNum && bPass;i++){
 4020bf0:	e037e815 	stw	zero,-8288(fp)
 4020bf4:	00002f06 	br	4020cb4 <TMEM_Verify+0x42c>
            if (szRead[i] != szData[i]){
 4020bf8:	e0b7e817 	ldw	r2,-8288(fp)
 4020bfc:	1085883a 	add	r2,r2,r2
 4020c00:	1085883a 	add	r2,r2,r2
 4020c04:	e137e704 	addi	r4,fp,-8292
 4020c08:	2085883a 	add	r2,r4,r2
 4020c0c:	10840a04 	addi	r2,r2,4136
 4020c10:	10c00017 	ldw	r3,0(r2)
 4020c14:	e0b7e817 	ldw	r2,-8288(fp)
 4020c18:	1085883a 	add	r2,r2,r2
 4020c1c:	1085883a 	add	r2,r2,r2
 4020c20:	e137e704 	addi	r4,fp,-8292
 4020c24:	2085883a 	add	r2,r4,r2
 4020c28:	10800904 	addi	r2,r2,36
 4020c2c:	10800017 	ldw	r2,0(r2)
 4020c30:	18801d26 	beq	r3,r2,4020ca8 <TMEM_Verify+0x420>
                if (bShowMessage){
 4020c34:	e0bfff17 	ldw	r2,-4(fp)
 4020c38:	10001a26 	beq	r2,zero,4020ca4 <TMEM_Verify+0x41c>
                   printf("verify ng, read=%08Xh, expected=%08Xh, i=%Xh\n", (int)szRead[i], (int)szData[i], (int)(nPos/4+i));
 4020c3c:	e0b7e817 	ldw	r2,-8288(fp)
 4020c40:	1085883a 	add	r2,r2,r2
 4020c44:	1085883a 	add	r2,r2,r2
 4020c48:	e0f7e704 	addi	r3,fp,-8292
 4020c4c:	1885883a 	add	r2,r3,r2
 4020c50:	10840a04 	addi	r2,r2,4136
 4020c54:	10800017 	ldw	r2,0(r2)
 4020c58:	100b883a 	mov	r5,r2
 4020c5c:	e0b7e817 	ldw	r2,-8288(fp)
 4020c60:	1085883a 	add	r2,r2,r2
 4020c64:	1085883a 	add	r2,r2,r2
 4020c68:	e137e704 	addi	r4,fp,-8292
 4020c6c:	2085883a 	add	r2,r4,r2
 4020c70:	10800904 	addi	r2,r2,36
 4020c74:	10800017 	ldw	r2,0(r2)
 4020c78:	100d883a 	mov	r6,r2
 4020c7c:	e0b7ec17 	ldw	r2,-8272(fp)
 4020c80:	1006d0ba 	srli	r3,r2,2
 4020c84:	e0b7e817 	ldw	r2,-8288(fp)
 4020c88:	1885883a 	add	r2,r3,r2
 4020c8c:	01000034 	movhi	r4,0
 4020c90:	21000904 	addi	r4,r4,36
 4020c94:	100f883a 	mov	r7,r2
 4020c98:	40212980 	call	4021298 <printf>
                   usleep(50);
 4020c9c:	01000c84 	movi	r4,50
 4020ca0:	402e94c0 	call	402e94c <usleep>
                }   
                bPass = FALSE;
 4020ca4:	e037e715 	stw	zero,-8292(fp)
            nAccessLen = nRemainedLen;
       // memset(szRead, 0xAA, nAccessLen); // reset content    
        memcpy(szRead, pSrc, nAccessLen);
        // verify
        nItemNum = nAccessLen / 4;
        for(i=0;i<nItemNum && bPass;i++){
 4020ca8:	e0b7e817 	ldw	r2,-8288(fp)
 4020cac:	10800044 	addi	r2,r2,1
 4020cb0:	e0b7e815 	stw	r2,-8288(fp)
 4020cb4:	e0f7e817 	ldw	r3,-8288(fp)
 4020cb8:	e0b7ee17 	ldw	r2,-8264(fp)
 4020cbc:	1880022e 	bgeu	r3,r2,4020cc8 <TMEM_Verify+0x440>
 4020cc0:	e0b7e717 	ldw	r2,-8292(fp)
 4020cc4:	103fcc1e 	bne	r2,zero,4020bf8 <__flash_rwdata_start+0xffff0334>
                }   
                bPass = FALSE;
            }    
        }
        //
        pSrc += nItemNum;
 4020cc8:	e0b7ee17 	ldw	r2,-8264(fp)
 4020ccc:	1085883a 	add	r2,r2,r2
 4020cd0:	1085883a 	add	r2,r2,r2
 4020cd4:	1007883a 	mov	r3,r2
 4020cd8:	e0b7eb17 	ldw	r2,-8276(fp)
 4020cdc:	10c5883a 	add	r2,r2,r3
 4020ce0:	e0b7eb15 	stw	r2,-8276(fp)
        nPos += nAccessLen;
 4020ce4:	e0b7e917 	ldw	r2,-8284(fp)
 4020ce8:	e0f7ec17 	ldw	r3,-8272(fp)
 4020cec:	1885883a 	add	r2,r3,r2
 4020cf0:	e0b7ec15 	stw	r2,-8272(fp)

        if (bShowMessage){
 4020cf4:	e0bfff17 	ldw	r2,-4(fp)
 4020cf8:	10001826 	beq	r2,zero,4020d5c <TMEM_Verify+0x4d4>
            if (nProgressIndex <= 9 && nPos >= szProgress[nProgressIndex]){
 4020cfc:	e0b7ed17 	ldw	r2,-8268(fp)
 4020d00:	10800288 	cmpgei	r2,r2,10
 4020d04:	1000151e 	bne	r2,zero,4020d5c <TMEM_Verify+0x4d4>
 4020d08:	e0b7ed17 	ldw	r2,-8268(fp)
 4020d0c:	1085883a 	add	r2,r2,r2
 4020d10:	1085883a 	add	r2,r2,r2
 4020d14:	e0f7e704 	addi	r3,fp,-8292
 4020d18:	1885883a 	add	r2,r3,r2
 4020d1c:	10880b04 	addi	r2,r2,8236
 4020d20:	10800017 	ldw	r2,0(r2)
 4020d24:	e0f7ec17 	ldw	r3,-8272(fp)
 4020d28:	18800c36 	bltu	r3,r2,4020d5c <TMEM_Verify+0x4d4>
                nProgressIndex++;
 4020d2c:	e0b7ed17 	ldw	r2,-8268(fp)
 4020d30:	10800044 	addi	r2,r2,1
 4020d34:	e0b7ed15 	stw	r2,-8268(fp)
                printf("%02d%% ", nProgressIndex*10);
 4020d38:	e137ed17 	ldw	r4,-8268(fp)
 4020d3c:	01400284 	movi	r5,10
 4020d40:	402110c0 	call	402110c <__mulsi3>
 4020d44:	01000034 	movhi	r4,0
 4020d48:	21000304 	addi	r4,r4,12
 4020d4c:	100b883a 	mov	r5,r2
 4020d50:	40212980 	call	4021298 <printf>
                usleep(50);
 4020d54:	01000c84 	movi	r4,50
 4020d58:	402e94c0 	call	402e94c <usleep>
    
    // read & verify
    pSrc = (alt_u32 *)BaseAddr;
    nAccessLen = sizeof(szRead);
    nPos = 0;
    while(bPass && nPos < ByteLen){
 4020d5c:	e0b7e717 	ldw	r2,-8292(fp)
 4020d60:	10000326 	beq	r2,zero,4020d70 <TMEM_Verify+0x4e8>
 4020d64:	e0f7ec17 	ldw	r3,-8272(fp)
 4020d68:	e0bffd17 	ldw	r2,-12(fp)
 4020d6c:	18bf8c36 	bltu	r3,r2,4020ba0 <__flash_rwdata_start+0xffff02dc>
                usleep(50);
            }
        }            
    }     
    
    if (bShowMessage)
 4020d70:	e0bfff17 	ldw	r2,-4(fp)
 4020d74:	10000226 	beq	r2,zero,4020d80 <TMEM_Verify+0x4f8>
        printf("\n");
 4020d78:	01000284 	movi	r4,10
 4020d7c:	40212dc0 	call	40212dc <putchar>
   
    
    return bPass;
 4020d80:	e0b7e717 	ldw	r2,-8292(fp)
}
 4020d84:	e037883a 	mov	sp,fp
 4020d88:	dfc00117 	ldw	ra,4(sp)
 4020d8c:	df000017 	ldw	fp,0(sp)
 4020d90:	dec00204 	addi	sp,sp,8
 4020d94:	f800283a 	ret

04020d98 <TMEM_QuickVerify>:

bool TMEM_QuickVerify(alt_u32 BaseAddr, alt_u32 DataSize, alt_u32 DataWidth, alt_u32 AddrWidth){
 4020d98:	defff104 	addi	sp,sp,-60
 4020d9c:	dfc00e15 	stw	ra,56(sp)
 4020da0:	df000d15 	stw	fp,52(sp)
 4020da4:	df000d04 	addi	fp,sp,52
 4020da8:	e13ffc15 	stw	r4,-16(fp)
 4020dac:	e17ffd15 	stw	r5,-12(fp)
 4020db0:	e1bffe15 	stw	r6,-8(fp)
 4020db4:	e1ffff15 	stw	r7,-4(fp)
    bool bPass = TRUE;
 4020db8:	00800044 	movi	r2,1
 4020dbc:	e0bff315 	stw	r2,-52(fp)
    const alt_u32 TestNum = 1024*512;
 4020dc0:	00800234 	movhi	r2,8
 4020dc4:	e0bff615 	stw	r2,-40(fp)
    const alt_u32 TestPattern = 0xAA;
 4020dc8:	00802a84 	movi	r2,170
 4020dcc:	e0bff715 	stw	r2,-36(fp)
    alt_u32 mask, Read32, Addr32, TestData32, TestAddr32;
    int i;
    
    //alt_u32 *pMem = (alt_u32 *)BaseAddr;
    // test address line
    mask = 0x01;
 4020dd0:	00800044 	movi	r2,1
 4020dd4:	e0bff415 	stw	r2,-48(fp)
    for(i=0;i<AddrWidth && bPass;i++){
 4020dd8:	e03ff515 	stw	zero,-44(fp)
 4020ddc:	00001b06 	br	4020e4c <TMEM_QuickVerify+0xb4>
        //*(pMem + mask) = TestPattern;
        IOWR(BaseAddr, mask, TestPattern);
 4020de0:	e0bff417 	ldw	r2,-48(fp)
 4020de4:	1085883a 	add	r2,r2,r2
 4020de8:	1085883a 	add	r2,r2,r2
 4020dec:	1007883a 	mov	r3,r2
 4020df0:	e0bffc17 	ldw	r2,-16(fp)
 4020df4:	1885883a 	add	r2,r3,r2
 4020df8:	1007883a 	mov	r3,r2
 4020dfc:	e0bff717 	ldw	r2,-36(fp)
 4020e00:	18800035 	stwio	r2,0(r3)
        //if (*(pMem + mask) != TestPattern)
        Read32 = IORD(BaseAddr, mask);
 4020e04:	e0bff417 	ldw	r2,-48(fp)
 4020e08:	1085883a 	add	r2,r2,r2
 4020e0c:	1085883a 	add	r2,r2,r2
 4020e10:	1007883a 	mov	r3,r2
 4020e14:	e0bffc17 	ldw	r2,-16(fp)
 4020e18:	1885883a 	add	r2,r3,r2
 4020e1c:	10800037 	ldwio	r2,0(r2)
 4020e20:	e0bff815 	stw	r2,-32(fp)
        if (Read32 != TestPattern)
 4020e24:	e0fff817 	ldw	r3,-32(fp)
 4020e28:	e0bff717 	ldw	r2,-36(fp)
 4020e2c:	18800126 	beq	r3,r2,4020e34 <TMEM_QuickVerify+0x9c>
            bPass = FALSE;
 4020e30:	e03ff315 	stw	zero,-52(fp)
        mask <<= 1;    
 4020e34:	e0bff417 	ldw	r2,-48(fp)
 4020e38:	1085883a 	add	r2,r2,r2
 4020e3c:	e0bff415 	stw	r2,-48(fp)
    int i;
    
    //alt_u32 *pMem = (alt_u32 *)BaseAddr;
    // test address line
    mask = 0x01;
    for(i=0;i<AddrWidth && bPass;i++){
 4020e40:	e0bff517 	ldw	r2,-44(fp)
 4020e44:	10800044 	addi	r2,r2,1
 4020e48:	e0bff515 	stw	r2,-44(fp)
 4020e4c:	e0fff517 	ldw	r3,-44(fp)
 4020e50:	e0bfff17 	ldw	r2,-4(fp)
 4020e54:	1880022e 	bgeu	r3,r2,4020e60 <TMEM_QuickVerify+0xc8>
 4020e58:	e0bff317 	ldw	r2,-52(fp)
 4020e5c:	103fe01e 	bne	r2,zero,4020de0 <__flash_rwdata_start+0xffff051c>
            bPass = FALSE;
        mask <<= 1;    
    }
    
    // test data line
    mask = 0x01;
 4020e60:	00800044 	movi	r2,1
 4020e64:	e0bff415 	stw	r2,-48(fp)
    for(i=0;i<DataWidth && bPass;i++){
 4020e68:	e03ff515 	stw	zero,-44(fp)
 4020e6c:	00002306 	br	4020efc <TMEM_QuickVerify+0x164>
        //*(pMem+i/32) = mask;
        Addr32 = i*13;
 4020e70:	e13ff517 	ldw	r4,-44(fp)
 4020e74:	01400344 	movi	r5,13
 4020e78:	402110c0 	call	402110c <__mulsi3>
 4020e7c:	e0bff915 	stw	r2,-28(fp)
        IOWR(BaseAddr, Addr32, mask);
 4020e80:	e0bff917 	ldw	r2,-28(fp)
 4020e84:	1085883a 	add	r2,r2,r2
 4020e88:	1085883a 	add	r2,r2,r2
 4020e8c:	1007883a 	mov	r3,r2
 4020e90:	e0bffc17 	ldw	r2,-16(fp)
 4020e94:	1885883a 	add	r2,r3,r2
 4020e98:	1007883a 	mov	r3,r2
 4020e9c:	e0bff417 	ldw	r2,-48(fp)
 4020ea0:	18800035 	stwio	r2,0(r3)
        Read32 = IORD(BaseAddr, Addr32);
 4020ea4:	e0bff917 	ldw	r2,-28(fp)
 4020ea8:	1085883a 	add	r2,r2,r2
 4020eac:	1085883a 	add	r2,r2,r2
 4020eb0:	1007883a 	mov	r3,r2
 4020eb4:	e0bffc17 	ldw	r2,-16(fp)
 4020eb8:	1885883a 	add	r2,r3,r2
 4020ebc:	10800037 	ldwio	r2,0(r2)
 4020ec0:	e0bff815 	stw	r2,-32(fp)
        //if (*(pMem+i/32) != mask)
        if (Read32 != mask)
 4020ec4:	e0fff817 	ldw	r3,-32(fp)
 4020ec8:	e0bff417 	ldw	r2,-48(fp)
 4020ecc:	18800126 	beq	r3,r2,4020ed4 <TMEM_QuickVerify+0x13c>
            bPass = FALSE;
 4020ed0:	e03ff315 	stw	zero,-52(fp)
        mask <<= 1;
 4020ed4:	e0bff417 	ldw	r2,-48(fp)
 4020ed8:	1085883a 	add	r2,r2,r2
 4020edc:	e0bff415 	stw	r2,-48(fp)
        if (mask == 0x00)
 4020ee0:	e0bff417 	ldw	r2,-48(fp)
 4020ee4:	1000021e 	bne	r2,zero,4020ef0 <TMEM_QuickVerify+0x158>
            mask = 0x01;    
 4020ee8:	00800044 	movi	r2,1
 4020eec:	e0bff415 	stw	r2,-48(fp)
        mask <<= 1;    
    }
    
    // test data line
    mask = 0x01;
    for(i=0;i<DataWidth && bPass;i++){
 4020ef0:	e0bff517 	ldw	r2,-44(fp)
 4020ef4:	10800044 	addi	r2,r2,1
 4020ef8:	e0bff515 	stw	r2,-44(fp)
 4020efc:	e0fff517 	ldw	r3,-44(fp)
 4020f00:	e0bffe17 	ldw	r2,-8(fp)
 4020f04:	1880022e 	bgeu	r3,r2,4020f10 <TMEM_QuickVerify+0x178>
 4020f08:	e0bff317 	ldw	r2,-52(fp)
 4020f0c:	103fd81e 	bne	r2,zero,4020e70 <__flash_rwdata_start+0xffff05ac>
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 4020f10:	00800034 	movhi	r2,0
 4020f14:	1087a404 	addi	r2,r2,7824
 4020f18:	10800017 	ldw	r2,0(r2)
        if (mask == 0x00)
            mask = 0x01;    
    }
    
    // random data test
    srand(alt_nticks());
 4020f1c:	1009883a 	mov	r4,r2
 4020f20:	40213b00 	call	40213b0 <srand>
    for(i=0;i<TestNum && bPass;i++){
 4020f24:	e03ff515 	stw	zero,-44(fp)
 4020f28:	00002206 	br	4020fb4 <TMEM_QuickVerify+0x21c>
        TestAddr32 = rand()%(DataSize/4);
 4020f2c:	40213c80 	call	40213c8 <rand>
 4020f30:	1007883a 	mov	r3,r2
 4020f34:	e0bffd17 	ldw	r2,-12(fp)
 4020f38:	1004d0ba 	srli	r2,r2,2
 4020f3c:	1809883a 	mov	r4,r3
 4020f40:	100b883a 	mov	r5,r2
 4020f44:	40211040 	call	4021104 <__umodsi3>
 4020f48:	e0bffa15 	stw	r2,-24(fp)
        TestData32 = rand();
 4020f4c:	40213c80 	call	40213c8 <rand>
 4020f50:	e0bffb15 	stw	r2,-20(fp)
        IOWR(BaseAddr, TestAddr32, TestData32);
 4020f54:	e0bffa17 	ldw	r2,-24(fp)
 4020f58:	1085883a 	add	r2,r2,r2
 4020f5c:	1085883a 	add	r2,r2,r2
 4020f60:	1007883a 	mov	r3,r2
 4020f64:	e0bffc17 	ldw	r2,-16(fp)
 4020f68:	1885883a 	add	r2,r3,r2
 4020f6c:	1007883a 	mov	r3,r2
 4020f70:	e0bffb17 	ldw	r2,-20(fp)
 4020f74:	18800035 	stwio	r2,0(r3)
        Read32 = IORD(BaseAddr, TestAddr32);
 4020f78:	e0bffa17 	ldw	r2,-24(fp)
 4020f7c:	1085883a 	add	r2,r2,r2
 4020f80:	1085883a 	add	r2,r2,r2
 4020f84:	1007883a 	mov	r3,r2
 4020f88:	e0bffc17 	ldw	r2,-16(fp)
 4020f8c:	1885883a 	add	r2,r3,r2
 4020f90:	10800037 	ldwio	r2,0(r2)
 4020f94:	e0bff815 	stw	r2,-32(fp)
        if (Read32 != TestData32)
 4020f98:	e0fff817 	ldw	r3,-32(fp)
 4020f9c:	e0bffb17 	ldw	r2,-20(fp)
 4020fa0:	18800126 	beq	r3,r2,4020fa8 <TMEM_QuickVerify+0x210>
            bPass = FALSE;        
 4020fa4:	e03ff315 	stw	zero,-52(fp)
            mask = 0x01;    
    }
    
    // random data test
    srand(alt_nticks());
    for(i=0;i<TestNum && bPass;i++){
 4020fa8:	e0bff517 	ldw	r2,-44(fp)
 4020fac:	10800044 	addi	r2,r2,1
 4020fb0:	e0bff515 	stw	r2,-44(fp)
 4020fb4:	e0fff517 	ldw	r3,-44(fp)
 4020fb8:	e0bff617 	ldw	r2,-40(fp)
 4020fbc:	1880022e 	bgeu	r3,r2,4020fc8 <TMEM_QuickVerify+0x230>
 4020fc0:	e0bff317 	ldw	r2,-52(fp)
 4020fc4:	103fd91e 	bne	r2,zero,4020f2c <__flash_rwdata_start+0xffff0668>
        if (Read32 != TestData32)
            bPass = FALSE;        
        
    }
    
    return bPass;
 4020fc8:	e0bff317 	ldw	r2,-52(fp)
}
 4020fcc:	e037883a 	mov	sp,fp
 4020fd0:	dfc00117 	ldw	ra,4(sp)
 4020fd4:	df000017 	ldw	fp,0(sp)
 4020fd8:	dec00204 	addi	sp,sp,8
 4020fdc:	f800283a 	ret

04020fe0 <udivmodsi4>:
 4020fe0:	2900182e 	bgeu	r5,r4,4021044 <udivmodsi4+0x64>
 4020fe4:	28001716 	blt	r5,zero,4021044 <udivmodsi4+0x64>
 4020fe8:	00800804 	movi	r2,32
 4020fec:	00c00044 	movi	r3,1
 4020ff0:	00000206 	br	4020ffc <udivmodsi4+0x1c>
 4020ff4:	10001126 	beq	r2,zero,402103c <udivmodsi4+0x5c>
 4020ff8:	28000516 	blt	r5,zero,4021010 <udivmodsi4+0x30>
 4020ffc:	294b883a 	add	r5,r5,r5
 4021000:	10bfffc4 	addi	r2,r2,-1
 4021004:	18c7883a 	add	r3,r3,r3
 4021008:	293ffa36 	bltu	r5,r4,4020ff4 <__flash_rwdata_start+0xffff0730>
 402100c:	18000b26 	beq	r3,zero,402103c <udivmodsi4+0x5c>
 4021010:	0005883a 	mov	r2,zero
 4021014:	21400236 	bltu	r4,r5,4021020 <udivmodsi4+0x40>
 4021018:	2149c83a 	sub	r4,r4,r5
 402101c:	10c4b03a 	or	r2,r2,r3
 4021020:	1806d07a 	srli	r3,r3,1
 4021024:	280ad07a 	srli	r5,r5,1
 4021028:	183ffa1e 	bne	r3,zero,4021014 <__flash_rwdata_start+0xffff0750>
 402102c:	3000011e 	bne	r6,zero,4021034 <udivmodsi4+0x54>
 4021030:	f800283a 	ret
 4021034:	2005883a 	mov	r2,r4
 4021038:	f800283a 	ret
 402103c:	0005883a 	mov	r2,zero
 4021040:	003ffa06 	br	402102c <__flash_rwdata_start+0xffff0768>
 4021044:	00c00044 	movi	r3,1
 4021048:	003ff106 	br	4021010 <__flash_rwdata_start+0xffff074c>

0402104c <__divsi3>:
 402104c:	defffe04 	addi	sp,sp,-8
 4021050:	dfc00115 	stw	ra,4(sp)
 4021054:	dc000015 	stw	r16,0(sp)
 4021058:	20000b16 	blt	r4,zero,4021088 <__divsi3+0x3c>
 402105c:	0021883a 	mov	r16,zero
 4021060:	28000c16 	blt	r5,zero,4021094 <__divsi3+0x48>
 4021064:	000d883a 	mov	r6,zero
 4021068:	4020fe00 	call	4020fe0 <udivmodsi4>
 402106c:	0407c83a 	sub	r3,zero,r16
 4021070:	1884f03a 	xor	r2,r3,r2
 4021074:	1405883a 	add	r2,r2,r16
 4021078:	dfc00117 	ldw	ra,4(sp)
 402107c:	dc000017 	ldw	r16,0(sp)
 4021080:	dec00204 	addi	sp,sp,8
 4021084:	f800283a 	ret
 4021088:	0109c83a 	sub	r4,zero,r4
 402108c:	04000044 	movi	r16,1
 4021090:	283ff40e 	bge	r5,zero,4021064 <__flash_rwdata_start+0xffff07a0>
 4021094:	014bc83a 	sub	r5,zero,r5
 4021098:	8400005c 	xori	r16,r16,1
 402109c:	003ff106 	br	4021064 <__flash_rwdata_start+0xffff07a0>

040210a0 <__modsi3>:
 40210a0:	defffd04 	addi	sp,sp,-12
 40210a4:	dfc00215 	stw	ra,8(sp)
 40210a8:	dc400115 	stw	r17,4(sp)
 40210ac:	dc000015 	stw	r16,0(sp)
 40210b0:	20000c16 	blt	r4,zero,40210e4 <__modsi3+0x44>
 40210b4:	0023883a 	mov	r17,zero
 40210b8:	0021883a 	mov	r16,zero
 40210bc:	28000d16 	blt	r5,zero,40210f4 <__modsi3+0x54>
 40210c0:	01800044 	movi	r6,1
 40210c4:	4020fe00 	call	4020fe0 <udivmodsi4>
 40210c8:	1404f03a 	xor	r2,r2,r16
 40210cc:	8885883a 	add	r2,r17,r2
 40210d0:	dfc00217 	ldw	ra,8(sp)
 40210d4:	dc400117 	ldw	r17,4(sp)
 40210d8:	dc000017 	ldw	r16,0(sp)
 40210dc:	dec00304 	addi	sp,sp,12
 40210e0:	f800283a 	ret
 40210e4:	0109c83a 	sub	r4,zero,r4
 40210e8:	04400044 	movi	r17,1
 40210ec:	043fffc4 	movi	r16,-1
 40210f0:	283ff30e 	bge	r5,zero,40210c0 <__flash_rwdata_start+0xffff07fc>
 40210f4:	014bc83a 	sub	r5,zero,r5
 40210f8:	003ff106 	br	40210c0 <__flash_rwdata_start+0xffff07fc>

040210fc <__udivsi3>:
 40210fc:	000d883a 	mov	r6,zero
 4021100:	4020fe01 	jmpi	4020fe0 <udivmodsi4>

04021104 <__umodsi3>:
 4021104:	01800044 	movi	r6,1
 4021108:	4020fe01 	jmpi	4020fe0 <udivmodsi4>

0402110c <__mulsi3>:
 402110c:	0005883a 	mov	r2,zero
 4021110:	20000726 	beq	r4,zero,4021130 <__mulsi3+0x24>
 4021114:	20c0004c 	andi	r3,r4,1
 4021118:	2008d07a 	srli	r4,r4,1
 402111c:	18000126 	beq	r3,zero,4021124 <__mulsi3+0x18>
 4021120:	1145883a 	add	r2,r2,r5
 4021124:	294b883a 	add	r5,r5,r5
 4021128:	203ffa1e 	bne	r4,zero,4021114 <__flash_rwdata_start+0xffff0850>
 402112c:	f800283a 	ret
 4021130:	f800283a 	ret

04021134 <memcpy>:
 4021134:	deffff04 	addi	sp,sp,-4
 4021138:	dc000015 	stw	r16,0(sp)
 402113c:	00c003c4 	movi	r3,15
 4021140:	2005883a 	mov	r2,r4
 4021144:	1980432e 	bgeu	r3,r6,4021254 <memcpy+0x120>
 4021148:	2146b03a 	or	r3,r4,r5
 402114c:	18c000cc 	andi	r3,r3,3
 4021150:	1800421e 	bne	r3,zero,402125c <memcpy+0x128>
 4021154:	343ffc04 	addi	r16,r6,-16
 4021158:	8020d13a 	srli	r16,r16,4
 402115c:	28c00104 	addi	r3,r5,4
 4021160:	23400104 	addi	r13,r4,4
 4021164:	801e913a 	slli	r15,r16,4
 4021168:	2b000204 	addi	r12,r5,8
 402116c:	22c00204 	addi	r11,r4,8
 4021170:	7bc00504 	addi	r15,r15,20
 4021174:	2a800304 	addi	r10,r5,12
 4021178:	22400304 	addi	r9,r4,12
 402117c:	2bdf883a 	add	r15,r5,r15
 4021180:	2811883a 	mov	r8,r5
 4021184:	200f883a 	mov	r7,r4
 4021188:	41000017 	ldw	r4,0(r8)
 402118c:	39c00404 	addi	r7,r7,16
 4021190:	18c00404 	addi	r3,r3,16
 4021194:	393ffc15 	stw	r4,-16(r7)
 4021198:	1bbffc17 	ldw	r14,-16(r3)
 402119c:	6b400404 	addi	r13,r13,16
 40211a0:	5ac00404 	addi	r11,r11,16
 40211a4:	6bbffc15 	stw	r14,-16(r13)
 40211a8:	63800017 	ldw	r14,0(r12)
 40211ac:	4a400404 	addi	r9,r9,16
 40211b0:	42000404 	addi	r8,r8,16
 40211b4:	5bbffc15 	stw	r14,-16(r11)
 40211b8:	53800017 	ldw	r14,0(r10)
 40211bc:	63000404 	addi	r12,r12,16
 40211c0:	52800404 	addi	r10,r10,16
 40211c4:	4bbffc15 	stw	r14,-16(r9)
 40211c8:	1bffef1e 	bne	r3,r15,4021188 <__flash_rwdata_start+0xffff08c4>
 40211cc:	81c00044 	addi	r7,r16,1
 40211d0:	380e913a 	slli	r7,r7,4
 40211d4:	310003cc 	andi	r4,r6,15
 40211d8:	02c000c4 	movi	r11,3
 40211dc:	11c7883a 	add	r3,r2,r7
 40211e0:	29cb883a 	add	r5,r5,r7
 40211e4:	59001f2e 	bgeu	r11,r4,4021264 <memcpy+0x130>
 40211e8:	1813883a 	mov	r9,r3
 40211ec:	2811883a 	mov	r8,r5
 40211f0:	200f883a 	mov	r7,r4
 40211f4:	42800017 	ldw	r10,0(r8)
 40211f8:	4a400104 	addi	r9,r9,4
 40211fc:	39ffff04 	addi	r7,r7,-4
 4021200:	4abfff15 	stw	r10,-4(r9)
 4021204:	42000104 	addi	r8,r8,4
 4021208:	59fffa36 	bltu	r11,r7,40211f4 <__flash_rwdata_start+0xffff0930>
 402120c:	213fff04 	addi	r4,r4,-4
 4021210:	2008d0ba 	srli	r4,r4,2
 4021214:	318000cc 	andi	r6,r6,3
 4021218:	21000044 	addi	r4,r4,1
 402121c:	2109883a 	add	r4,r4,r4
 4021220:	2109883a 	add	r4,r4,r4
 4021224:	1907883a 	add	r3,r3,r4
 4021228:	290b883a 	add	r5,r5,r4
 402122c:	30000626 	beq	r6,zero,4021248 <memcpy+0x114>
 4021230:	198d883a 	add	r6,r3,r6
 4021234:	29c00003 	ldbu	r7,0(r5)
 4021238:	18c00044 	addi	r3,r3,1
 402123c:	29400044 	addi	r5,r5,1
 4021240:	19ffffc5 	stb	r7,-1(r3)
 4021244:	19bffb1e 	bne	r3,r6,4021234 <__flash_rwdata_start+0xffff0970>
 4021248:	dc000017 	ldw	r16,0(sp)
 402124c:	dec00104 	addi	sp,sp,4
 4021250:	f800283a 	ret
 4021254:	2007883a 	mov	r3,r4
 4021258:	003ff406 	br	402122c <__flash_rwdata_start+0xffff0968>
 402125c:	2007883a 	mov	r3,r4
 4021260:	003ff306 	br	4021230 <__flash_rwdata_start+0xffff096c>
 4021264:	200d883a 	mov	r6,r4
 4021268:	003ff006 	br	402122c <__flash_rwdata_start+0xffff0968>

0402126c <_printf_r>:
 402126c:	defffd04 	addi	sp,sp,-12
 4021270:	dfc00015 	stw	ra,0(sp)
 4021274:	d9800115 	stw	r6,4(sp)
 4021278:	d9c00215 	stw	r7,8(sp)
 402127c:	280d883a 	mov	r6,r5
 4021280:	21400217 	ldw	r5,8(r4)
 4021284:	d9c00104 	addi	r7,sp,4
 4021288:	40214c40 	call	40214c4 <___vfprintf_internal_r>
 402128c:	dfc00017 	ldw	ra,0(sp)
 4021290:	dec00304 	addi	sp,sp,12
 4021294:	f800283a 	ret

04021298 <printf>:
 4021298:	defffc04 	addi	sp,sp,-16
 402129c:	dfc00015 	stw	ra,0(sp)
 40212a0:	d9400115 	stw	r5,4(sp)
 40212a4:	d9800215 	stw	r6,8(sp)
 40212a8:	d9c00315 	stw	r7,12(sp)
 40212ac:	00800034 	movhi	r2,0
 40212b0:	10878604 	addi	r2,r2,7704
 40212b4:	10800017 	ldw	r2,0(r2)
 40212b8:	200b883a 	mov	r5,r4
 40212bc:	d9800104 	addi	r6,sp,4
 40212c0:	11000217 	ldw	r4,8(r2)
 40212c4:	402351c0 	call	402351c <__vfprintf_internal>
 40212c8:	dfc00017 	ldw	ra,0(sp)
 40212cc:	dec00404 	addi	sp,sp,16
 40212d0:	f800283a 	ret

040212d4 <_putchar_r>:
 40212d4:	21800217 	ldw	r6,8(r4)
 40212d8:	4027f501 	jmpi	4027f50 <_putc_r>

040212dc <putchar>:
 40212dc:	00800034 	movhi	r2,0
 40212e0:	10878604 	addi	r2,r2,7704
 40212e4:	200b883a 	mov	r5,r4
 40212e8:	11000017 	ldw	r4,0(r2)
 40212ec:	21800217 	ldw	r6,8(r4)
 40212f0:	4027f501 	jmpi	4027f50 <_putc_r>

040212f4 <_puts_r>:
 40212f4:	defff604 	addi	sp,sp,-40
 40212f8:	dc000715 	stw	r16,28(sp)
 40212fc:	2021883a 	mov	r16,r4
 4021300:	2809883a 	mov	r4,r5
 4021304:	dc400815 	stw	r17,32(sp)
 4021308:	dfc00915 	stw	ra,36(sp)
 402130c:	2823883a 	mov	r17,r5
 4021310:	402142c0 	call	402142c <strlen>
 4021314:	81400217 	ldw	r5,8(r16)
 4021318:	11000044 	addi	r4,r2,1
 402131c:	d8800115 	stw	r2,4(sp)
 4021320:	00800034 	movhi	r2,0
 4021324:	2980030b 	ldhu	r6,12(r5)
 4021328:	10801504 	addi	r2,r2,84
 402132c:	d8800215 	stw	r2,8(sp)
 4021330:	00800044 	movi	r2,1
 4021334:	d8800315 	stw	r2,12(sp)
 4021338:	00800084 	movi	r2,2
 402133c:	d8800515 	stw	r2,20(sp)
 4021340:	dc400015 	stw	r17,0(sp)
 4021344:	d9000615 	stw	r4,24(sp)
 4021348:	dec00415 	stw	sp,16(sp)
 402134c:	3088000c 	andi	r2,r6,8192
 4021350:	1000061e 	bne	r2,zero,402136c <_puts_r+0x78>
 4021354:	29001917 	ldw	r4,100(r5)
 4021358:	00b7ffc4 	movi	r2,-8193
 402135c:	31880014 	ori	r6,r6,8192
 4021360:	2084703a 	and	r2,r4,r2
 4021364:	2980030d 	sth	r6,12(r5)
 4021368:	28801915 	stw	r2,100(r5)
 402136c:	8009883a 	mov	r4,r16
 4021370:	d9800404 	addi	r6,sp,16
 4021374:	4025af80 	call	4025af8 <__sfvwrite_r>
 4021378:	1000061e 	bne	r2,zero,4021394 <_puts_r+0xa0>
 402137c:	00800284 	movi	r2,10
 4021380:	dfc00917 	ldw	ra,36(sp)
 4021384:	dc400817 	ldw	r17,32(sp)
 4021388:	dc000717 	ldw	r16,28(sp)
 402138c:	dec00a04 	addi	sp,sp,40
 4021390:	f800283a 	ret
 4021394:	00bfffc4 	movi	r2,-1
 4021398:	003ff906 	br	4021380 <__flash_rwdata_start+0xffff0abc>

0402139c <puts>:
 402139c:	00800034 	movhi	r2,0
 40213a0:	10878604 	addi	r2,r2,7704
 40213a4:	200b883a 	mov	r5,r4
 40213a8:	11000017 	ldw	r4,0(r2)
 40213ac:	40212f41 	jmpi	40212f4 <_puts_r>

040213b0 <srand>:
 40213b0:	00800034 	movhi	r2,0
 40213b4:	10878604 	addi	r2,r2,7704
 40213b8:	10800017 	ldw	r2,0(r2)
 40213bc:	11002915 	stw	r4,164(r2)
 40213c0:	10002a15 	stw	zero,168(r2)
 40213c4:	f800283a 	ret

040213c8 <rand>:
 40213c8:	00800034 	movhi	r2,0
 40213cc:	defffe04 	addi	sp,sp,-8
 40213d0:	10878604 	addi	r2,r2,7704
 40213d4:	dc000015 	stw	r16,0(sp)
 40213d8:	14000017 	ldw	r16,0(r2)
 40213dc:	dfc00115 	stw	ra,4(sp)
 40213e0:	01932574 	movhi	r6,19605
 40213e4:	81002917 	ldw	r4,164(r16)
 40213e8:	81402a17 	ldw	r5,168(r16)
 40213ec:	01d614b4 	movhi	r7,22610
 40213f0:	319fcb44 	addi	r6,r6,32557
 40213f4:	39fd0b44 	addi	r7,r7,-3027
 40213f8:	402a6bc0 	call	402a6bc <__muldi3>
 40213fc:	11000044 	addi	r4,r2,1
 4021400:	2085803a 	cmpltu	r2,r4,r2
 4021404:	10c7883a 	add	r3,r2,r3
 4021408:	00a00034 	movhi	r2,32768
 402140c:	10bfffc4 	addi	r2,r2,-1
 4021410:	1884703a 	and	r2,r3,r2
 4021414:	81002915 	stw	r4,164(r16)
 4021418:	80c02a15 	stw	r3,168(r16)
 402141c:	dfc00117 	ldw	ra,4(sp)
 4021420:	dc000017 	ldw	r16,0(sp)
 4021424:	dec00204 	addi	sp,sp,8
 4021428:	f800283a 	ret

0402142c <strlen>:
 402142c:	208000cc 	andi	r2,r4,3
 4021430:	10002026 	beq	r2,zero,40214b4 <strlen+0x88>
 4021434:	20800007 	ldb	r2,0(r4)
 4021438:	10002026 	beq	r2,zero,40214bc <strlen+0x90>
 402143c:	2005883a 	mov	r2,r4
 4021440:	00000206 	br	402144c <strlen+0x20>
 4021444:	10c00007 	ldb	r3,0(r2)
 4021448:	18001826 	beq	r3,zero,40214ac <strlen+0x80>
 402144c:	10800044 	addi	r2,r2,1
 4021450:	10c000cc 	andi	r3,r2,3
 4021454:	183ffb1e 	bne	r3,zero,4021444 <__flash_rwdata_start+0xffff0b80>
 4021458:	10c00017 	ldw	r3,0(r2)
 402145c:	01ffbff4 	movhi	r7,65279
 4021460:	39ffbfc4 	addi	r7,r7,-257
 4021464:	00ca303a 	nor	r5,zero,r3
 4021468:	01a02074 	movhi	r6,32897
 402146c:	19c7883a 	add	r3,r3,r7
 4021470:	31a02004 	addi	r6,r6,-32640
 4021474:	1946703a 	and	r3,r3,r5
 4021478:	1986703a 	and	r3,r3,r6
 402147c:	1800091e 	bne	r3,zero,40214a4 <strlen+0x78>
 4021480:	10800104 	addi	r2,r2,4
 4021484:	10c00017 	ldw	r3,0(r2)
 4021488:	19cb883a 	add	r5,r3,r7
 402148c:	00c6303a 	nor	r3,zero,r3
 4021490:	28c6703a 	and	r3,r5,r3
 4021494:	1986703a 	and	r3,r3,r6
 4021498:	183ff926 	beq	r3,zero,4021480 <__flash_rwdata_start+0xffff0bbc>
 402149c:	00000106 	br	40214a4 <strlen+0x78>
 40214a0:	10800044 	addi	r2,r2,1
 40214a4:	10c00007 	ldb	r3,0(r2)
 40214a8:	183ffd1e 	bne	r3,zero,40214a0 <__flash_rwdata_start+0xffff0bdc>
 40214ac:	1105c83a 	sub	r2,r2,r4
 40214b0:	f800283a 	ret
 40214b4:	2005883a 	mov	r2,r4
 40214b8:	003fe706 	br	4021458 <__flash_rwdata_start+0xffff0b94>
 40214bc:	0005883a 	mov	r2,zero
 40214c0:	f800283a 	ret

040214c4 <___vfprintf_internal_r>:
 40214c4:	deffb604 	addi	sp,sp,-296
 40214c8:	dfc04915 	stw	ra,292(sp)
 40214cc:	ddc04715 	stw	r23,284(sp)
 40214d0:	dd804615 	stw	r22,280(sp)
 40214d4:	202f883a 	mov	r23,r4
 40214d8:	282d883a 	mov	r22,r5
 40214dc:	d9802a15 	stw	r6,168(sp)
 40214e0:	d9c02d15 	stw	r7,180(sp)
 40214e4:	df004815 	stw	fp,288(sp)
 40214e8:	dd404515 	stw	r21,276(sp)
 40214ec:	dd004415 	stw	r20,272(sp)
 40214f0:	dcc04315 	stw	r19,268(sp)
 40214f4:	dc804215 	stw	r18,264(sp)
 40214f8:	dc404115 	stw	r17,260(sp)
 40214fc:	dc004015 	stw	r16,256(sp)
 4021500:	40261f80 	call	40261f8 <_localeconv_r>
 4021504:	10800017 	ldw	r2,0(r2)
 4021508:	1009883a 	mov	r4,r2
 402150c:	d8803515 	stw	r2,212(sp)
 4021510:	402142c0 	call	402142c <strlen>
 4021514:	d8803815 	stw	r2,224(sp)
 4021518:	b8000226 	beq	r23,zero,4021524 <___vfprintf_internal_r+0x60>
 402151c:	b8800e17 	ldw	r2,56(r23)
 4021520:	1000e226 	beq	r2,zero,40218ac <___vfprintf_internal_r+0x3e8>
 4021524:	b080030b 	ldhu	r2,12(r22)
 4021528:	10c8000c 	andi	r3,r2,8192
 402152c:	1800061e 	bne	r3,zero,4021548 <___vfprintf_internal_r+0x84>
 4021530:	b1001917 	ldw	r4,100(r22)
 4021534:	00f7ffc4 	movi	r3,-8193
 4021538:	10880014 	ori	r2,r2,8192
 402153c:	20c6703a 	and	r3,r4,r3
 4021540:	b080030d 	sth	r2,12(r22)
 4021544:	b0c01915 	stw	r3,100(r22)
 4021548:	10c0020c 	andi	r3,r2,8
 402154c:	1800a826 	beq	r3,zero,40217f0 <___vfprintf_internal_r+0x32c>
 4021550:	b0c00417 	ldw	r3,16(r22)
 4021554:	1800a626 	beq	r3,zero,40217f0 <___vfprintf_internal_r+0x32c>
 4021558:	1080068c 	andi	r2,r2,26
 402155c:	00c00284 	movi	r3,10
 4021560:	10c0ab26 	beq	r2,r3,4021810 <___vfprintf_internal_r+0x34c>
 4021564:	d8801e04 	addi	r2,sp,120
 4021568:	d8c01dc4 	addi	r3,sp,119
 402156c:	d9000404 	addi	r4,sp,16
 4021570:	05000034 	movhi	r20,0
 4021574:	10cbc83a 	sub	r5,r2,r3
 4021578:	a5002684 	addi	r20,r20,154
 402157c:	d8802815 	stw	r2,160(sp)
 4021580:	d8c02915 	stw	r3,164(sp)
 4021584:	d9001e15 	stw	r4,120(sp)
 4021588:	d8002015 	stw	zero,128(sp)
 402158c:	d8001f15 	stw	zero,124(sp)
 4021590:	d8003315 	stw	zero,204(sp)
 4021594:	d8003715 	stw	zero,220(sp)
 4021598:	d8003915 	stw	zero,228(sp)
 402159c:	2011883a 	mov	r8,r4
 40215a0:	d8003b15 	stw	zero,236(sp)
 40215a4:	d8003a15 	stw	zero,232(sp)
 40215a8:	d8002f15 	stw	zero,188(sp)
 40215ac:	d9403c15 	stw	r5,240(sp)
 40215b0:	d8c02a17 	ldw	r3,168(sp)
 40215b4:	18800007 	ldb	r2,0(r3)
 40215b8:	1001f226 	beq	r2,zero,4021d84 <___vfprintf_internal_r+0x8c0>
 40215bc:	00c00944 	movi	r3,37
 40215c0:	dc002a17 	ldw	r16,168(sp)
 40215c4:	10c0021e 	bne	r2,r3,40215d0 <___vfprintf_internal_r+0x10c>
 40215c8:	00001606 	br	4021624 <___vfprintf_internal_r+0x160>
 40215cc:	10c08526 	beq	r2,r3,40217e4 <___vfprintf_internal_r+0x320>
 40215d0:	84000044 	addi	r16,r16,1
 40215d4:	80800007 	ldb	r2,0(r16)
 40215d8:	103ffc1e 	bne	r2,zero,40215cc <__flash_rwdata_start+0xffff0d08>
 40215dc:	d9002a17 	ldw	r4,168(sp)
 40215e0:	8123c83a 	sub	r17,r16,r4
 40215e4:	88000f26 	beq	r17,zero,4021624 <___vfprintf_internal_r+0x160>
 40215e8:	d8802a17 	ldw	r2,168(sp)
 40215ec:	d8c02017 	ldw	r3,128(sp)
 40215f0:	44400115 	stw	r17,4(r8)
 40215f4:	40800015 	stw	r2,0(r8)
 40215f8:	d8801f17 	ldw	r2,124(sp)
 40215fc:	1c47883a 	add	r3,r3,r17
 4021600:	d8c02015 	stw	r3,128(sp)
 4021604:	10800044 	addi	r2,r2,1
 4021608:	d8801f15 	stw	r2,124(sp)
 402160c:	00c001c4 	movi	r3,7
 4021610:	18809416 	blt	r3,r2,4021864 <___vfprintf_internal_r+0x3a0>
 4021614:	42000204 	addi	r8,r8,8
 4021618:	d8c02f17 	ldw	r3,188(sp)
 402161c:	1c47883a 	add	r3,r3,r17
 4021620:	d8c02f15 	stw	r3,188(sp)
 4021624:	80800007 	ldb	r2,0(r16)
 4021628:	10009526 	beq	r2,zero,4021880 <___vfprintf_internal_r+0x3bc>
 402162c:	80800044 	addi	r2,r16,1
 4021630:	84000047 	ldb	r16,1(r16)
 4021634:	0027883a 	mov	r19,zero
 4021638:	0039883a 	mov	fp,zero
 402163c:	dcc02b05 	stb	r19,172(sp)
 4021640:	d8002785 	stb	zero,158(sp)
 4021644:	027fffc4 	movi	r9,-1
 4021648:	d8002e15 	stw	zero,184(sp)
 402164c:	04401604 	movi	r17,88
 4021650:	04800244 	movi	r18,9
 4021654:	da002a15 	stw	r8,168(sp)
 4021658:	e027883a 	mov	r19,fp
 402165c:	17000044 	addi	fp,r2,1
 4021660:	80bff804 	addi	r2,r16,-32
 4021664:	8882ed36 	bltu	r17,r2,402221c <___vfprintf_internal_r+0xd58>
 4021668:	100490ba 	slli	r2,r2,2
 402166c:	010100b4 	movhi	r4,1026
 4021670:	2105a004 	addi	r4,r4,5760
 4021674:	1105883a 	add	r2,r2,r4
 4021678:	10800017 	ldw	r2,0(r2)
 402167c:	1000683a 	jmp	r2
 4021680:	04022064 	muli	r16,zero,2177
 4021684:	0402221c 	xori	r16,zero,2184
 4021688:	0402221c 	xori	r16,zero,2184
 402168c:	04022080 	call	402208 <_gp+0x3f8410>
 4021690:	0402221c 	xori	r16,zero,2184
 4021694:	0402221c 	xori	r16,zero,2184
 4021698:	0402221c 	xori	r16,zero,2184
 402169c:	0402221c 	xori	r16,zero,2184
 40216a0:	0402221c 	xori	r16,zero,2184
 40216a4:	0402221c 	xori	r16,zero,2184
 40216a8:	04022090 	cmplti	r16,zero,2178
 40216ac:	040220b8 	rdprs	r16,zero,2178
 40216b0:	0402221c 	xori	r16,zero,2184
 40216b4:	040218b8 	rdprs	r16,zero,2146
 40216b8:	040218c8 	cmpgei	r16,zero,2147
 40216bc:	0402221c 	xori	r16,zero,2184
 40216c0:	04021918 	cmpnei	r16,zero,2148
 40216c4:	04021928 	cmpgeui	r16,zero,2148
 40216c8:	04021928 	cmpgeui	r16,zero,2148
 40216cc:	04021928 	cmpgeui	r16,zero,2148
 40216d0:	04021928 	cmpgeui	r16,zero,2148
 40216d4:	04021928 	cmpgeui	r16,zero,2148
 40216d8:	04021928 	cmpgeui	r16,zero,2148
 40216dc:	04021928 	cmpgeui	r16,zero,2148
 40216e0:	04021928 	cmpgeui	r16,zero,2148
 40216e4:	04021928 	cmpgeui	r16,zero,2148
 40216e8:	0402221c 	xori	r16,zero,2184
 40216ec:	0402221c 	xori	r16,zero,2184
 40216f0:	0402221c 	xori	r16,zero,2184
 40216f4:	0402221c 	xori	r16,zero,2184
 40216f8:	0402221c 	xori	r16,zero,2184
 40216fc:	0402221c 	xori	r16,zero,2184
 4021700:	0402221c 	xori	r16,zero,2184
 4021704:	0402221c 	xori	r16,zero,2184
 4021708:	0402221c 	xori	r16,zero,2184
 402170c:	0402221c 	xori	r16,zero,2184
 4021710:	0402196c 	andhi	r16,zero,2149
 4021714:	04021d8c 	andi	r16,zero,2166
 4021718:	0402221c 	xori	r16,zero,2184
 402171c:	04021d8c 	andi	r16,zero,2166
 4021720:	0402221c 	xori	r16,zero,2184
 4021724:	0402221c 	xori	r16,zero,2184
 4021728:	0402221c 	xori	r16,zero,2184
 402172c:	0402221c 	xori	r16,zero,2184
 4021730:	04021e34 	movhi	r16,2168
 4021734:	0402221c 	xori	r16,zero,2184
 4021738:	0402221c 	xori	r16,zero,2184
 402173c:	04021e44 	movi	r16,2169
 4021740:	0402221c 	xori	r16,zero,2184
 4021744:	0402221c 	xori	r16,zero,2184
 4021748:	0402221c 	xori	r16,zero,2184
 402174c:	0402221c 	xori	r16,zero,2184
 4021750:	0402221c 	xori	r16,zero,2184
 4021754:	04021e84 	movi	r16,2170
 4021758:	0402221c 	xori	r16,zero,2184
 402175c:	0402221c 	xori	r16,zero,2184
 4021760:	04021fb0 	cmpltui	r16,zero,2174
 4021764:	0402221c 	xori	r16,zero,2184
 4021768:	0402221c 	xori	r16,zero,2184
 402176c:	0402221c 	xori	r16,zero,2184
 4021770:	0402221c 	xori	r16,zero,2184
 4021774:	0402221c 	xori	r16,zero,2184
 4021778:	0402221c 	xori	r16,zero,2184
 402177c:	0402221c 	xori	r16,zero,2184
 4021780:	0402221c 	xori	r16,zero,2184
 4021784:	0402221c 	xori	r16,zero,2184
 4021788:	0402221c 	xori	r16,zero,2184
 402178c:	04022018 	cmpnei	r16,zero,2176
 4021790:	04021f04 	movi	r16,2172
 4021794:	04021d8c 	andi	r16,zero,2166
 4021798:	04021d8c 	andi	r16,zero,2166
 402179c:	04021d8c 	andi	r16,zero,2166
 40217a0:	04021f48 	cmpgei	r16,zero,2173
 40217a4:	04021f04 	movi	r16,2172
 40217a8:	0402221c 	xori	r16,zero,2184
 40217ac:	0402221c 	xori	r16,zero,2184
 40217b0:	04021f58 	cmpnei	r16,zero,2173
 40217b4:	0402221c 	xori	r16,zero,2184
 40217b8:	04021f70 	cmpltui	r16,zero,2173
 40217bc:	040221e0 	cmpeqi	r16,zero,2183
 40217c0:	04021eb8 	rdprs	r16,zero,2170
 40217c4:	04022194 	movui	r16,2182
 40217c8:	0402221c 	xori	r16,zero,2184
 40217cc:	040220cc 	andi	r16,zero,2179
 40217d0:	0402221c 	xori	r16,zero,2184
 40217d4:	040221a4 	muli	r16,zero,2182
 40217d8:	0402221c 	xori	r16,zero,2184
 40217dc:	0402221c 	xori	r16,zero,2184
 40217e0:	04022148 	cmpgei	r16,zero,2181
 40217e4:	d9402a17 	ldw	r5,168(sp)
 40217e8:	8163c83a 	sub	r17,r16,r5
 40217ec:	003f7d06 	br	40215e4 <__flash_rwdata_start+0xffff0d20>
 40217f0:	b809883a 	mov	r4,r23
 40217f4:	b00b883a 	mov	r5,r22
 40217f8:	40235fc0 	call	40235fc <__swsetup_r>
 40217fc:	10000c1e 	bne	r2,zero,4021830 <___vfprintf_internal_r+0x36c>
 4021800:	b080030b 	ldhu	r2,12(r22)
 4021804:	00c00284 	movi	r3,10
 4021808:	1080068c 	andi	r2,r2,26
 402180c:	10ff551e 	bne	r2,r3,4021564 <__flash_rwdata_start+0xffff0ca0>
 4021810:	b080038f 	ldh	r2,14(r22)
 4021814:	103f5316 	blt	r2,zero,4021564 <__flash_rwdata_start+0xffff0ca0>
 4021818:	d9802a17 	ldw	r6,168(sp)
 402181c:	d9c02d17 	ldw	r7,180(sp)
 4021820:	b809883a 	mov	r4,r23
 4021824:	b00b883a 	mov	r5,r22
 4021828:	40235400 	call	4023540 <__sbprintf>
 402182c:	00000106 	br	4021834 <___vfprintf_internal_r+0x370>
 4021830:	00bfffc4 	movi	r2,-1
 4021834:	dfc04917 	ldw	ra,292(sp)
 4021838:	df004817 	ldw	fp,288(sp)
 402183c:	ddc04717 	ldw	r23,284(sp)
 4021840:	dd804617 	ldw	r22,280(sp)
 4021844:	dd404517 	ldw	r21,276(sp)
 4021848:	dd004417 	ldw	r20,272(sp)
 402184c:	dcc04317 	ldw	r19,268(sp)
 4021850:	dc804217 	ldw	r18,264(sp)
 4021854:	dc404117 	ldw	r17,260(sp)
 4021858:	dc004017 	ldw	r16,256(sp)
 402185c:	dec04a04 	addi	sp,sp,296
 4021860:	f800283a 	ret
 4021864:	b809883a 	mov	r4,r23
 4021868:	b00b883a 	mov	r5,r22
 402186c:	d9801e04 	addi	r6,sp,120
 4021870:	40289c80 	call	40289c8 <__sprint_r>
 4021874:	1000081e 	bne	r2,zero,4021898 <___vfprintf_internal_r+0x3d4>
 4021878:	da000404 	addi	r8,sp,16
 402187c:	003f6606 	br	4021618 <__flash_rwdata_start+0xffff0d54>
 4021880:	d8802017 	ldw	r2,128(sp)
 4021884:	10000426 	beq	r2,zero,4021898 <___vfprintf_internal_r+0x3d4>
 4021888:	b809883a 	mov	r4,r23
 402188c:	b00b883a 	mov	r5,r22
 4021890:	d9801e04 	addi	r6,sp,120
 4021894:	40289c80 	call	40289c8 <__sprint_r>
 4021898:	b080030b 	ldhu	r2,12(r22)
 402189c:	1080100c 	andi	r2,r2,64
 40218a0:	103fe31e 	bne	r2,zero,4021830 <__flash_rwdata_start+0xffff0f6c>
 40218a4:	d8802f17 	ldw	r2,188(sp)
 40218a8:	003fe206 	br	4021834 <__flash_rwdata_start+0xffff0f70>
 40218ac:	b809883a 	mov	r4,r23
 40218b0:	40256940 	call	4025694 <__sinit>
 40218b4:	003f1b06 	br	4021524 <__flash_rwdata_start+0xffff0c60>
 40218b8:	e005883a 	mov	r2,fp
 40218bc:	9cc00114 	ori	r19,r19,4
 40218c0:	e4000007 	ldb	r16,0(fp)
 40218c4:	003f6506 	br	402165c <__flash_rwdata_start+0xffff0d98>
 40218c8:	e4000007 	ldb	r16,0(fp)
 40218cc:	01000a84 	movi	r4,42
 40218d0:	e0800044 	addi	r2,fp,1
 40218d4:	8106ff26 	beq	r16,r4,40234d4 <___vfprintf_internal_r+0x2010>
 40218d8:	857ff404 	addi	r21,r16,-48
 40218dc:	1039883a 	mov	fp,r2
 40218e0:	0013883a 	mov	r9,zero
 40218e4:	957f5e36 	bltu	r18,r21,4021660 <__flash_rwdata_start+0xffff0d9c>
 40218e8:	0009883a 	mov	r4,zero
 40218ec:	01400284 	movi	r5,10
 40218f0:	402110c0 	call	402110c <__mulsi3>
 40218f4:	e4000007 	ldb	r16,0(fp)
 40218f8:	a889883a 	add	r4,r21,r2
 40218fc:	e7000044 	addi	fp,fp,1
 4021900:	857ff404 	addi	r21,r16,-48
 4021904:	957ff92e 	bgeu	r18,r21,40218ec <__flash_rwdata_start+0xffff1028>
 4021908:	2013883a 	mov	r9,r4
 402190c:	203f540e 	bge	r4,zero,4021660 <__flash_rwdata_start+0xffff0d9c>
 4021910:	027fffc4 	movi	r9,-1
 4021914:	003f5206 	br	4021660 <__flash_rwdata_start+0xffff0d9c>
 4021918:	9cc02014 	ori	r19,r19,128
 402191c:	e005883a 	mov	r2,fp
 4021920:	e4000007 	ldb	r16,0(fp)
 4021924:	003f4d06 	br	402165c <__flash_rwdata_start+0xffff0d98>
 4021928:	857ff404 	addi	r21,r16,-48
 402192c:	d8002e15 	stw	zero,184(sp)
 4021930:	0009883a 	mov	r4,zero
 4021934:	da402c15 	stw	r9,176(sp)
 4021938:	e021883a 	mov	r16,fp
 402193c:	01400284 	movi	r5,10
 4021940:	402110c0 	call	402110c <__mulsi3>
 4021944:	81400007 	ldb	r5,0(r16)
 4021948:	1549883a 	add	r4,r2,r21
 402194c:	e7000044 	addi	fp,fp,1
 4021950:	2d7ff404 	addi	r21,r5,-48
 4021954:	e021883a 	mov	r16,fp
 4021958:	957ff82e 	bgeu	r18,r21,402193c <__flash_rwdata_start+0xffff1078>
 402195c:	2821883a 	mov	r16,r5
 4021960:	d9002e15 	stw	r4,184(sp)
 4021964:	da402c17 	ldw	r9,176(sp)
 4021968:	003f3d06 	br	4021660 <__flash_rwdata_start+0xffff0d9c>
 402196c:	da002a17 	ldw	r8,168(sp)
 4021970:	df002a15 	stw	fp,168(sp)
 4021974:	9839883a 	mov	fp,r19
 4021978:	dcc02b03 	ldbu	r19,172(sp)
 402197c:	e7000414 	ori	fp,fp,16
 4021980:	e080080c 	andi	r2,fp,32
 4021984:	dcc02785 	stb	r19,158(sp)
 4021988:	d8c02d17 	ldw	r3,180(sp)
 402198c:	10016526 	beq	r2,zero,4021f24 <___vfprintf_internal_r+0xa60>
 4021990:	d9002d17 	ldw	r4,180(sp)
 4021994:	18800117 	ldw	r2,4(r3)
 4021998:	1c800017 	ldw	r18,0(r3)
 402199c:	21000204 	addi	r4,r4,8
 40219a0:	d9002d15 	stw	r4,180(sp)
 40219a4:	102b883a 	mov	r21,r2
 40219a8:	10044516 	blt	r2,zero,4022ac0 <___vfprintf_internal_r+0x15fc>
 40219ac:	dcc02783 	ldbu	r19,158(sp)
 40219b0:	da403215 	stw	r9,200(sp)
 40219b4:	00800044 	movi	r2,1
 40219b8:	9546b03a 	or	r3,r18,r21
 40219bc:	48000216 	blt	r9,zero,40219c8 <___vfprintf_internal_r+0x504>
 40219c0:	013fdfc4 	movi	r4,-129
 40219c4:	e138703a 	and	fp,fp,r4
 40219c8:	1802211e 	bne	r3,zero,4022250 <___vfprintf_internal_r+0xd8c>
 40219cc:	48031326 	beq	r9,zero,402261c <___vfprintf_internal_r+0x1158>
 40219d0:	10803fcc 	andi	r2,r2,255
 40219d4:	00c00044 	movi	r3,1
 40219d8:	10c24126 	beq	r2,r3,40222e0 <___vfprintf_internal_r+0xe1c>
 40219dc:	00c00084 	movi	r3,2
 40219e0:	10c33426 	beq	r2,r3,40226b4 <___vfprintf_internal_r+0x11f0>
 40219e4:	d8c01e04 	addi	r3,sp,120
 40219e8:	9008d0fa 	srli	r4,r18,3
 40219ec:	a80a977a 	slli	r5,r21,29
 40219f0:	a82ad0fa 	srli	r21,r21,3
 40219f4:	948001cc 	andi	r18,r18,7
 40219f8:	90800c04 	addi	r2,r18,48
 40219fc:	18ffffc4 	addi	r3,r3,-1
 4021a00:	2924b03a 	or	r18,r5,r4
 4021a04:	18800005 	stb	r2,0(r3)
 4021a08:	9548b03a 	or	r4,r18,r21
 4021a0c:	203ff61e 	bne	r4,zero,40219e8 <__flash_rwdata_start+0xffff1124>
 4021a10:	e100004c 	andi	r4,fp,1
 4021a14:	d8c03115 	stw	r3,196(sp)
 4021a18:	2003961e 	bne	r4,zero,4022874 <___vfprintf_internal_r+0x13b0>
 4021a1c:	d8802817 	ldw	r2,160(sp)
 4021a20:	10e3c83a 	sub	r17,r2,r3
 4021a24:	8805883a 	mov	r2,r17
 4021a28:	8a40010e 	bge	r17,r9,4021a30 <___vfprintf_internal_r+0x56c>
 4021a2c:	4805883a 	mov	r2,r9
 4021a30:	d8802b15 	stw	r2,172(sp)
 4021a34:	d8003415 	stw	zero,208(sp)
 4021a38:	98803fcc 	andi	r2,r19,255
 4021a3c:	1080201c 	xori	r2,r2,128
 4021a40:	10bfe004 	addi	r2,r2,-128
 4021a44:	10000326 	beq	r2,zero,4021a54 <___vfprintf_internal_r+0x590>
 4021a48:	d8c02b17 	ldw	r3,172(sp)
 4021a4c:	18c00044 	addi	r3,r3,1
 4021a50:	d8c02b15 	stw	r3,172(sp)
 4021a54:	e0c0008c 	andi	r3,fp,2
 4021a58:	d8c02c15 	stw	r3,176(sp)
 4021a5c:	18000326 	beq	r3,zero,4021a6c <___vfprintf_internal_r+0x5a8>
 4021a60:	d8c02b17 	ldw	r3,172(sp)
 4021a64:	18c00084 	addi	r3,r3,2
 4021a68:	d8c02b15 	stw	r3,172(sp)
 4021a6c:	e0c0210c 	andi	r3,fp,132
 4021a70:	d8c03015 	stw	r3,192(sp)
 4021a74:	1801f41e 	bne	r3,zero,4022248 <___vfprintf_internal_r+0xd84>
 4021a78:	d9002e17 	ldw	r4,184(sp)
 4021a7c:	d8c02b17 	ldw	r3,172(sp)
 4021a80:	20ebc83a 	sub	r21,r4,r3
 4021a84:	0541f00e 	bge	zero,r21,4022248 <___vfprintf_internal_r+0xd84>
 4021a88:	02400404 	movi	r9,16
 4021a8c:	d8c02017 	ldw	r3,128(sp)
 4021a90:	d8801f17 	ldw	r2,124(sp)
 4021a94:	4d45710e 	bge	r9,r21,402305c <___vfprintf_internal_r+0x1b98>
 4021a98:	01400034 	movhi	r5,0
 4021a9c:	29402a84 	addi	r5,r5,170
 4021aa0:	d9403615 	stw	r5,216(sp)
 4021aa4:	4827883a 	mov	r19,r9
 4021aa8:	048001c4 	movi	r18,7
 4021aac:	00000306 	br	4021abc <___vfprintf_internal_r+0x5f8>
 4021ab0:	ad7ffc04 	addi	r21,r21,-16
 4021ab4:	42000204 	addi	r8,r8,8
 4021ab8:	9d40130e 	bge	r19,r21,4021b08 <___vfprintf_internal_r+0x644>
 4021abc:	01000034 	movhi	r4,0
 4021ac0:	18c00404 	addi	r3,r3,16
 4021ac4:	10800044 	addi	r2,r2,1
 4021ac8:	21002a84 	addi	r4,r4,170
 4021acc:	41000015 	stw	r4,0(r8)
 4021ad0:	44c00115 	stw	r19,4(r8)
 4021ad4:	d8c02015 	stw	r3,128(sp)
 4021ad8:	d8801f15 	stw	r2,124(sp)
 4021adc:	90bff40e 	bge	r18,r2,4021ab0 <__flash_rwdata_start+0xffff11ec>
 4021ae0:	b809883a 	mov	r4,r23
 4021ae4:	b00b883a 	mov	r5,r22
 4021ae8:	d9801e04 	addi	r6,sp,120
 4021aec:	40289c80 	call	40289c8 <__sprint_r>
 4021af0:	103f691e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4021af4:	ad7ffc04 	addi	r21,r21,-16
 4021af8:	d8c02017 	ldw	r3,128(sp)
 4021afc:	d8801f17 	ldw	r2,124(sp)
 4021b00:	da000404 	addi	r8,sp,16
 4021b04:	9d7fed16 	blt	r19,r21,4021abc <__flash_rwdata_start+0xffff11f8>
 4021b08:	d9403617 	ldw	r5,216(sp)
 4021b0c:	a8c7883a 	add	r3,r21,r3
 4021b10:	10800044 	addi	r2,r2,1
 4021b14:	41400015 	stw	r5,0(r8)
 4021b18:	45400115 	stw	r21,4(r8)
 4021b1c:	d8c02015 	stw	r3,128(sp)
 4021b20:	d8801f15 	stw	r2,124(sp)
 4021b24:	010001c4 	movi	r4,7
 4021b28:	20832716 	blt	r4,r2,40227c8 <___vfprintf_internal_r+0x1304>
 4021b2c:	d8802787 	ldb	r2,158(sp)
 4021b30:	42000204 	addi	r8,r8,8
 4021b34:	10000c26 	beq	r2,zero,4021b68 <___vfprintf_internal_r+0x6a4>
 4021b38:	d8801f17 	ldw	r2,124(sp)
 4021b3c:	d9002784 	addi	r4,sp,158
 4021b40:	18c00044 	addi	r3,r3,1
 4021b44:	10800044 	addi	r2,r2,1
 4021b48:	41000015 	stw	r4,0(r8)
 4021b4c:	01000044 	movi	r4,1
 4021b50:	41000115 	stw	r4,4(r8)
 4021b54:	d8c02015 	stw	r3,128(sp)
 4021b58:	d8801f15 	stw	r2,124(sp)
 4021b5c:	010001c4 	movi	r4,7
 4021b60:	2082c016 	blt	r4,r2,4022664 <___vfprintf_internal_r+0x11a0>
 4021b64:	42000204 	addi	r8,r8,8
 4021b68:	d8802c17 	ldw	r2,176(sp)
 4021b6c:	10000c26 	beq	r2,zero,4021ba0 <___vfprintf_internal_r+0x6dc>
 4021b70:	d8801f17 	ldw	r2,124(sp)
 4021b74:	d9002704 	addi	r4,sp,156
 4021b78:	18c00084 	addi	r3,r3,2
 4021b7c:	10800044 	addi	r2,r2,1
 4021b80:	41000015 	stw	r4,0(r8)
 4021b84:	01000084 	movi	r4,2
 4021b88:	41000115 	stw	r4,4(r8)
 4021b8c:	d8c02015 	stw	r3,128(sp)
 4021b90:	d8801f15 	stw	r2,124(sp)
 4021b94:	010001c4 	movi	r4,7
 4021b98:	2082ba16 	blt	r4,r2,4022684 <___vfprintf_internal_r+0x11c0>
 4021b9c:	42000204 	addi	r8,r8,8
 4021ba0:	d9003017 	ldw	r4,192(sp)
 4021ba4:	00802004 	movi	r2,128
 4021ba8:	20821c26 	beq	r4,r2,402241c <___vfprintf_internal_r+0xf58>
 4021bac:	d9403217 	ldw	r5,200(sp)
 4021bb0:	2c67c83a 	sub	r19,r5,r17
 4021bb4:	04c0260e 	bge	zero,r19,4021c50 <___vfprintf_internal_r+0x78c>
 4021bb8:	05400404 	movi	r21,16
 4021bbc:	d8801f17 	ldw	r2,124(sp)
 4021bc0:	acc46e0e 	bge	r21,r19,4022d7c <___vfprintf_internal_r+0x18b8>
 4021bc4:	01400034 	movhi	r5,0
 4021bc8:	29402684 	addi	r5,r5,154
 4021bcc:	d9402c15 	stw	r5,176(sp)
 4021bd0:	048001c4 	movi	r18,7
 4021bd4:	00000306 	br	4021be4 <___vfprintf_internal_r+0x720>
 4021bd8:	9cfffc04 	addi	r19,r19,-16
 4021bdc:	42000204 	addi	r8,r8,8
 4021be0:	acc0110e 	bge	r21,r19,4021c28 <___vfprintf_internal_r+0x764>
 4021be4:	18c00404 	addi	r3,r3,16
 4021be8:	10800044 	addi	r2,r2,1
 4021bec:	45000015 	stw	r20,0(r8)
 4021bf0:	45400115 	stw	r21,4(r8)
 4021bf4:	d8c02015 	stw	r3,128(sp)
 4021bf8:	d8801f15 	stw	r2,124(sp)
 4021bfc:	90bff60e 	bge	r18,r2,4021bd8 <__flash_rwdata_start+0xffff1314>
 4021c00:	b809883a 	mov	r4,r23
 4021c04:	b00b883a 	mov	r5,r22
 4021c08:	d9801e04 	addi	r6,sp,120
 4021c0c:	40289c80 	call	40289c8 <__sprint_r>
 4021c10:	103f211e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4021c14:	9cfffc04 	addi	r19,r19,-16
 4021c18:	d8c02017 	ldw	r3,128(sp)
 4021c1c:	d8801f17 	ldw	r2,124(sp)
 4021c20:	da000404 	addi	r8,sp,16
 4021c24:	acffef16 	blt	r21,r19,4021be4 <__flash_rwdata_start+0xffff1320>
 4021c28:	d9002c17 	ldw	r4,176(sp)
 4021c2c:	1cc7883a 	add	r3,r3,r19
 4021c30:	10800044 	addi	r2,r2,1
 4021c34:	41000015 	stw	r4,0(r8)
 4021c38:	44c00115 	stw	r19,4(r8)
 4021c3c:	d8c02015 	stw	r3,128(sp)
 4021c40:	d8801f15 	stw	r2,124(sp)
 4021c44:	010001c4 	movi	r4,7
 4021c48:	20827e16 	blt	r4,r2,4022644 <___vfprintf_internal_r+0x1180>
 4021c4c:	42000204 	addi	r8,r8,8
 4021c50:	e080400c 	andi	r2,fp,256
 4021c54:	1001a81e 	bne	r2,zero,40222f8 <___vfprintf_internal_r+0xe34>
 4021c58:	d8801f17 	ldw	r2,124(sp)
 4021c5c:	d9403117 	ldw	r5,196(sp)
 4021c60:	1c47883a 	add	r3,r3,r17
 4021c64:	10800044 	addi	r2,r2,1
 4021c68:	41400015 	stw	r5,0(r8)
 4021c6c:	44400115 	stw	r17,4(r8)
 4021c70:	d8c02015 	stw	r3,128(sp)
 4021c74:	d8801f15 	stw	r2,124(sp)
 4021c78:	010001c4 	movi	r4,7
 4021c7c:	20825916 	blt	r4,r2,40225e4 <___vfprintf_internal_r+0x1120>
 4021c80:	42000204 	addi	r8,r8,8
 4021c84:	e080010c 	andi	r2,fp,4
 4021c88:	10003126 	beq	r2,zero,4021d50 <___vfprintf_internal_r+0x88c>
 4021c8c:	d8802e17 	ldw	r2,184(sp)
 4021c90:	d9002b17 	ldw	r4,172(sp)
 4021c94:	1121c83a 	sub	r16,r2,r4
 4021c98:	04002d0e 	bge	zero,r16,4021d50 <___vfprintf_internal_r+0x88c>
 4021c9c:	04400404 	movi	r17,16
 4021ca0:	d8801f17 	ldw	r2,124(sp)
 4021ca4:	8c053f0e 	bge	r17,r16,40231a4 <___vfprintf_internal_r+0x1ce0>
 4021ca8:	01000034 	movhi	r4,0
 4021cac:	21002a84 	addi	r4,r4,170
 4021cb0:	d9003615 	stw	r4,216(sp)
 4021cb4:	048001c4 	movi	r18,7
 4021cb8:	00000306 	br	4021cc8 <___vfprintf_internal_r+0x804>
 4021cbc:	843ffc04 	addi	r16,r16,-16
 4021cc0:	42000204 	addi	r8,r8,8
 4021cc4:	8c00130e 	bge	r17,r16,4021d14 <___vfprintf_internal_r+0x850>
 4021cc8:	01400034 	movhi	r5,0
 4021ccc:	18c00404 	addi	r3,r3,16
 4021cd0:	10800044 	addi	r2,r2,1
 4021cd4:	29402a84 	addi	r5,r5,170
 4021cd8:	41400015 	stw	r5,0(r8)
 4021cdc:	44400115 	stw	r17,4(r8)
 4021ce0:	d8c02015 	stw	r3,128(sp)
 4021ce4:	d8801f15 	stw	r2,124(sp)
 4021ce8:	90bff40e 	bge	r18,r2,4021cbc <__flash_rwdata_start+0xffff13f8>
 4021cec:	b809883a 	mov	r4,r23
 4021cf0:	b00b883a 	mov	r5,r22
 4021cf4:	d9801e04 	addi	r6,sp,120
 4021cf8:	40289c80 	call	40289c8 <__sprint_r>
 4021cfc:	103ee61e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4021d00:	843ffc04 	addi	r16,r16,-16
 4021d04:	d8c02017 	ldw	r3,128(sp)
 4021d08:	d8801f17 	ldw	r2,124(sp)
 4021d0c:	da000404 	addi	r8,sp,16
 4021d10:	8c3fed16 	blt	r17,r16,4021cc8 <__flash_rwdata_start+0xffff1404>
 4021d14:	d9003617 	ldw	r4,216(sp)
 4021d18:	1c07883a 	add	r3,r3,r16
 4021d1c:	10800044 	addi	r2,r2,1
 4021d20:	41000015 	stw	r4,0(r8)
 4021d24:	44000115 	stw	r16,4(r8)
 4021d28:	d8c02015 	stw	r3,128(sp)
 4021d2c:	d8801f15 	stw	r2,124(sp)
 4021d30:	010001c4 	movi	r4,7
 4021d34:	2080060e 	bge	r4,r2,4021d50 <___vfprintf_internal_r+0x88c>
 4021d38:	b809883a 	mov	r4,r23
 4021d3c:	b00b883a 	mov	r5,r22
 4021d40:	d9801e04 	addi	r6,sp,120
 4021d44:	40289c80 	call	40289c8 <__sprint_r>
 4021d48:	103ed31e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4021d4c:	d8c02017 	ldw	r3,128(sp)
 4021d50:	df002b17 	ldw	fp,172(sp)
 4021d54:	d9402e17 	ldw	r5,184(sp)
 4021d58:	e140010e 	bge	fp,r5,4021d60 <___vfprintf_internal_r+0x89c>
 4021d5c:	2839883a 	mov	fp,r5
 4021d60:	d8802f17 	ldw	r2,188(sp)
 4021d64:	1705883a 	add	r2,r2,fp
 4021d68:	d8802f15 	stw	r2,188(sp)
 4021d6c:	1802251e 	bne	r3,zero,4022604 <___vfprintf_internal_r+0x1140>
 4021d70:	d8c02a17 	ldw	r3,168(sp)
 4021d74:	d8001f15 	stw	zero,124(sp)
 4021d78:	da000404 	addi	r8,sp,16
 4021d7c:	18800007 	ldb	r2,0(r3)
 4021d80:	103e0e1e 	bne	r2,zero,40215bc <__flash_rwdata_start+0xffff0cf8>
 4021d84:	dc002a17 	ldw	r16,168(sp)
 4021d88:	003e2606 	br	4021624 <__flash_rwdata_start+0xffff0d60>
 4021d8c:	d9002d17 	ldw	r4,180(sp)
 4021d90:	d9402d17 	ldw	r5,180(sp)
 4021d94:	da002a17 	ldw	r8,168(sp)
 4021d98:	21000017 	ldw	r4,0(r4)
 4021d9c:	29400117 	ldw	r5,4(r5)
 4021da0:	df002a15 	stw	fp,168(sp)
 4021da4:	9839883a 	mov	fp,r19
 4021da8:	dcc02b03 	ldbu	r19,172(sp)
 4021dac:	d9003715 	stw	r4,220(sp)
 4021db0:	d9403915 	stw	r5,228(sp)
 4021db4:	da003f15 	stw	r8,252(sp)
 4021db8:	da403e15 	stw	r9,248(sp)
 4021dbc:	dcc02785 	stb	r19,158(sp)
 4021dc0:	40286240 	call	4028624 <__fpclassifyd>
 4021dc4:	d8c02d17 	ldw	r3,180(sp)
 4021dc8:	04400044 	movi	r17,1
 4021dcc:	da003f17 	ldw	r8,252(sp)
 4021dd0:	1c800204 	addi	r18,r3,8
 4021dd4:	da403e17 	ldw	r9,248(sp)
 4021dd8:	d9003717 	ldw	r4,220(sp)
 4021ddc:	d9403917 	ldw	r5,228(sp)
 4021de0:	1443411e 	bne	r2,r17,4022ae8 <___vfprintf_internal_r+0x1624>
 4021de4:	000d883a 	mov	r6,zero
 4021de8:	000f883a 	mov	r7,zero
 4021dec:	402c7a40 	call	402c7a4 <__ledf2>
 4021df0:	da003f17 	ldw	r8,252(sp)
 4021df4:	10050d16 	blt	r2,zero,402322c <___vfprintf_internal_r+0x1d68>
 4021df8:	dcc02783 	ldbu	r19,158(sp)
 4021dfc:	008011c4 	movi	r2,71
 4021e00:	1404590e 	bge	r2,r16,4022f68 <___vfprintf_internal_r+0x1aa4>
 4021e04:	01400034 	movhi	r5,0
 4021e08:	29401704 	addi	r5,r5,92
 4021e0c:	d9403115 	stw	r5,196(sp)
 4021e10:	00c000c4 	movi	r3,3
 4021e14:	00bfdfc4 	movi	r2,-129
 4021e18:	d8c02b15 	stw	r3,172(sp)
 4021e1c:	e0b8703a 	and	fp,fp,r2
 4021e20:	dc802d15 	stw	r18,180(sp)
 4021e24:	1823883a 	mov	r17,r3
 4021e28:	d8003215 	stw	zero,200(sp)
 4021e2c:	d8003415 	stw	zero,208(sp)
 4021e30:	003f0106 	br	4021a38 <__flash_rwdata_start+0xffff1174>
 4021e34:	9cc00214 	ori	r19,r19,8
 4021e38:	e005883a 	mov	r2,fp
 4021e3c:	e4000007 	ldb	r16,0(fp)
 4021e40:	003e0606 	br	402165c <__flash_rwdata_start+0xffff0d98>
 4021e44:	da002a17 	ldw	r8,168(sp)
 4021e48:	df002a15 	stw	fp,168(sp)
 4021e4c:	9f000414 	ori	fp,r19,16
 4021e50:	e080080c 	andi	r2,fp,32
 4021e54:	1000e726 	beq	r2,zero,40221f4 <___vfprintf_internal_r+0xd30>
 4021e58:	d9402d17 	ldw	r5,180(sp)
 4021e5c:	0005883a 	mov	r2,zero
 4021e60:	2c800017 	ldw	r18,0(r5)
 4021e64:	2d400117 	ldw	r21,4(r5)
 4021e68:	29400204 	addi	r5,r5,8
 4021e6c:	d9402d15 	stw	r5,180(sp)
 4021e70:	9546b03a 	or	r3,r18,r21
 4021e74:	d8002785 	stb	zero,158(sp)
 4021e78:	da403215 	stw	r9,200(sp)
 4021e7c:	0027883a 	mov	r19,zero
 4021e80:	003ece06 	br	40219bc <__flash_rwdata_start+0xffff10f8>
 4021e84:	da002a17 	ldw	r8,168(sp)
 4021e88:	df002a15 	stw	fp,168(sp)
 4021e8c:	9f000414 	ori	fp,r19,16
 4021e90:	e080080c 	andi	r2,fp,32
 4021e94:	1000c826 	beq	r2,zero,40221b8 <___vfprintf_internal_r+0xcf4>
 4021e98:	d9002d17 	ldw	r4,180(sp)
 4021e9c:	00800044 	movi	r2,1
 4021ea0:	24800017 	ldw	r18,0(r4)
 4021ea4:	25400117 	ldw	r21,4(r4)
 4021ea8:	21000204 	addi	r4,r4,8
 4021eac:	d9002d15 	stw	r4,180(sp)
 4021eb0:	9546b03a 	or	r3,r18,r21
 4021eb4:	003fef06 	br	4021e74 <__flash_rwdata_start+0xffff15b0>
 4021eb8:	d9402d17 	ldw	r5,180(sp)
 4021ebc:	00800c04 	movi	r2,48
 4021ec0:	d8802705 	stb	r2,156(sp)
 4021ec4:	2c800017 	ldw	r18,0(r5)
 4021ec8:	00801e04 	movi	r2,120
 4021ecc:	d8802745 	stb	r2,157(sp)
 4021ed0:	00800034 	movhi	r2,0
 4021ed4:	10801f04 	addi	r2,r2,124
 4021ed8:	29400104 	addi	r5,r5,4
 4021edc:	da002a17 	ldw	r8,168(sp)
 4021ee0:	d8803b15 	stw	r2,236(sp)
 4021ee4:	df002a15 	stw	fp,168(sp)
 4021ee8:	002b883a 	mov	r21,zero
 4021eec:	9f000094 	ori	fp,r19,2
 4021ef0:	d9402d15 	stw	r5,180(sp)
 4021ef4:	00800084 	movi	r2,2
 4021ef8:	04001e04 	movi	r16,120
 4021efc:	9007883a 	mov	r3,r18
 4021f00:	003fdc06 	br	4021e74 <__flash_rwdata_start+0xffff15b0>
 4021f04:	da002a17 	ldw	r8,168(sp)
 4021f08:	df002a15 	stw	fp,168(sp)
 4021f0c:	9839883a 	mov	fp,r19
 4021f10:	dcc02b03 	ldbu	r19,172(sp)
 4021f14:	e080080c 	andi	r2,fp,32
 4021f18:	d8c02d17 	ldw	r3,180(sp)
 4021f1c:	dcc02785 	stb	r19,158(sp)
 4021f20:	103e9b1e 	bne	r2,zero,4021990 <__flash_rwdata_start+0xffff10cc>
 4021f24:	e080040c 	andi	r2,fp,16
 4021f28:	10036626 	beq	r2,zero,4022cc4 <___vfprintf_internal_r+0x1800>
 4021f2c:	1c800017 	ldw	r18,0(r3)
 4021f30:	d9402d17 	ldw	r5,180(sp)
 4021f34:	902bd7fa 	srai	r21,r18,31
 4021f38:	29400104 	addi	r5,r5,4
 4021f3c:	d9402d15 	stw	r5,180(sp)
 4021f40:	a805883a 	mov	r2,r21
 4021f44:	003e9806 	br	40219a8 <__flash_rwdata_start+0xffff10e4>
 4021f48:	9cc01014 	ori	r19,r19,64
 4021f4c:	e005883a 	mov	r2,fp
 4021f50:	e4000007 	ldb	r16,0(fp)
 4021f54:	003dc106 	br	402165c <__flash_rwdata_start+0xffff0d98>
 4021f58:	e4000007 	ldb	r16,0(fp)
 4021f5c:	00801b04 	movi	r2,108
 4021f60:	80841426 	beq	r16,r2,4022fb4 <___vfprintf_internal_r+0x1af0>
 4021f64:	9cc00414 	ori	r19,r19,16
 4021f68:	e005883a 	mov	r2,fp
 4021f6c:	003dbb06 	br	402165c <__flash_rwdata_start+0xffff0d98>
 4021f70:	da002a17 	ldw	r8,168(sp)
 4021f74:	df002a15 	stw	fp,168(sp)
 4021f78:	9839883a 	mov	fp,r19
 4021f7c:	dcc02b03 	ldbu	r19,172(sp)
 4021f80:	e080080c 	andi	r2,fp,32
 4021f84:	dcc02785 	stb	r19,158(sp)
 4021f88:	10036126 	beq	r2,zero,4022d10 <___vfprintf_internal_r+0x184c>
 4021f8c:	d9402d17 	ldw	r5,180(sp)
 4021f90:	d9002f17 	ldw	r4,188(sp)
 4021f94:	28800017 	ldw	r2,0(r5)
 4021f98:	2007d7fa 	srai	r3,r4,31
 4021f9c:	29400104 	addi	r5,r5,4
 4021fa0:	d9402d15 	stw	r5,180(sp)
 4021fa4:	11000015 	stw	r4,0(r2)
 4021fa8:	10c00115 	stw	r3,4(r2)
 4021fac:	003d8006 	br	40215b0 <__flash_rwdata_start+0xffff0cec>
 4021fb0:	da002a17 	ldw	r8,168(sp)
 4021fb4:	df002a15 	stw	fp,168(sp)
 4021fb8:	9839883a 	mov	fp,r19
 4021fbc:	dcc02b03 	ldbu	r19,172(sp)
 4021fc0:	01400034 	movhi	r5,0
 4021fc4:	29401a04 	addi	r5,r5,104
 4021fc8:	dcc02785 	stb	r19,158(sp)
 4021fcc:	d9403b15 	stw	r5,236(sp)
 4021fd0:	e0c0080c 	andi	r3,fp,32
 4021fd4:	d8802d17 	ldw	r2,180(sp)
 4021fd8:	18006626 	beq	r3,zero,4022174 <___vfprintf_internal_r+0xcb0>
 4021fdc:	d9402d17 	ldw	r5,180(sp)
 4021fe0:	14800017 	ldw	r18,0(r2)
 4021fe4:	15400117 	ldw	r21,4(r2)
 4021fe8:	29400204 	addi	r5,r5,8
 4021fec:	d9402d15 	stw	r5,180(sp)
 4021ff0:	e080004c 	andi	r2,fp,1
 4021ff4:	1001fd26 	beq	r2,zero,40227ec <___vfprintf_internal_r+0x1328>
 4021ff8:	9546b03a 	or	r3,r18,r21
 4021ffc:	18034f26 	beq	r3,zero,4022d3c <___vfprintf_internal_r+0x1878>
 4022000:	00800c04 	movi	r2,48
 4022004:	d8802705 	stb	r2,156(sp)
 4022008:	dc002745 	stb	r16,157(sp)
 402200c:	e7000094 	ori	fp,fp,2
 4022010:	00800084 	movi	r2,2
 4022014:	003f9706 	br	4021e74 <__flash_rwdata_start+0xffff15b0>
 4022018:	d8c02d17 	ldw	r3,180(sp)
 402201c:	d9002d17 	ldw	r4,180(sp)
 4022020:	da002a17 	ldw	r8,168(sp)
 4022024:	18800017 	ldw	r2,0(r3)
 4022028:	21000104 	addi	r4,r4,4
 402202c:	00c00044 	movi	r3,1
 4022030:	df002a15 	stw	fp,168(sp)
 4022034:	d8c02b15 	stw	r3,172(sp)
 4022038:	9839883a 	mov	fp,r19
 402203c:	d8002785 	stb	zero,158(sp)
 4022040:	d8801405 	stb	r2,80(sp)
 4022044:	d9002d15 	stw	r4,180(sp)
 4022048:	1823883a 	mov	r17,r3
 402204c:	d8c01404 	addi	r3,sp,80
 4022050:	d8003215 	stw	zero,200(sp)
 4022054:	d8003415 	stw	zero,208(sp)
 4022058:	d8c03115 	stw	r3,196(sp)
 402205c:	0005883a 	mov	r2,zero
 4022060:	003e7c06 	br	4021a54 <__flash_rwdata_start+0xffff1190>
 4022064:	d8802b07 	ldb	r2,172(sp)
 4022068:	1003011e 	bne	r2,zero,4022c70 <___vfprintf_internal_r+0x17ac>
 402206c:	00c00804 	movi	r3,32
 4022070:	d8c02b05 	stb	r3,172(sp)
 4022074:	e005883a 	mov	r2,fp
 4022078:	e4000007 	ldb	r16,0(fp)
 402207c:	003d7706 	br	402165c <__flash_rwdata_start+0xffff0d98>
 4022080:	9cc00054 	ori	r19,r19,1
 4022084:	e005883a 	mov	r2,fp
 4022088:	e4000007 	ldb	r16,0(fp)
 402208c:	003d7306 	br	402165c <__flash_rwdata_start+0xffff0d98>
 4022090:	d9002d17 	ldw	r4,180(sp)
 4022094:	d9402d17 	ldw	r5,180(sp)
 4022098:	21000017 	ldw	r4,0(r4)
 402209c:	28c00104 	addi	r3,r5,4
 40220a0:	d9002e15 	stw	r4,184(sp)
 40220a4:	2003bd16 	blt	r4,zero,4022f9c <___vfprintf_internal_r+0x1ad8>
 40220a8:	d8c02d15 	stw	r3,180(sp)
 40220ac:	e005883a 	mov	r2,fp
 40220b0:	e4000007 	ldb	r16,0(fp)
 40220b4:	003d6906 	br	402165c <__flash_rwdata_start+0xffff0d98>
 40220b8:	00c00ac4 	movi	r3,43
 40220bc:	d8c02b05 	stb	r3,172(sp)
 40220c0:	e005883a 	mov	r2,fp
 40220c4:	e4000007 	ldb	r16,0(fp)
 40220c8:	003d6406 	br	402165c <__flash_rwdata_start+0xffff0d98>
 40220cc:	d8c02d17 	ldw	r3,180(sp)
 40220d0:	d9002d17 	ldw	r4,180(sp)
 40220d4:	da002a17 	ldw	r8,168(sp)
 40220d8:	18c00017 	ldw	r3,0(r3)
 40220dc:	df002a15 	stw	fp,168(sp)
 40220e0:	d8002785 	stb	zero,158(sp)
 40220e4:	d8c03115 	stw	r3,196(sp)
 40220e8:	9839883a 	mov	fp,r19
 40220ec:	24800104 	addi	r18,r4,4
 40220f0:	18041b26 	beq	r3,zero,4023160 <___vfprintf_internal_r+0x1c9c>
 40220f4:	d9003117 	ldw	r4,196(sp)
 40220f8:	4803be16 	blt	r9,zero,4022ff4 <___vfprintf_internal_r+0x1b30>
 40220fc:	480d883a 	mov	r6,r9
 4022100:	000b883a 	mov	r5,zero
 4022104:	da003f15 	stw	r8,252(sp)
 4022108:	da403e15 	stw	r9,248(sp)
 402210c:	4026b8c0 	call	4026b8c <memchr>
 4022110:	da003f17 	ldw	r8,252(sp)
 4022114:	da403e17 	ldw	r9,248(sp)
 4022118:	10045426 	beq	r2,zero,402326c <___vfprintf_internal_r+0x1da8>
 402211c:	d8c03117 	ldw	r3,196(sp)
 4022120:	10e3c83a 	sub	r17,r2,r3
 4022124:	4c436a16 	blt	r9,r17,4022ed0 <___vfprintf_internal_r+0x1a0c>
 4022128:	8805883a 	mov	r2,r17
 402212c:	8803b616 	blt	r17,zero,4023008 <___vfprintf_internal_r+0x1b44>
 4022130:	dcc02783 	ldbu	r19,158(sp)
 4022134:	d8802b15 	stw	r2,172(sp)
 4022138:	dc802d15 	stw	r18,180(sp)
 402213c:	d8003215 	stw	zero,200(sp)
 4022140:	d8003415 	stw	zero,208(sp)
 4022144:	003e3c06 	br	4021a38 <__flash_rwdata_start+0xffff1174>
 4022148:	da002a17 	ldw	r8,168(sp)
 402214c:	df002a15 	stw	fp,168(sp)
 4022150:	9839883a 	mov	fp,r19
 4022154:	dcc02b03 	ldbu	r19,172(sp)
 4022158:	01000034 	movhi	r4,0
 402215c:	21001f04 	addi	r4,r4,124
 4022160:	d9003b15 	stw	r4,236(sp)
 4022164:	dcc02785 	stb	r19,158(sp)
 4022168:	e0c0080c 	andi	r3,fp,32
 402216c:	d8802d17 	ldw	r2,180(sp)
 4022170:	183f9a1e 	bne	r3,zero,4021fdc <__flash_rwdata_start+0xffff1718>
 4022174:	e0c0040c 	andi	r3,fp,16
 4022178:	1802c026 	beq	r3,zero,4022c7c <___vfprintf_internal_r+0x17b8>
 402217c:	d8c02d17 	ldw	r3,180(sp)
 4022180:	14800017 	ldw	r18,0(r2)
 4022184:	002b883a 	mov	r21,zero
 4022188:	18c00104 	addi	r3,r3,4
 402218c:	d8c02d15 	stw	r3,180(sp)
 4022190:	003f9706 	br	4021ff0 <__flash_rwdata_start+0xffff172c>
 4022194:	9cc00814 	ori	r19,r19,32
 4022198:	e005883a 	mov	r2,fp
 402219c:	e4000007 	ldb	r16,0(fp)
 40221a0:	003d2e06 	br	402165c <__flash_rwdata_start+0xffff0d98>
 40221a4:	da002a17 	ldw	r8,168(sp)
 40221a8:	df002a15 	stw	fp,168(sp)
 40221ac:	9839883a 	mov	fp,r19
 40221b0:	e080080c 	andi	r2,fp,32
 40221b4:	103f381e 	bne	r2,zero,4021e98 <__flash_rwdata_start+0xffff15d4>
 40221b8:	e080040c 	andi	r2,fp,16
 40221bc:	1002b726 	beq	r2,zero,4022c9c <___vfprintf_internal_r+0x17d8>
 40221c0:	d9402d17 	ldw	r5,180(sp)
 40221c4:	002b883a 	mov	r21,zero
 40221c8:	00800044 	movi	r2,1
 40221cc:	2c800017 	ldw	r18,0(r5)
 40221d0:	29400104 	addi	r5,r5,4
 40221d4:	d9402d15 	stw	r5,180(sp)
 40221d8:	9007883a 	mov	r3,r18
 40221dc:	003f2506 	br	4021e74 <__flash_rwdata_start+0xffff15b0>
 40221e0:	da002a17 	ldw	r8,168(sp)
 40221e4:	df002a15 	stw	fp,168(sp)
 40221e8:	9839883a 	mov	fp,r19
 40221ec:	e080080c 	andi	r2,fp,32
 40221f0:	103f191e 	bne	r2,zero,4021e58 <__flash_rwdata_start+0xffff1594>
 40221f4:	e080040c 	andi	r2,fp,16
 40221f8:	1002bb26 	beq	r2,zero,4022ce8 <___vfprintf_internal_r+0x1824>
 40221fc:	d8802d17 	ldw	r2,180(sp)
 4022200:	002b883a 	mov	r21,zero
 4022204:	14800017 	ldw	r18,0(r2)
 4022208:	10800104 	addi	r2,r2,4
 402220c:	d8802d15 	stw	r2,180(sp)
 4022210:	9007883a 	mov	r3,r18
 4022214:	0005883a 	mov	r2,zero
 4022218:	003f1606 	br	4021e74 <__flash_rwdata_start+0xffff15b0>
 402221c:	da002a17 	ldw	r8,168(sp)
 4022220:	df002a15 	stw	fp,168(sp)
 4022224:	9839883a 	mov	fp,r19
 4022228:	dcc02b03 	ldbu	r19,172(sp)
 402222c:	dcc02785 	stb	r19,158(sp)
 4022230:	803d9326 	beq	r16,zero,4021880 <__flash_rwdata_start+0xffff0fbc>
 4022234:	00c00044 	movi	r3,1
 4022238:	d8c02b15 	stw	r3,172(sp)
 402223c:	dc001405 	stb	r16,80(sp)
 4022240:	d8002785 	stb	zero,158(sp)
 4022244:	003f8006 	br	4022048 <__flash_rwdata_start+0xffff1784>
 4022248:	d8c02017 	ldw	r3,128(sp)
 402224c:	003e3906 	br	4021b34 <__flash_rwdata_start+0xffff1270>
 4022250:	10803fcc 	andi	r2,r2,255
 4022254:	00c00044 	movi	r3,1
 4022258:	10fde01e 	bne	r2,r3,40219dc <__flash_rwdata_start+0xffff1118>
 402225c:	a800021e 	bne	r21,zero,4022268 <___vfprintf_internal_r+0xda4>
 4022260:	00800244 	movi	r2,9
 4022264:	14801e2e 	bgeu	r2,r18,40222e0 <___vfprintf_internal_r+0xe1c>
 4022268:	dc002b15 	stw	r16,172(sp)
 402226c:	dc401e04 	addi	r17,sp,120
 4022270:	9021883a 	mov	r16,r18
 4022274:	da402c15 	stw	r9,176(sp)
 4022278:	a825883a 	mov	r18,r21
 402227c:	402b883a 	mov	r21,r8
 4022280:	8009883a 	mov	r4,r16
 4022284:	900b883a 	mov	r5,r18
 4022288:	01800284 	movi	r6,10
 402228c:	000f883a 	mov	r7,zero
 4022290:	402ae080 	call	402ae08 <__umoddi3>
 4022294:	10800c04 	addi	r2,r2,48
 4022298:	8c7fffc4 	addi	r17,r17,-1
 402229c:	8009883a 	mov	r4,r16
 40222a0:	900b883a 	mov	r5,r18
 40222a4:	01800284 	movi	r6,10
 40222a8:	000f883a 	mov	r7,zero
 40222ac:	88800005 	stb	r2,0(r17)
 40222b0:	402a7c80 	call	402a7c8 <__udivdi3>
 40222b4:	1021883a 	mov	r16,r2
 40222b8:	10c4b03a 	or	r2,r2,r3
 40222bc:	1825883a 	mov	r18,r3
 40222c0:	103fef1e 	bne	r2,zero,4022280 <__flash_rwdata_start+0xffff19bc>
 40222c4:	d9002817 	ldw	r4,160(sp)
 40222c8:	dc403115 	stw	r17,196(sp)
 40222cc:	dc002b17 	ldw	r16,172(sp)
 40222d0:	da402c17 	ldw	r9,176(sp)
 40222d4:	a811883a 	mov	r8,r21
 40222d8:	2463c83a 	sub	r17,r4,r17
 40222dc:	003dd106 	br	4021a24 <__flash_rwdata_start+0xffff1160>
 40222e0:	94800c04 	addi	r18,r18,48
 40222e4:	d8c01dc4 	addi	r3,sp,119
 40222e8:	dc801dc5 	stb	r18,119(sp)
 40222ec:	dc403c17 	ldw	r17,240(sp)
 40222f0:	d8c03115 	stw	r3,196(sp)
 40222f4:	003dcb06 	br	4021a24 <__flash_rwdata_start+0xffff1160>
 40222f8:	00801944 	movi	r2,101
 40222fc:	1400720e 	bge	r2,r16,40224c8 <___vfprintf_internal_r+0x1004>
 4022300:	d9003717 	ldw	r4,220(sp)
 4022304:	d9403917 	ldw	r5,228(sp)
 4022308:	000d883a 	mov	r6,zero
 402230c:	000f883a 	mov	r7,zero
 4022310:	d8c03d15 	stw	r3,244(sp)
 4022314:	da003f15 	stw	r8,252(sp)
 4022318:	402c6400 	call	402c640 <__eqdf2>
 402231c:	d8c03d17 	ldw	r3,244(sp)
 4022320:	da003f17 	ldw	r8,252(sp)
 4022324:	1000f41e 	bne	r2,zero,40226f8 <___vfprintf_internal_r+0x1234>
 4022328:	d8801f17 	ldw	r2,124(sp)
 402232c:	01000034 	movhi	r4,0
 4022330:	21002604 	addi	r4,r4,152
 4022334:	18c00044 	addi	r3,r3,1
 4022338:	10800044 	addi	r2,r2,1
 402233c:	41000015 	stw	r4,0(r8)
 4022340:	01000044 	movi	r4,1
 4022344:	41000115 	stw	r4,4(r8)
 4022348:	d8c02015 	stw	r3,128(sp)
 402234c:	d8801f15 	stw	r2,124(sp)
 4022350:	010001c4 	movi	r4,7
 4022354:	20828d16 	blt	r4,r2,4022d8c <___vfprintf_internal_r+0x18c8>
 4022358:	42000204 	addi	r8,r8,8
 402235c:	d8802617 	ldw	r2,152(sp)
 4022360:	d9403317 	ldw	r5,204(sp)
 4022364:	11400216 	blt	r2,r5,4022370 <___vfprintf_internal_r+0xeac>
 4022368:	e080004c 	andi	r2,fp,1
 402236c:	103e4526 	beq	r2,zero,4021c84 <__flash_rwdata_start+0xffff13c0>
 4022370:	d8803817 	ldw	r2,224(sp)
 4022374:	d9003517 	ldw	r4,212(sp)
 4022378:	d9403817 	ldw	r5,224(sp)
 402237c:	1887883a 	add	r3,r3,r2
 4022380:	d8801f17 	ldw	r2,124(sp)
 4022384:	41000015 	stw	r4,0(r8)
 4022388:	41400115 	stw	r5,4(r8)
 402238c:	10800044 	addi	r2,r2,1
 4022390:	d8c02015 	stw	r3,128(sp)
 4022394:	d8801f15 	stw	r2,124(sp)
 4022398:	010001c4 	movi	r4,7
 402239c:	20830916 	blt	r4,r2,4022fc4 <___vfprintf_internal_r+0x1b00>
 40223a0:	42000204 	addi	r8,r8,8
 40223a4:	d8803317 	ldw	r2,204(sp)
 40223a8:	143fffc4 	addi	r16,r2,-1
 40223ac:	043e350e 	bge	zero,r16,4021c84 <__flash_rwdata_start+0xffff13c0>
 40223b0:	04400404 	movi	r17,16
 40223b4:	d8801f17 	ldw	r2,124(sp)
 40223b8:	8c007e0e 	bge	r17,r16,40225b4 <___vfprintf_internal_r+0x10f0>
 40223bc:	01400034 	movhi	r5,0
 40223c0:	29402684 	addi	r5,r5,154
 40223c4:	d9402c15 	stw	r5,176(sp)
 40223c8:	04c001c4 	movi	r19,7
 40223cc:	00000306 	br	40223dc <___vfprintf_internal_r+0xf18>
 40223d0:	42000204 	addi	r8,r8,8
 40223d4:	843ffc04 	addi	r16,r16,-16
 40223d8:	8c00790e 	bge	r17,r16,40225c0 <___vfprintf_internal_r+0x10fc>
 40223dc:	18c00404 	addi	r3,r3,16
 40223e0:	10800044 	addi	r2,r2,1
 40223e4:	45000015 	stw	r20,0(r8)
 40223e8:	44400115 	stw	r17,4(r8)
 40223ec:	d8c02015 	stw	r3,128(sp)
 40223f0:	d8801f15 	stw	r2,124(sp)
 40223f4:	98bff60e 	bge	r19,r2,40223d0 <__flash_rwdata_start+0xffff1b0c>
 40223f8:	b809883a 	mov	r4,r23
 40223fc:	b00b883a 	mov	r5,r22
 4022400:	d9801e04 	addi	r6,sp,120
 4022404:	40289c80 	call	40289c8 <__sprint_r>
 4022408:	103d231e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 402240c:	d8c02017 	ldw	r3,128(sp)
 4022410:	d8801f17 	ldw	r2,124(sp)
 4022414:	da000404 	addi	r8,sp,16
 4022418:	003fee06 	br	40223d4 <__flash_rwdata_start+0xffff1b10>
 402241c:	d9402e17 	ldw	r5,184(sp)
 4022420:	d8802b17 	ldw	r2,172(sp)
 4022424:	28a7c83a 	sub	r19,r5,r2
 4022428:	04fde00e 	bge	zero,r19,4021bac <__flash_rwdata_start+0xffff12e8>
 402242c:	05400404 	movi	r21,16
 4022430:	d8801f17 	ldw	r2,124(sp)
 4022434:	acc3870e 	bge	r21,r19,4023254 <___vfprintf_internal_r+0x1d90>
 4022438:	01400034 	movhi	r5,0
 402243c:	29402684 	addi	r5,r5,154
 4022440:	d9402c15 	stw	r5,176(sp)
 4022444:	048001c4 	movi	r18,7
 4022448:	00000306 	br	4022458 <___vfprintf_internal_r+0xf94>
 402244c:	9cfffc04 	addi	r19,r19,-16
 4022450:	42000204 	addi	r8,r8,8
 4022454:	acc0110e 	bge	r21,r19,402249c <___vfprintf_internal_r+0xfd8>
 4022458:	18c00404 	addi	r3,r3,16
 402245c:	10800044 	addi	r2,r2,1
 4022460:	45000015 	stw	r20,0(r8)
 4022464:	45400115 	stw	r21,4(r8)
 4022468:	d8c02015 	stw	r3,128(sp)
 402246c:	d8801f15 	stw	r2,124(sp)
 4022470:	90bff60e 	bge	r18,r2,402244c <__flash_rwdata_start+0xffff1b88>
 4022474:	b809883a 	mov	r4,r23
 4022478:	b00b883a 	mov	r5,r22
 402247c:	d9801e04 	addi	r6,sp,120
 4022480:	40289c80 	call	40289c8 <__sprint_r>
 4022484:	103d041e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4022488:	9cfffc04 	addi	r19,r19,-16
 402248c:	d8c02017 	ldw	r3,128(sp)
 4022490:	d8801f17 	ldw	r2,124(sp)
 4022494:	da000404 	addi	r8,sp,16
 4022498:	acffef16 	blt	r21,r19,4022458 <__flash_rwdata_start+0xffff1b94>
 402249c:	d9002c17 	ldw	r4,176(sp)
 40224a0:	1cc7883a 	add	r3,r3,r19
 40224a4:	10800044 	addi	r2,r2,1
 40224a8:	41000015 	stw	r4,0(r8)
 40224ac:	44c00115 	stw	r19,4(r8)
 40224b0:	d8c02015 	stw	r3,128(sp)
 40224b4:	d8801f15 	stw	r2,124(sp)
 40224b8:	010001c4 	movi	r4,7
 40224bc:	20817816 	blt	r4,r2,4022aa0 <___vfprintf_internal_r+0x15dc>
 40224c0:	42000204 	addi	r8,r8,8
 40224c4:	003db906 	br	4021bac <__flash_rwdata_start+0xffff12e8>
 40224c8:	d9403317 	ldw	r5,204(sp)
 40224cc:	00800044 	movi	r2,1
 40224d0:	18c00044 	addi	r3,r3,1
 40224d4:	11413e0e 	bge	r2,r5,40229d0 <___vfprintf_internal_r+0x150c>
 40224d8:	dc001f17 	ldw	r16,124(sp)
 40224dc:	d8803117 	ldw	r2,196(sp)
 40224e0:	d8c02015 	stw	r3,128(sp)
 40224e4:	84000044 	addi	r16,r16,1
 40224e8:	40800015 	stw	r2,0(r8)
 40224ec:	00800044 	movi	r2,1
 40224f0:	40800115 	stw	r2,4(r8)
 40224f4:	dc001f15 	stw	r16,124(sp)
 40224f8:	008001c4 	movi	r2,7
 40224fc:	14015616 	blt	r2,r16,4022a58 <___vfprintf_internal_r+0x1594>
 4022500:	42000204 	addi	r8,r8,8
 4022504:	d9003817 	ldw	r4,224(sp)
 4022508:	d9403517 	ldw	r5,212(sp)
 402250c:	84000044 	addi	r16,r16,1
 4022510:	1907883a 	add	r3,r3,r4
 4022514:	41400015 	stw	r5,0(r8)
 4022518:	41000115 	stw	r4,4(r8)
 402251c:	d8c02015 	stw	r3,128(sp)
 4022520:	dc001f15 	stw	r16,124(sp)
 4022524:	008001c4 	movi	r2,7
 4022528:	14015416 	blt	r2,r16,4022a7c <___vfprintf_internal_r+0x15b8>
 402252c:	44400204 	addi	r17,r8,8
 4022530:	d9003717 	ldw	r4,220(sp)
 4022534:	d9403917 	ldw	r5,228(sp)
 4022538:	000d883a 	mov	r6,zero
 402253c:	000f883a 	mov	r7,zero
 4022540:	d8c03d15 	stw	r3,244(sp)
 4022544:	402c6400 	call	402c640 <__eqdf2>
 4022548:	d8c03d17 	ldw	r3,244(sp)
 402254c:	1000aa26 	beq	r2,zero,40227f8 <___vfprintf_internal_r+0x1334>
 4022550:	d9003317 	ldw	r4,204(sp)
 4022554:	d9403117 	ldw	r5,196(sp)
 4022558:	84000044 	addi	r16,r16,1
 402255c:	20bfffc4 	addi	r2,r4,-1
 4022560:	1887883a 	add	r3,r3,r2
 4022564:	29000044 	addi	r4,r5,1
 4022568:	88800115 	stw	r2,4(r17)
 402256c:	89000015 	stw	r4,0(r17)
 4022570:	d8c02015 	stw	r3,128(sp)
 4022574:	dc001f15 	stw	r16,124(sp)
 4022578:	008001c4 	movi	r2,7
 402257c:	14012d16 	blt	r2,r16,4022a34 <___vfprintf_internal_r+0x1570>
 4022580:	8c400204 	addi	r17,r17,8
 4022584:	d9403a17 	ldw	r5,232(sp)
 4022588:	dcc022c4 	addi	r19,sp,139
 402258c:	84000044 	addi	r16,r16,1
 4022590:	1947883a 	add	r3,r3,r5
 4022594:	8cc00015 	stw	r19,0(r17)
 4022598:	89400115 	stw	r5,4(r17)
 402259c:	d8c02015 	stw	r3,128(sp)
 40225a0:	dc001f15 	stw	r16,124(sp)
 40225a4:	008001c4 	movi	r2,7
 40225a8:	14000e16 	blt	r2,r16,40225e4 <___vfprintf_internal_r+0x1120>
 40225ac:	8a000204 	addi	r8,r17,8
 40225b0:	003db406 	br	4021c84 <__flash_rwdata_start+0xffff13c0>
 40225b4:	01000034 	movhi	r4,0
 40225b8:	21002684 	addi	r4,r4,154
 40225bc:	d9002c15 	stw	r4,176(sp)
 40225c0:	d9002c17 	ldw	r4,176(sp)
 40225c4:	1c07883a 	add	r3,r3,r16
 40225c8:	44000115 	stw	r16,4(r8)
 40225cc:	41000015 	stw	r4,0(r8)
 40225d0:	10800044 	addi	r2,r2,1
 40225d4:	d8c02015 	stw	r3,128(sp)
 40225d8:	d8801f15 	stw	r2,124(sp)
 40225dc:	010001c4 	movi	r4,7
 40225e0:	20bda70e 	bge	r4,r2,4021c80 <__flash_rwdata_start+0xffff13bc>
 40225e4:	b809883a 	mov	r4,r23
 40225e8:	b00b883a 	mov	r5,r22
 40225ec:	d9801e04 	addi	r6,sp,120
 40225f0:	40289c80 	call	40289c8 <__sprint_r>
 40225f4:	103ca81e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 40225f8:	d8c02017 	ldw	r3,128(sp)
 40225fc:	da000404 	addi	r8,sp,16
 4022600:	003da006 	br	4021c84 <__flash_rwdata_start+0xffff13c0>
 4022604:	b809883a 	mov	r4,r23
 4022608:	b00b883a 	mov	r5,r22
 402260c:	d9801e04 	addi	r6,sp,120
 4022610:	40289c80 	call	40289c8 <__sprint_r>
 4022614:	103dd626 	beq	r2,zero,4021d70 <__flash_rwdata_start+0xffff14ac>
 4022618:	003c9f06 	br	4021898 <__flash_rwdata_start+0xffff0fd4>
 402261c:	10803fcc 	andi	r2,r2,255
 4022620:	1000201e 	bne	r2,zero,40226a4 <___vfprintf_internal_r+0x11e0>
 4022624:	e080004c 	andi	r2,fp,1
 4022628:	10001e26 	beq	r2,zero,40226a4 <___vfprintf_internal_r+0x11e0>
 402262c:	00800c04 	movi	r2,48
 4022630:	d8c01dc4 	addi	r3,sp,119
 4022634:	d8801dc5 	stb	r2,119(sp)
 4022638:	dc403c17 	ldw	r17,240(sp)
 402263c:	d8c03115 	stw	r3,196(sp)
 4022640:	003cf806 	br	4021a24 <__flash_rwdata_start+0xffff1160>
 4022644:	b809883a 	mov	r4,r23
 4022648:	b00b883a 	mov	r5,r22
 402264c:	d9801e04 	addi	r6,sp,120
 4022650:	40289c80 	call	40289c8 <__sprint_r>
 4022654:	103c901e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4022658:	d8c02017 	ldw	r3,128(sp)
 402265c:	da000404 	addi	r8,sp,16
 4022660:	003d7b06 	br	4021c50 <__flash_rwdata_start+0xffff138c>
 4022664:	b809883a 	mov	r4,r23
 4022668:	b00b883a 	mov	r5,r22
 402266c:	d9801e04 	addi	r6,sp,120
 4022670:	40289c80 	call	40289c8 <__sprint_r>
 4022674:	103c881e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4022678:	d8c02017 	ldw	r3,128(sp)
 402267c:	da000404 	addi	r8,sp,16
 4022680:	003d3906 	br	4021b68 <__flash_rwdata_start+0xffff12a4>
 4022684:	b809883a 	mov	r4,r23
 4022688:	b00b883a 	mov	r5,r22
 402268c:	d9801e04 	addi	r6,sp,120
 4022690:	40289c80 	call	40289c8 <__sprint_r>
 4022694:	103c801e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4022698:	d8c02017 	ldw	r3,128(sp)
 402269c:	da000404 	addi	r8,sp,16
 40226a0:	003d3f06 	br	4021ba0 <__flash_rwdata_start+0xffff12dc>
 40226a4:	d8c01e04 	addi	r3,sp,120
 40226a8:	0023883a 	mov	r17,zero
 40226ac:	d8c03115 	stw	r3,196(sp)
 40226b0:	003cdc06 	br	4021a24 <__flash_rwdata_start+0xffff1160>
 40226b4:	d9403b17 	ldw	r5,236(sp)
 40226b8:	d8c01e04 	addi	r3,sp,120
 40226bc:	908003cc 	andi	r2,r18,15
 40226c0:	a808973a 	slli	r4,r21,28
 40226c4:	2885883a 	add	r2,r5,r2
 40226c8:	9024d13a 	srli	r18,r18,4
 40226cc:	10800003 	ldbu	r2,0(r2)
 40226d0:	a82ad13a 	srli	r21,r21,4
 40226d4:	18ffffc4 	addi	r3,r3,-1
 40226d8:	24a4b03a 	or	r18,r4,r18
 40226dc:	18800005 	stb	r2,0(r3)
 40226e0:	9544b03a 	or	r2,r18,r21
 40226e4:	103ff51e 	bne	r2,zero,40226bc <__flash_rwdata_start+0xffff1df8>
 40226e8:	d9402817 	ldw	r5,160(sp)
 40226ec:	d8c03115 	stw	r3,196(sp)
 40226f0:	28e3c83a 	sub	r17,r5,r3
 40226f4:	003ccb06 	br	4021a24 <__flash_rwdata_start+0xffff1160>
 40226f8:	dc002617 	ldw	r16,152(sp)
 40226fc:	0401ab0e 	bge	zero,r16,4022dac <___vfprintf_internal_r+0x18e8>
 4022700:	d8803317 	ldw	r2,204(sp)
 4022704:	d9403117 	ldw	r5,196(sp)
 4022708:	d9003417 	ldw	r4,208(sp)
 402270c:	1023883a 	mov	r17,r2
 4022710:	28a1883a 	add	r16,r5,r2
 4022714:	2080010e 	bge	r4,r2,402271c <___vfprintf_internal_r+0x1258>
 4022718:	2023883a 	mov	r17,r4
 402271c:	04400b0e 	bge	zero,r17,402274c <___vfprintf_internal_r+0x1288>
 4022720:	d8801f17 	ldw	r2,124(sp)
 4022724:	d9403117 	ldw	r5,196(sp)
 4022728:	1c47883a 	add	r3,r3,r17
 402272c:	10800044 	addi	r2,r2,1
 4022730:	41400015 	stw	r5,0(r8)
 4022734:	44400115 	stw	r17,4(r8)
 4022738:	d8c02015 	stw	r3,128(sp)
 402273c:	d8801f15 	stw	r2,124(sp)
 4022740:	010001c4 	movi	r4,7
 4022744:	20826716 	blt	r4,r2,40230e4 <___vfprintf_internal_r+0x1c20>
 4022748:	42000204 	addi	r8,r8,8
 402274c:	88026316 	blt	r17,zero,40230dc <___vfprintf_internal_r+0x1c18>
 4022750:	d8803417 	ldw	r2,208(sp)
 4022754:	1463c83a 	sub	r17,r2,r17
 4022758:	0440590e 	bge	zero,r17,40228c0 <___vfprintf_internal_r+0x13fc>
 402275c:	04c00404 	movi	r19,16
 4022760:	d8801f17 	ldw	r2,124(sp)
 4022764:	9c41770e 	bge	r19,r17,4022d44 <___vfprintf_internal_r+0x1880>
 4022768:	01400034 	movhi	r5,0
 402276c:	29402684 	addi	r5,r5,154
 4022770:	d9402c15 	stw	r5,176(sp)
 4022774:	054001c4 	movi	r21,7
 4022778:	00000306 	br	4022788 <___vfprintf_internal_r+0x12c4>
 402277c:	42000204 	addi	r8,r8,8
 4022780:	8c7ffc04 	addi	r17,r17,-16
 4022784:	9c41720e 	bge	r19,r17,4022d50 <___vfprintf_internal_r+0x188c>
 4022788:	18c00404 	addi	r3,r3,16
 402278c:	10800044 	addi	r2,r2,1
 4022790:	45000015 	stw	r20,0(r8)
 4022794:	44c00115 	stw	r19,4(r8)
 4022798:	d8c02015 	stw	r3,128(sp)
 402279c:	d8801f15 	stw	r2,124(sp)
 40227a0:	a8bff60e 	bge	r21,r2,402277c <__flash_rwdata_start+0xffff1eb8>
 40227a4:	b809883a 	mov	r4,r23
 40227a8:	b00b883a 	mov	r5,r22
 40227ac:	d9801e04 	addi	r6,sp,120
 40227b0:	40289c80 	call	40289c8 <__sprint_r>
 40227b4:	103c381e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 40227b8:	d8c02017 	ldw	r3,128(sp)
 40227bc:	d8801f17 	ldw	r2,124(sp)
 40227c0:	da000404 	addi	r8,sp,16
 40227c4:	003fee06 	br	4022780 <__flash_rwdata_start+0xffff1ebc>
 40227c8:	b809883a 	mov	r4,r23
 40227cc:	b00b883a 	mov	r5,r22
 40227d0:	d9801e04 	addi	r6,sp,120
 40227d4:	40289c80 	call	40289c8 <__sprint_r>
 40227d8:	103c2f1e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 40227dc:	d8c02017 	ldw	r3,128(sp)
 40227e0:	d8802787 	ldb	r2,158(sp)
 40227e4:	da000404 	addi	r8,sp,16
 40227e8:	003cd206 	br	4021b34 <__flash_rwdata_start+0xffff1270>
 40227ec:	00800084 	movi	r2,2
 40227f0:	9546b03a 	or	r3,r18,r21
 40227f4:	003d9f06 	br	4021e74 <__flash_rwdata_start+0xffff15b0>
 40227f8:	d8803317 	ldw	r2,204(sp)
 40227fc:	14ffffc4 	addi	r19,r2,-1
 4022800:	04ff600e 	bge	zero,r19,4022584 <__flash_rwdata_start+0xffff1cc0>
 4022804:	05400404 	movi	r21,16
 4022808:	acc07e0e 	bge	r21,r19,4022a04 <___vfprintf_internal_r+0x1540>
 402280c:	01400034 	movhi	r5,0
 4022810:	29402684 	addi	r5,r5,154
 4022814:	d9402c15 	stw	r5,176(sp)
 4022818:	01c001c4 	movi	r7,7
 402281c:	00000306 	br	402282c <___vfprintf_internal_r+0x1368>
 4022820:	8c400204 	addi	r17,r17,8
 4022824:	9cfffc04 	addi	r19,r19,-16
 4022828:	acc0790e 	bge	r21,r19,4022a10 <___vfprintf_internal_r+0x154c>
 402282c:	18c00404 	addi	r3,r3,16
 4022830:	84000044 	addi	r16,r16,1
 4022834:	8d000015 	stw	r20,0(r17)
 4022838:	8d400115 	stw	r21,4(r17)
 402283c:	d8c02015 	stw	r3,128(sp)
 4022840:	dc001f15 	stw	r16,124(sp)
 4022844:	3c3ff60e 	bge	r7,r16,4022820 <__flash_rwdata_start+0xffff1f5c>
 4022848:	b809883a 	mov	r4,r23
 402284c:	b00b883a 	mov	r5,r22
 4022850:	d9801e04 	addi	r6,sp,120
 4022854:	d9c03d15 	stw	r7,244(sp)
 4022858:	40289c80 	call	40289c8 <__sprint_r>
 402285c:	d9c03d17 	ldw	r7,244(sp)
 4022860:	103c0d1e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4022864:	d8c02017 	ldw	r3,128(sp)
 4022868:	dc001f17 	ldw	r16,124(sp)
 402286c:	dc400404 	addi	r17,sp,16
 4022870:	003fec06 	br	4022824 <__flash_rwdata_start+0xffff1f60>
 4022874:	10803fcc 	andi	r2,r2,255
 4022878:	1080201c 	xori	r2,r2,128
 402287c:	10bfe004 	addi	r2,r2,-128
 4022880:	01000c04 	movi	r4,48
 4022884:	1101d726 	beq	r2,r4,4022fe4 <___vfprintf_internal_r+0x1b20>
 4022888:	d9403117 	ldw	r5,196(sp)
 402288c:	d8802817 	ldw	r2,160(sp)
 4022890:	193fffc5 	stb	r4,-1(r3)
 4022894:	297fffc4 	addi	r5,r5,-1
 4022898:	d9403115 	stw	r5,196(sp)
 402289c:	1163c83a 	sub	r17,r2,r5
 40228a0:	003c6006 	br	4021a24 <__flash_rwdata_start+0xffff1160>
 40228a4:	b809883a 	mov	r4,r23
 40228a8:	b00b883a 	mov	r5,r22
 40228ac:	d9801e04 	addi	r6,sp,120
 40228b0:	40289c80 	call	40289c8 <__sprint_r>
 40228b4:	103bf81e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 40228b8:	d8c02017 	ldw	r3,128(sp)
 40228bc:	da000404 	addi	r8,sp,16
 40228c0:	d9403117 	ldw	r5,196(sp)
 40228c4:	d9003417 	ldw	r4,208(sp)
 40228c8:	d8802617 	ldw	r2,152(sp)
 40228cc:	2923883a 	add	r17,r5,r4
 40228d0:	d9403317 	ldw	r5,204(sp)
 40228d4:	11400216 	blt	r2,r5,40228e0 <___vfprintf_internal_r+0x141c>
 40228d8:	e100004c 	andi	r4,fp,1
 40228dc:	20000d26 	beq	r4,zero,4022914 <___vfprintf_internal_r+0x1450>
 40228e0:	d9003817 	ldw	r4,224(sp)
 40228e4:	d9403517 	ldw	r5,212(sp)
 40228e8:	1907883a 	add	r3,r3,r4
 40228ec:	d9001f17 	ldw	r4,124(sp)
 40228f0:	41400015 	stw	r5,0(r8)
 40228f4:	d9403817 	ldw	r5,224(sp)
 40228f8:	21000044 	addi	r4,r4,1
 40228fc:	d8c02015 	stw	r3,128(sp)
 4022900:	41400115 	stw	r5,4(r8)
 4022904:	d9001f15 	stw	r4,124(sp)
 4022908:	014001c4 	movi	r5,7
 402290c:	2901fd16 	blt	r5,r4,4023104 <___vfprintf_internal_r+0x1c40>
 4022910:	42000204 	addi	r8,r8,8
 4022914:	d9003317 	ldw	r4,204(sp)
 4022918:	2085c83a 	sub	r2,r4,r2
 402291c:	8449c83a 	sub	r4,r16,r17
 4022920:	1021883a 	mov	r16,r2
 4022924:	2080010e 	bge	r4,r2,402292c <___vfprintf_internal_r+0x1468>
 4022928:	2021883a 	mov	r16,r4
 402292c:	04000a0e 	bge	zero,r16,4022958 <___vfprintf_internal_r+0x1494>
 4022930:	d9001f17 	ldw	r4,124(sp)
 4022934:	1c07883a 	add	r3,r3,r16
 4022938:	44400015 	stw	r17,0(r8)
 402293c:	21000044 	addi	r4,r4,1
 4022940:	44000115 	stw	r16,4(r8)
 4022944:	d8c02015 	stw	r3,128(sp)
 4022948:	d9001f15 	stw	r4,124(sp)
 402294c:	014001c4 	movi	r5,7
 4022950:	29021816 	blt	r5,r4,40231b4 <___vfprintf_internal_r+0x1cf0>
 4022954:	42000204 	addi	r8,r8,8
 4022958:	80021016 	blt	r16,zero,402319c <___vfprintf_internal_r+0x1cd8>
 402295c:	1421c83a 	sub	r16,r2,r16
 4022960:	043cc80e 	bge	zero,r16,4021c84 <__flash_rwdata_start+0xffff13c0>
 4022964:	04400404 	movi	r17,16
 4022968:	d8801f17 	ldw	r2,124(sp)
 402296c:	8c3f110e 	bge	r17,r16,40225b4 <__flash_rwdata_start+0xffff1cf0>
 4022970:	01400034 	movhi	r5,0
 4022974:	29402684 	addi	r5,r5,154
 4022978:	d9402c15 	stw	r5,176(sp)
 402297c:	04c001c4 	movi	r19,7
 4022980:	00000306 	br	4022990 <___vfprintf_internal_r+0x14cc>
 4022984:	42000204 	addi	r8,r8,8
 4022988:	843ffc04 	addi	r16,r16,-16
 402298c:	8c3f0c0e 	bge	r17,r16,40225c0 <__flash_rwdata_start+0xffff1cfc>
 4022990:	18c00404 	addi	r3,r3,16
 4022994:	10800044 	addi	r2,r2,1
 4022998:	45000015 	stw	r20,0(r8)
 402299c:	44400115 	stw	r17,4(r8)
 40229a0:	d8c02015 	stw	r3,128(sp)
 40229a4:	d8801f15 	stw	r2,124(sp)
 40229a8:	98bff60e 	bge	r19,r2,4022984 <__flash_rwdata_start+0xffff20c0>
 40229ac:	b809883a 	mov	r4,r23
 40229b0:	b00b883a 	mov	r5,r22
 40229b4:	d9801e04 	addi	r6,sp,120
 40229b8:	40289c80 	call	40289c8 <__sprint_r>
 40229bc:	103bb61e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 40229c0:	d8c02017 	ldw	r3,128(sp)
 40229c4:	d8801f17 	ldw	r2,124(sp)
 40229c8:	da000404 	addi	r8,sp,16
 40229cc:	003fee06 	br	4022988 <__flash_rwdata_start+0xffff20c4>
 40229d0:	e088703a 	and	r4,fp,r2
 40229d4:	203ec01e 	bne	r4,zero,40224d8 <__flash_rwdata_start+0xffff1c14>
 40229d8:	dc001f17 	ldw	r16,124(sp)
 40229dc:	d9003117 	ldw	r4,196(sp)
 40229e0:	40800115 	stw	r2,4(r8)
 40229e4:	84000044 	addi	r16,r16,1
 40229e8:	41000015 	stw	r4,0(r8)
 40229ec:	d8c02015 	stw	r3,128(sp)
 40229f0:	dc001f15 	stw	r16,124(sp)
 40229f4:	008001c4 	movi	r2,7
 40229f8:	14000e16 	blt	r2,r16,4022a34 <___vfprintf_internal_r+0x1570>
 40229fc:	44400204 	addi	r17,r8,8
 4022a00:	003ee006 	br	4022584 <__flash_rwdata_start+0xffff1cc0>
 4022a04:	01000034 	movhi	r4,0
 4022a08:	21002684 	addi	r4,r4,154
 4022a0c:	d9002c15 	stw	r4,176(sp)
 4022a10:	d8802c17 	ldw	r2,176(sp)
 4022a14:	1cc7883a 	add	r3,r3,r19
 4022a18:	84000044 	addi	r16,r16,1
 4022a1c:	88800015 	stw	r2,0(r17)
 4022a20:	8cc00115 	stw	r19,4(r17)
 4022a24:	d8c02015 	stw	r3,128(sp)
 4022a28:	dc001f15 	stw	r16,124(sp)
 4022a2c:	008001c4 	movi	r2,7
 4022a30:	143ed30e 	bge	r2,r16,4022580 <__flash_rwdata_start+0xffff1cbc>
 4022a34:	b809883a 	mov	r4,r23
 4022a38:	b00b883a 	mov	r5,r22
 4022a3c:	d9801e04 	addi	r6,sp,120
 4022a40:	40289c80 	call	40289c8 <__sprint_r>
 4022a44:	103b941e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4022a48:	d8c02017 	ldw	r3,128(sp)
 4022a4c:	dc001f17 	ldw	r16,124(sp)
 4022a50:	dc400404 	addi	r17,sp,16
 4022a54:	003ecb06 	br	4022584 <__flash_rwdata_start+0xffff1cc0>
 4022a58:	b809883a 	mov	r4,r23
 4022a5c:	b00b883a 	mov	r5,r22
 4022a60:	d9801e04 	addi	r6,sp,120
 4022a64:	40289c80 	call	40289c8 <__sprint_r>
 4022a68:	103b8b1e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4022a6c:	d8c02017 	ldw	r3,128(sp)
 4022a70:	dc001f17 	ldw	r16,124(sp)
 4022a74:	da000404 	addi	r8,sp,16
 4022a78:	003ea206 	br	4022504 <__flash_rwdata_start+0xffff1c40>
 4022a7c:	b809883a 	mov	r4,r23
 4022a80:	b00b883a 	mov	r5,r22
 4022a84:	d9801e04 	addi	r6,sp,120
 4022a88:	40289c80 	call	40289c8 <__sprint_r>
 4022a8c:	103b821e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4022a90:	d8c02017 	ldw	r3,128(sp)
 4022a94:	dc001f17 	ldw	r16,124(sp)
 4022a98:	dc400404 	addi	r17,sp,16
 4022a9c:	003ea406 	br	4022530 <__flash_rwdata_start+0xffff1c6c>
 4022aa0:	b809883a 	mov	r4,r23
 4022aa4:	b00b883a 	mov	r5,r22
 4022aa8:	d9801e04 	addi	r6,sp,120
 4022aac:	40289c80 	call	40289c8 <__sprint_r>
 4022ab0:	103b791e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4022ab4:	d8c02017 	ldw	r3,128(sp)
 4022ab8:	da000404 	addi	r8,sp,16
 4022abc:	003c3b06 	br	4021bac <__flash_rwdata_start+0xffff12e8>
 4022ac0:	04a5c83a 	sub	r18,zero,r18
 4022ac4:	9004c03a 	cmpne	r2,r18,zero
 4022ac8:	056bc83a 	sub	r21,zero,r21
 4022acc:	a8abc83a 	sub	r21,r21,r2
 4022ad0:	04c00b44 	movi	r19,45
 4022ad4:	dcc02785 	stb	r19,158(sp)
 4022ad8:	da403215 	stw	r9,200(sp)
 4022adc:	00800044 	movi	r2,1
 4022ae0:	9546b03a 	or	r3,r18,r21
 4022ae4:	003bb506 	br	40219bc <__flash_rwdata_start+0xffff10f8>
 4022ae8:	da003f15 	stw	r8,252(sp)
 4022aec:	da403e15 	stw	r9,248(sp)
 4022af0:	40286240 	call	4028624 <__fpclassifyd>
 4022af4:	da003f17 	ldw	r8,252(sp)
 4022af8:	da403e17 	ldw	r9,248(sp)
 4022afc:	1000e526 	beq	r2,zero,4022e94 <___vfprintf_internal_r+0x19d0>
 4022b00:	04fff7c4 	movi	r19,-33
 4022b04:	00bfffc4 	movi	r2,-1
 4022b08:	84e6703a 	and	r19,r16,r19
 4022b0c:	48822526 	beq	r9,r2,40233a4 <___vfprintf_internal_r+0x1ee0>
 4022b10:	008011c4 	movi	r2,71
 4022b14:	98821626 	beq	r19,r2,4023370 <___vfprintf_internal_r+0x1eac>
 4022b18:	d9003917 	ldw	r4,228(sp)
 4022b1c:	e0c04014 	ori	r3,fp,256
 4022b20:	d8c02d15 	stw	r3,180(sp)
 4022b24:	20022116 	blt	r4,zero,40233ac <___vfprintf_internal_r+0x1ee8>
 4022b28:	dc403917 	ldw	r17,228(sp)
 4022b2c:	d8002b05 	stb	zero,172(sp)
 4022b30:	00801984 	movi	r2,102
 4022b34:	80814d26 	beq	r16,r2,402306c <___vfprintf_internal_r+0x1ba8>
 4022b38:	00801184 	movi	r2,70
 4022b3c:	80814b26 	beq	r16,r2,402306c <___vfprintf_internal_r+0x1ba8>
 4022b40:	00801144 	movi	r2,69
 4022b44:	98822626 	beq	r19,r2,40233e0 <___vfprintf_internal_r+0x1f1c>
 4022b48:	482b883a 	mov	r21,r9
 4022b4c:	d8802604 	addi	r2,sp,152
 4022b50:	d8800115 	stw	r2,4(sp)
 4022b54:	d9403717 	ldw	r5,220(sp)
 4022b58:	d8802504 	addi	r2,sp,148
 4022b5c:	d8800215 	stw	r2,8(sp)
 4022b60:	d8802104 	addi	r2,sp,132
 4022b64:	dd400015 	stw	r21,0(sp)
 4022b68:	d8800315 	stw	r2,12(sp)
 4022b6c:	b809883a 	mov	r4,r23
 4022b70:	880d883a 	mov	r6,r17
 4022b74:	01c00084 	movi	r7,2
 4022b78:	da003f15 	stw	r8,252(sp)
 4022b7c:	da403e15 	stw	r9,248(sp)
 4022b80:	40239780 	call	4023978 <_dtoa_r>
 4022b84:	d8803115 	stw	r2,196(sp)
 4022b88:	008019c4 	movi	r2,103
 4022b8c:	da003f17 	ldw	r8,252(sp)
 4022b90:	da403e17 	ldw	r9,248(sp)
 4022b94:	80800226 	beq	r16,r2,4022ba0 <___vfprintf_internal_r+0x16dc>
 4022b98:	008011c4 	movi	r2,71
 4022b9c:	8081451e 	bne	r16,r2,40230b4 <___vfprintf_internal_r+0x1bf0>
 4022ba0:	e080004c 	andi	r2,fp,1
 4022ba4:	10021e26 	beq	r2,zero,4023420 <___vfprintf_internal_r+0x1f5c>
 4022ba8:	d8c03117 	ldw	r3,196(sp)
 4022bac:	1d55883a 	add	r10,r3,r21
 4022bb0:	d9003717 	ldw	r4,220(sp)
 4022bb4:	880b883a 	mov	r5,r17
 4022bb8:	000d883a 	mov	r6,zero
 4022bbc:	000f883a 	mov	r7,zero
 4022bc0:	da003f15 	stw	r8,252(sp)
 4022bc4:	da403e15 	stw	r9,248(sp)
 4022bc8:	da803d15 	stw	r10,244(sp)
 4022bcc:	402c6400 	call	402c640 <__eqdf2>
 4022bd0:	da003f17 	ldw	r8,252(sp)
 4022bd4:	da403e17 	ldw	r9,248(sp)
 4022bd8:	da803d17 	ldw	r10,244(sp)
 4022bdc:	1001a126 	beq	r2,zero,4023264 <___vfprintf_internal_r+0x1da0>
 4022be0:	d8802117 	ldw	r2,132(sp)
 4022be4:	1280062e 	bgeu	r2,r10,4022c00 <___vfprintf_internal_r+0x173c>
 4022be8:	01000c04 	movi	r4,48
 4022bec:	10c00044 	addi	r3,r2,1
 4022bf0:	d8c02115 	stw	r3,132(sp)
 4022bf4:	11000005 	stb	r4,0(r2)
 4022bf8:	d8802117 	ldw	r2,132(sp)
 4022bfc:	12bffb36 	bltu	r2,r10,4022bec <__flash_rwdata_start+0xffff2328>
 4022c00:	d8c03117 	ldw	r3,196(sp)
 4022c04:	10c5c83a 	sub	r2,r2,r3
 4022c08:	d8803315 	stw	r2,204(sp)
 4022c0c:	008011c4 	movi	r2,71
 4022c10:	98817f26 	beq	r19,r2,4023210 <___vfprintf_internal_r+0x1d4c>
 4022c14:	00801944 	movi	r2,101
 4022c18:	14023e0e 	bge	r2,r16,4023514 <___vfprintf_internal_r+0x2050>
 4022c1c:	d8c02617 	ldw	r3,152(sp)
 4022c20:	00801984 	movi	r2,102
 4022c24:	d8c03415 	stw	r3,208(sp)
 4022c28:	8081f326 	beq	r16,r2,40233f8 <___vfprintf_internal_r+0x1f34>
 4022c2c:	d8c03417 	ldw	r3,208(sp)
 4022c30:	d9003317 	ldw	r4,204(sp)
 4022c34:	1901e116 	blt	r3,r4,40233bc <___vfprintf_internal_r+0x1ef8>
 4022c38:	e080004c 	andi	r2,fp,1
 4022c3c:	1001ea26 	beq	r2,zero,40233e8 <___vfprintf_internal_r+0x1f24>
 4022c40:	d8c03417 	ldw	r3,208(sp)
 4022c44:	1c400044 	addi	r17,r3,1
 4022c48:	8839883a 	mov	fp,r17
 4022c4c:	8801e216 	blt	r17,zero,40233d8 <___vfprintf_internal_r+0x1f14>
 4022c50:	dd402b07 	ldb	r21,172(sp)
 4022c54:	a801661e 	bne	r21,zero,40231f0 <___vfprintf_internal_r+0x1d2c>
 4022c58:	df002b15 	stw	fp,172(sp)
 4022c5c:	dcc02783 	ldbu	r19,158(sp)
 4022c60:	df002d17 	ldw	fp,180(sp)
 4022c64:	d8003215 	stw	zero,200(sp)
 4022c68:	dc802d15 	stw	r18,180(sp)
 4022c6c:	003b7206 	br	4021a38 <__flash_rwdata_start+0xffff1174>
 4022c70:	e4000007 	ldb	r16,0(fp)
 4022c74:	e005883a 	mov	r2,fp
 4022c78:	003a7806 	br	402165c <__flash_rwdata_start+0xffff0d98>
 4022c7c:	e0c0100c 	andi	r3,fp,64
 4022c80:	1800b326 	beq	r3,zero,4022f50 <___vfprintf_internal_r+0x1a8c>
 4022c84:	d9002d17 	ldw	r4,180(sp)
 4022c88:	1480000b 	ldhu	r18,0(r2)
 4022c8c:	002b883a 	mov	r21,zero
 4022c90:	21000104 	addi	r4,r4,4
 4022c94:	d9002d15 	stw	r4,180(sp)
 4022c98:	003cd506 	br	4021ff0 <__flash_rwdata_start+0xffff172c>
 4022c9c:	e080100c 	andi	r2,fp,64
 4022ca0:	1000a326 	beq	r2,zero,4022f30 <___vfprintf_internal_r+0x1a6c>
 4022ca4:	d8802d17 	ldw	r2,180(sp)
 4022ca8:	002b883a 	mov	r21,zero
 4022cac:	1480000b 	ldhu	r18,0(r2)
 4022cb0:	10800104 	addi	r2,r2,4
 4022cb4:	d8802d15 	stw	r2,180(sp)
 4022cb8:	9007883a 	mov	r3,r18
 4022cbc:	00800044 	movi	r2,1
 4022cc0:	003c6c06 	br	4021e74 <__flash_rwdata_start+0xffff15b0>
 4022cc4:	e080100c 	andi	r2,fp,64
 4022cc8:	10009226 	beq	r2,zero,4022f14 <___vfprintf_internal_r+0x1a50>
 4022ccc:	1c80000f 	ldh	r18,0(r3)
 4022cd0:	d8802d17 	ldw	r2,180(sp)
 4022cd4:	902bd7fa 	srai	r21,r18,31
 4022cd8:	10800104 	addi	r2,r2,4
 4022cdc:	d8802d15 	stw	r2,180(sp)
 4022ce0:	a805883a 	mov	r2,r21
 4022ce4:	003b3006 	br	40219a8 <__flash_rwdata_start+0xffff10e4>
 4022ce8:	e080100c 	andi	r2,fp,64
 4022cec:	10008126 	beq	r2,zero,4022ef4 <___vfprintf_internal_r+0x1a30>
 4022cf0:	d8c02d17 	ldw	r3,180(sp)
 4022cf4:	002b883a 	mov	r21,zero
 4022cf8:	0005883a 	mov	r2,zero
 4022cfc:	1c80000b 	ldhu	r18,0(r3)
 4022d00:	18c00104 	addi	r3,r3,4
 4022d04:	d8c02d15 	stw	r3,180(sp)
 4022d08:	9007883a 	mov	r3,r18
 4022d0c:	003c5906 	br	4021e74 <__flash_rwdata_start+0xffff15b0>
 4022d10:	e080040c 	andi	r2,fp,16
 4022d14:	1000701e 	bne	r2,zero,4022ed8 <___vfprintf_internal_r+0x1a14>
 4022d18:	e080100c 	andi	r2,fp,64
 4022d1c:	10014626 	beq	r2,zero,4023238 <___vfprintf_internal_r+0x1d74>
 4022d20:	d9002d17 	ldw	r4,180(sp)
 4022d24:	d9402f17 	ldw	r5,188(sp)
 4022d28:	20800017 	ldw	r2,0(r4)
 4022d2c:	21000104 	addi	r4,r4,4
 4022d30:	d9002d15 	stw	r4,180(sp)
 4022d34:	1140000d 	sth	r5,0(r2)
 4022d38:	003a1d06 	br	40215b0 <__flash_rwdata_start+0xffff0cec>
 4022d3c:	00800084 	movi	r2,2
 4022d40:	003c4c06 	br	4021e74 <__flash_rwdata_start+0xffff15b0>
 4022d44:	01000034 	movhi	r4,0
 4022d48:	21002684 	addi	r4,r4,154
 4022d4c:	d9002c15 	stw	r4,176(sp)
 4022d50:	d9002c17 	ldw	r4,176(sp)
 4022d54:	1c47883a 	add	r3,r3,r17
 4022d58:	10800044 	addi	r2,r2,1
 4022d5c:	41000015 	stw	r4,0(r8)
 4022d60:	44400115 	stw	r17,4(r8)
 4022d64:	d8c02015 	stw	r3,128(sp)
 4022d68:	d8801f15 	stw	r2,124(sp)
 4022d6c:	010001c4 	movi	r4,7
 4022d70:	20becc16 	blt	r4,r2,40228a4 <__flash_rwdata_start+0xffff1fe0>
 4022d74:	42000204 	addi	r8,r8,8
 4022d78:	003ed106 	br	40228c0 <__flash_rwdata_start+0xffff1ffc>
 4022d7c:	01000034 	movhi	r4,0
 4022d80:	21002684 	addi	r4,r4,154
 4022d84:	d9002c15 	stw	r4,176(sp)
 4022d88:	003ba706 	br	4021c28 <__flash_rwdata_start+0xffff1364>
 4022d8c:	b809883a 	mov	r4,r23
 4022d90:	b00b883a 	mov	r5,r22
 4022d94:	d9801e04 	addi	r6,sp,120
 4022d98:	40289c80 	call	40289c8 <__sprint_r>
 4022d9c:	103abe1e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4022da0:	d8c02017 	ldw	r3,128(sp)
 4022da4:	da000404 	addi	r8,sp,16
 4022da8:	003d6c06 	br	402235c <__flash_rwdata_start+0xffff1a98>
 4022dac:	d8801f17 	ldw	r2,124(sp)
 4022db0:	01400034 	movhi	r5,0
 4022db4:	01000044 	movi	r4,1
 4022db8:	18c00044 	addi	r3,r3,1
 4022dbc:	10800044 	addi	r2,r2,1
 4022dc0:	29402604 	addi	r5,r5,152
 4022dc4:	41000115 	stw	r4,4(r8)
 4022dc8:	41400015 	stw	r5,0(r8)
 4022dcc:	d8c02015 	stw	r3,128(sp)
 4022dd0:	d8801f15 	stw	r2,124(sp)
 4022dd4:	010001c4 	movi	r4,7
 4022dd8:	20806716 	blt	r4,r2,4022f78 <___vfprintf_internal_r+0x1ab4>
 4022ddc:	42000204 	addi	r8,r8,8
 4022de0:	8000041e 	bne	r16,zero,4022df4 <___vfprintf_internal_r+0x1930>
 4022de4:	d8803317 	ldw	r2,204(sp)
 4022de8:	1000021e 	bne	r2,zero,4022df4 <___vfprintf_internal_r+0x1930>
 4022dec:	e080004c 	andi	r2,fp,1
 4022df0:	103ba426 	beq	r2,zero,4021c84 <__flash_rwdata_start+0xffff13c0>
 4022df4:	d9003817 	ldw	r4,224(sp)
 4022df8:	d8801f17 	ldw	r2,124(sp)
 4022dfc:	d9403517 	ldw	r5,212(sp)
 4022e00:	1907883a 	add	r3,r3,r4
 4022e04:	10800044 	addi	r2,r2,1
 4022e08:	41000115 	stw	r4,4(r8)
 4022e0c:	41400015 	stw	r5,0(r8)
 4022e10:	d8c02015 	stw	r3,128(sp)
 4022e14:	d8801f15 	stw	r2,124(sp)
 4022e18:	010001c4 	movi	r4,7
 4022e1c:	20815716 	blt	r4,r2,402337c <___vfprintf_internal_r+0x1eb8>
 4022e20:	42000204 	addi	r8,r8,8
 4022e24:	0421c83a 	sub	r16,zero,r16
 4022e28:	0400810e 	bge	zero,r16,4023030 <___vfprintf_internal_r+0x1b6c>
 4022e2c:	04400404 	movi	r17,16
 4022e30:	8c00bd0e 	bge	r17,r16,4023128 <___vfprintf_internal_r+0x1c64>
 4022e34:	01400034 	movhi	r5,0
 4022e38:	29402684 	addi	r5,r5,154
 4022e3c:	d9402c15 	stw	r5,176(sp)
 4022e40:	04c001c4 	movi	r19,7
 4022e44:	00000306 	br	4022e54 <___vfprintf_internal_r+0x1990>
 4022e48:	42000204 	addi	r8,r8,8
 4022e4c:	843ffc04 	addi	r16,r16,-16
 4022e50:	8c00b80e 	bge	r17,r16,4023134 <___vfprintf_internal_r+0x1c70>
 4022e54:	18c00404 	addi	r3,r3,16
 4022e58:	10800044 	addi	r2,r2,1
 4022e5c:	45000015 	stw	r20,0(r8)
 4022e60:	44400115 	stw	r17,4(r8)
 4022e64:	d8c02015 	stw	r3,128(sp)
 4022e68:	d8801f15 	stw	r2,124(sp)
 4022e6c:	98bff60e 	bge	r19,r2,4022e48 <__flash_rwdata_start+0xffff2584>
 4022e70:	b809883a 	mov	r4,r23
 4022e74:	b00b883a 	mov	r5,r22
 4022e78:	d9801e04 	addi	r6,sp,120
 4022e7c:	40289c80 	call	40289c8 <__sprint_r>
 4022e80:	103a851e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4022e84:	d8c02017 	ldw	r3,128(sp)
 4022e88:	d8801f17 	ldw	r2,124(sp)
 4022e8c:	da000404 	addi	r8,sp,16
 4022e90:	003fee06 	br	4022e4c <__flash_rwdata_start+0xffff2588>
 4022e94:	008011c4 	movi	r2,71
 4022e98:	1400d116 	blt	r2,r16,40231e0 <___vfprintf_internal_r+0x1d1c>
 4022e9c:	01000034 	movhi	r4,0
 4022ea0:	21001804 	addi	r4,r4,96
 4022ea4:	d9003115 	stw	r4,196(sp)
 4022ea8:	00c000c4 	movi	r3,3
 4022eac:	00bfdfc4 	movi	r2,-129
 4022eb0:	d8c02b15 	stw	r3,172(sp)
 4022eb4:	e0b8703a 	and	fp,fp,r2
 4022eb8:	dcc02783 	ldbu	r19,158(sp)
 4022ebc:	dc802d15 	stw	r18,180(sp)
 4022ec0:	1823883a 	mov	r17,r3
 4022ec4:	d8003215 	stw	zero,200(sp)
 4022ec8:	d8003415 	stw	zero,208(sp)
 4022ecc:	003ada06 	br	4021a38 <__flash_rwdata_start+0xffff1174>
 4022ed0:	4823883a 	mov	r17,r9
 4022ed4:	003c9406 	br	4022128 <__flash_rwdata_start+0xffff1864>
 4022ed8:	d9402d17 	ldw	r5,180(sp)
 4022edc:	d8c02f17 	ldw	r3,188(sp)
 4022ee0:	28800017 	ldw	r2,0(r5)
 4022ee4:	29400104 	addi	r5,r5,4
 4022ee8:	d9402d15 	stw	r5,180(sp)
 4022eec:	10c00015 	stw	r3,0(r2)
 4022ef0:	0039af06 	br	40215b0 <__flash_rwdata_start+0xffff0cec>
 4022ef4:	d9002d17 	ldw	r4,180(sp)
 4022ef8:	002b883a 	mov	r21,zero
 4022efc:	0005883a 	mov	r2,zero
 4022f00:	24800017 	ldw	r18,0(r4)
 4022f04:	21000104 	addi	r4,r4,4
 4022f08:	d9002d15 	stw	r4,180(sp)
 4022f0c:	9007883a 	mov	r3,r18
 4022f10:	003bd806 	br	4021e74 <__flash_rwdata_start+0xffff15b0>
 4022f14:	1c800017 	ldw	r18,0(r3)
 4022f18:	d8c02d17 	ldw	r3,180(sp)
 4022f1c:	902bd7fa 	srai	r21,r18,31
 4022f20:	18c00104 	addi	r3,r3,4
 4022f24:	d8c02d15 	stw	r3,180(sp)
 4022f28:	a805883a 	mov	r2,r21
 4022f2c:	003a9e06 	br	40219a8 <__flash_rwdata_start+0xffff10e4>
 4022f30:	d8c02d17 	ldw	r3,180(sp)
 4022f34:	002b883a 	mov	r21,zero
 4022f38:	00800044 	movi	r2,1
 4022f3c:	1c800017 	ldw	r18,0(r3)
 4022f40:	18c00104 	addi	r3,r3,4
 4022f44:	d8c02d15 	stw	r3,180(sp)
 4022f48:	9007883a 	mov	r3,r18
 4022f4c:	003bc906 	br	4021e74 <__flash_rwdata_start+0xffff15b0>
 4022f50:	d9402d17 	ldw	r5,180(sp)
 4022f54:	14800017 	ldw	r18,0(r2)
 4022f58:	002b883a 	mov	r21,zero
 4022f5c:	29400104 	addi	r5,r5,4
 4022f60:	d9402d15 	stw	r5,180(sp)
 4022f64:	003c2206 	br	4021ff0 <__flash_rwdata_start+0xffff172c>
 4022f68:	01000034 	movhi	r4,0
 4022f6c:	21001604 	addi	r4,r4,88
 4022f70:	d9003115 	stw	r4,196(sp)
 4022f74:	003ba606 	br	4021e10 <__flash_rwdata_start+0xffff154c>
 4022f78:	b809883a 	mov	r4,r23
 4022f7c:	b00b883a 	mov	r5,r22
 4022f80:	d9801e04 	addi	r6,sp,120
 4022f84:	40289c80 	call	40289c8 <__sprint_r>
 4022f88:	103a431e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4022f8c:	dc002617 	ldw	r16,152(sp)
 4022f90:	d8c02017 	ldw	r3,128(sp)
 4022f94:	da000404 	addi	r8,sp,16
 4022f98:	003f9106 	br	4022de0 <__flash_rwdata_start+0xffff251c>
 4022f9c:	d8802e17 	ldw	r2,184(sp)
 4022fa0:	d8c02d15 	stw	r3,180(sp)
 4022fa4:	0085c83a 	sub	r2,zero,r2
 4022fa8:	d8802e15 	stw	r2,184(sp)
 4022fac:	e005883a 	mov	r2,fp
 4022fb0:	003a4206 	br	40218bc <__flash_rwdata_start+0xffff0ff8>
 4022fb4:	e0800044 	addi	r2,fp,1
 4022fb8:	9cc00814 	ori	r19,r19,32
 4022fbc:	e4000047 	ldb	r16,1(fp)
 4022fc0:	0039a606 	br	402165c <__flash_rwdata_start+0xffff0d98>
 4022fc4:	b809883a 	mov	r4,r23
 4022fc8:	b00b883a 	mov	r5,r22
 4022fcc:	d9801e04 	addi	r6,sp,120
 4022fd0:	40289c80 	call	40289c8 <__sprint_r>
 4022fd4:	103a301e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4022fd8:	d8c02017 	ldw	r3,128(sp)
 4022fdc:	da000404 	addi	r8,sp,16
 4022fe0:	003cf006 	br	40223a4 <__flash_rwdata_start+0xffff1ae0>
 4022fe4:	d8c02817 	ldw	r3,160(sp)
 4022fe8:	d9003117 	ldw	r4,196(sp)
 4022fec:	1923c83a 	sub	r17,r3,r4
 4022ff0:	003a8c06 	br	4021a24 <__flash_rwdata_start+0xffff1160>
 4022ff4:	da003f15 	stw	r8,252(sp)
 4022ff8:	402142c0 	call	402142c <strlen>
 4022ffc:	1023883a 	mov	r17,r2
 4023000:	da003f17 	ldw	r8,252(sp)
 4023004:	883c4a0e 	bge	r17,zero,4022130 <__flash_rwdata_start+0xffff186c>
 4023008:	0005883a 	mov	r2,zero
 402300c:	003c4806 	br	4022130 <__flash_rwdata_start+0xffff186c>
 4023010:	b809883a 	mov	r4,r23
 4023014:	b00b883a 	mov	r5,r22
 4023018:	d9801e04 	addi	r6,sp,120
 402301c:	40289c80 	call	40289c8 <__sprint_r>
 4023020:	103a1d1e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4023024:	d8c02017 	ldw	r3,128(sp)
 4023028:	d8801f17 	ldw	r2,124(sp)
 402302c:	da000404 	addi	r8,sp,16
 4023030:	d9403317 	ldw	r5,204(sp)
 4023034:	d9003117 	ldw	r4,196(sp)
 4023038:	10800044 	addi	r2,r2,1
 402303c:	1947883a 	add	r3,r3,r5
 4023040:	41000015 	stw	r4,0(r8)
 4023044:	41400115 	stw	r5,4(r8)
 4023048:	d8c02015 	stw	r3,128(sp)
 402304c:	d8801f15 	stw	r2,124(sp)
 4023050:	010001c4 	movi	r4,7
 4023054:	20bb0a0e 	bge	r4,r2,4021c80 <__flash_rwdata_start+0xffff13bc>
 4023058:	003d6206 	br	40225e4 <__flash_rwdata_start+0xffff1d20>
 402305c:	01000034 	movhi	r4,0
 4023060:	21002a84 	addi	r4,r4,170
 4023064:	d9003615 	stw	r4,216(sp)
 4023068:	003aa706 	br	4021b08 <__flash_rwdata_start+0xffff1244>
 402306c:	d8802604 	addi	r2,sp,152
 4023070:	d8800115 	stw	r2,4(sp)
 4023074:	d9403717 	ldw	r5,220(sp)
 4023078:	d8802504 	addi	r2,sp,148
 402307c:	d8800215 	stw	r2,8(sp)
 4023080:	d8802104 	addi	r2,sp,132
 4023084:	da400015 	stw	r9,0(sp)
 4023088:	d8800315 	stw	r2,12(sp)
 402308c:	b809883a 	mov	r4,r23
 4023090:	880d883a 	mov	r6,r17
 4023094:	01c000c4 	movi	r7,3
 4023098:	da003f15 	stw	r8,252(sp)
 402309c:	da403e15 	stw	r9,248(sp)
 40230a0:	40239780 	call	4023978 <_dtoa_r>
 40230a4:	da403e17 	ldw	r9,248(sp)
 40230a8:	da003f17 	ldw	r8,252(sp)
 40230ac:	d8803115 	stw	r2,196(sp)
 40230b0:	482b883a 	mov	r21,r9
 40230b4:	d8c03117 	ldw	r3,196(sp)
 40230b8:	00801184 	movi	r2,70
 40230bc:	1d55883a 	add	r10,r3,r21
 40230c0:	98bebb1e 	bne	r19,r2,4022bb0 <__flash_rwdata_start+0xffff22ec>
 40230c4:	19000007 	ldb	r4,0(r3)
 40230c8:	00800c04 	movi	r2,48
 40230cc:	2080df26 	beq	r4,r2,402344c <___vfprintf_internal_r+0x1f88>
 40230d0:	d8c02617 	ldw	r3,152(sp)
 40230d4:	50d5883a 	add	r10,r10,r3
 40230d8:	003eb506 	br	4022bb0 <__flash_rwdata_start+0xffff22ec>
 40230dc:	0023883a 	mov	r17,zero
 40230e0:	003d9b06 	br	4022750 <__flash_rwdata_start+0xffff1e8c>
 40230e4:	b809883a 	mov	r4,r23
 40230e8:	b00b883a 	mov	r5,r22
 40230ec:	d9801e04 	addi	r6,sp,120
 40230f0:	40289c80 	call	40289c8 <__sprint_r>
 40230f4:	1039e81e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 40230f8:	d8c02017 	ldw	r3,128(sp)
 40230fc:	da000404 	addi	r8,sp,16
 4023100:	003d9206 	br	402274c <__flash_rwdata_start+0xffff1e88>
 4023104:	b809883a 	mov	r4,r23
 4023108:	b00b883a 	mov	r5,r22
 402310c:	d9801e04 	addi	r6,sp,120
 4023110:	40289c80 	call	40289c8 <__sprint_r>
 4023114:	1039e01e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4023118:	d8802617 	ldw	r2,152(sp)
 402311c:	d8c02017 	ldw	r3,128(sp)
 4023120:	da000404 	addi	r8,sp,16
 4023124:	003dfb06 	br	4022914 <__flash_rwdata_start+0xffff2050>
 4023128:	01000034 	movhi	r4,0
 402312c:	21002684 	addi	r4,r4,154
 4023130:	d9002c15 	stw	r4,176(sp)
 4023134:	d9002c17 	ldw	r4,176(sp)
 4023138:	1c07883a 	add	r3,r3,r16
 402313c:	10800044 	addi	r2,r2,1
 4023140:	41000015 	stw	r4,0(r8)
 4023144:	44000115 	stw	r16,4(r8)
 4023148:	d8c02015 	stw	r3,128(sp)
 402314c:	d8801f15 	stw	r2,124(sp)
 4023150:	010001c4 	movi	r4,7
 4023154:	20bfae16 	blt	r4,r2,4023010 <__flash_rwdata_start+0xffff274c>
 4023158:	42000204 	addi	r8,r8,8
 402315c:	003fb406 	br	4023030 <__flash_rwdata_start+0xffff276c>
 4023160:	00800184 	movi	r2,6
 4023164:	1240012e 	bgeu	r2,r9,402316c <___vfprintf_internal_r+0x1ca8>
 4023168:	1013883a 	mov	r9,r2
 402316c:	4823883a 	mov	r17,r9
 4023170:	4805883a 	mov	r2,r9
 4023174:	4800ac16 	blt	r9,zero,4023428 <___vfprintf_internal_r+0x1f64>
 4023178:	01400034 	movhi	r5,0
 402317c:	29402404 	addi	r5,r5,144
 4023180:	d8802b15 	stw	r2,172(sp)
 4023184:	dc802d15 	stw	r18,180(sp)
 4023188:	d8003215 	stw	zero,200(sp)
 402318c:	d8003415 	stw	zero,208(sp)
 4023190:	d9403115 	stw	r5,196(sp)
 4023194:	0005883a 	mov	r2,zero
 4023198:	003a2e06 	br	4021a54 <__flash_rwdata_start+0xffff1190>
 402319c:	0021883a 	mov	r16,zero
 40231a0:	003dee06 	br	402295c <__flash_rwdata_start+0xffff2098>
 40231a4:	01400034 	movhi	r5,0
 40231a8:	29402a84 	addi	r5,r5,170
 40231ac:	d9403615 	stw	r5,216(sp)
 40231b0:	003ad806 	br	4021d14 <__flash_rwdata_start+0xffff1450>
 40231b4:	b809883a 	mov	r4,r23
 40231b8:	b00b883a 	mov	r5,r22
 40231bc:	d9801e04 	addi	r6,sp,120
 40231c0:	40289c80 	call	40289c8 <__sprint_r>
 40231c4:	1039b41e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 40231c8:	d8802617 	ldw	r2,152(sp)
 40231cc:	d9403317 	ldw	r5,204(sp)
 40231d0:	d8c02017 	ldw	r3,128(sp)
 40231d4:	da000404 	addi	r8,sp,16
 40231d8:	2885c83a 	sub	r2,r5,r2
 40231dc:	003dde06 	br	4022958 <__flash_rwdata_start+0xffff2094>
 40231e0:	01400034 	movhi	r5,0
 40231e4:	29401904 	addi	r5,r5,100
 40231e8:	d9403115 	stw	r5,196(sp)
 40231ec:	003f2e06 	br	4022ea8 <__flash_rwdata_start+0xffff25e4>
 40231f0:	00800b44 	movi	r2,45
 40231f4:	d8802785 	stb	r2,158(sp)
 40231f8:	df002b15 	stw	fp,172(sp)
 40231fc:	d8003215 	stw	zero,200(sp)
 4023200:	df002d17 	ldw	fp,180(sp)
 4023204:	00800b44 	movi	r2,45
 4023208:	dc802d15 	stw	r18,180(sp)
 402320c:	003a0e06 	br	4021a48 <__flash_rwdata_start+0xffff1184>
 4023210:	d8c02617 	ldw	r3,152(sp)
 4023214:	00bfff44 	movi	r2,-3
 4023218:	18801b16 	blt	r3,r2,4023288 <___vfprintf_internal_r+0x1dc4>
 402321c:	48c01a16 	blt	r9,r3,4023288 <___vfprintf_internal_r+0x1dc4>
 4023220:	d8c03415 	stw	r3,208(sp)
 4023224:	040019c4 	movi	r16,103
 4023228:	003e8006 	br	4022c2c <__flash_rwdata_start+0xffff2368>
 402322c:	04c00b44 	movi	r19,45
 4023230:	dcc02785 	stb	r19,158(sp)
 4023234:	003af106 	br	4021dfc <__flash_rwdata_start+0xffff1538>
 4023238:	d8c02d17 	ldw	r3,180(sp)
 402323c:	d9002f17 	ldw	r4,188(sp)
 4023240:	18800017 	ldw	r2,0(r3)
 4023244:	18c00104 	addi	r3,r3,4
 4023248:	d8c02d15 	stw	r3,180(sp)
 402324c:	11000015 	stw	r4,0(r2)
 4023250:	0038d706 	br	40215b0 <__flash_rwdata_start+0xffff0cec>
 4023254:	01000034 	movhi	r4,0
 4023258:	21002684 	addi	r4,r4,154
 402325c:	d9002c15 	stw	r4,176(sp)
 4023260:	003c8e06 	br	402249c <__flash_rwdata_start+0xffff1bd8>
 4023264:	5005883a 	mov	r2,r10
 4023268:	003e6506 	br	4022c00 <__flash_rwdata_start+0xffff233c>
 402326c:	da402b15 	stw	r9,172(sp)
 4023270:	dcc02783 	ldbu	r19,158(sp)
 4023274:	4823883a 	mov	r17,r9
 4023278:	dc802d15 	stw	r18,180(sp)
 402327c:	d8003215 	stw	zero,200(sp)
 4023280:	d8003415 	stw	zero,208(sp)
 4023284:	0039ec06 	br	4021a38 <__flash_rwdata_start+0xffff1174>
 4023288:	843fff84 	addi	r16,r16,-2
 402328c:	1d7fffc4 	addi	r21,r3,-1
 4023290:	dd402615 	stw	r21,152(sp)
 4023294:	dc0022c5 	stb	r16,139(sp)
 4023298:	a8009616 	blt	r21,zero,40234f4 <___vfprintf_internal_r+0x2030>
 402329c:	00800ac4 	movi	r2,43
 40232a0:	d8802305 	stb	r2,140(sp)
 40232a4:	00800244 	movi	r2,9
 40232a8:	1540610e 	bge	r2,r21,4023430 <___vfprintf_internal_r+0x1f6c>
 40232ac:	dcc022c4 	addi	r19,sp,139
 40232b0:	dc002c15 	stw	r16,176(sp)
 40232b4:	4023883a 	mov	r17,r8
 40232b8:	9821883a 	mov	r16,r19
 40232bc:	a809883a 	mov	r4,r21
 40232c0:	01400284 	movi	r5,10
 40232c4:	40210a00 	call	40210a0 <__modsi3>
 40232c8:	10800c04 	addi	r2,r2,48
 40232cc:	843fffc4 	addi	r16,r16,-1
 40232d0:	a809883a 	mov	r4,r21
 40232d4:	01400284 	movi	r5,10
 40232d8:	80800005 	stb	r2,0(r16)
 40232dc:	402104c0 	call	402104c <__divsi3>
 40232e0:	01000244 	movi	r4,9
 40232e4:	102b883a 	mov	r21,r2
 40232e8:	20bff416 	blt	r4,r2,40232bc <__flash_rwdata_start+0xffff29f8>
 40232ec:	8811883a 	mov	r8,r17
 40232f0:	10800c04 	addi	r2,r2,48
 40232f4:	8023883a 	mov	r17,r16
 40232f8:	897fffc4 	addi	r5,r17,-1
 40232fc:	88bfffc5 	stb	r2,-1(r17)
 4023300:	dc002c17 	ldw	r16,176(sp)
 4023304:	2cc07f2e 	bgeu	r5,r19,4023504 <___vfprintf_internal_r+0x2040>
 4023308:	d9802384 	addi	r6,sp,142
 402330c:	344dc83a 	sub	r6,r6,r17
 4023310:	d9002344 	addi	r4,sp,141
 4023314:	998d883a 	add	r6,r19,r6
 4023318:	00000106 	br	4023320 <___vfprintf_internal_r+0x1e5c>
 402331c:	28800003 	ldbu	r2,0(r5)
 4023320:	20800005 	stb	r2,0(r4)
 4023324:	21000044 	addi	r4,r4,1
 4023328:	29400044 	addi	r5,r5,1
 402332c:	21bffb1e 	bne	r4,r6,402331c <__flash_rwdata_start+0xffff2a58>
 4023330:	d8802304 	addi	r2,sp,140
 4023334:	1445c83a 	sub	r2,r2,r17
 4023338:	d9402344 	addi	r5,sp,141
 402333c:	2885883a 	add	r2,r5,r2
 4023340:	14e7c83a 	sub	r19,r2,r19
 4023344:	d8803317 	ldw	r2,204(sp)
 4023348:	d8c03317 	ldw	r3,204(sp)
 402334c:	dcc03a15 	stw	r19,232(sp)
 4023350:	14e3883a 	add	r17,r2,r19
 4023354:	00800044 	movi	r2,1
 4023358:	10c04e0e 	bge	r2,r3,4023494 <___vfprintf_internal_r+0x1fd0>
 402335c:	8c400044 	addi	r17,r17,1
 4023360:	8839883a 	mov	fp,r17
 4023364:	88004916 	blt	r17,zero,402348c <___vfprintf_internal_r+0x1fc8>
 4023368:	d8003415 	stw	zero,208(sp)
 402336c:	003e3806 	br	4022c50 <__flash_rwdata_start+0xffff238c>
 4023370:	483de91e 	bne	r9,zero,4022b18 <__flash_rwdata_start+0xffff2254>
 4023374:	8813883a 	mov	r9,r17
 4023378:	003de706 	br	4022b18 <__flash_rwdata_start+0xffff2254>
 402337c:	b809883a 	mov	r4,r23
 4023380:	b00b883a 	mov	r5,r22
 4023384:	d9801e04 	addi	r6,sp,120
 4023388:	40289c80 	call	40289c8 <__sprint_r>
 402338c:	1039421e 	bne	r2,zero,4021898 <__flash_rwdata_start+0xffff0fd4>
 4023390:	dc002617 	ldw	r16,152(sp)
 4023394:	d8c02017 	ldw	r3,128(sp)
 4023398:	d8801f17 	ldw	r2,124(sp)
 402339c:	da000404 	addi	r8,sp,16
 40233a0:	003ea006 	br	4022e24 <__flash_rwdata_start+0xffff2560>
 40233a4:	02400184 	movi	r9,6
 40233a8:	003ddb06 	br	4022b18 <__flash_rwdata_start+0xffff2254>
 40233ac:	00c00b44 	movi	r3,45
 40233b0:	2460003c 	xorhi	r17,r4,32768
 40233b4:	d8c02b05 	stb	r3,172(sp)
 40233b8:	003ddd06 	br	4022b30 <__flash_rwdata_start+0xffff226c>
 40233bc:	d8c03417 	ldw	r3,208(sp)
 40233c0:	00c03d0e 	bge	zero,r3,40234b8 <___vfprintf_internal_r+0x1ff4>
 40233c4:	04400044 	movi	r17,1
 40233c8:	d9003317 	ldw	r4,204(sp)
 40233cc:	8923883a 	add	r17,r17,r4
 40233d0:	8839883a 	mov	fp,r17
 40233d4:	883e1e0e 	bge	r17,zero,4022c50 <__flash_rwdata_start+0xffff238c>
 40233d8:	0039883a 	mov	fp,zero
 40233dc:	003e1c06 	br	4022c50 <__flash_rwdata_start+0xffff238c>
 40233e0:	4d400044 	addi	r21,r9,1
 40233e4:	003dd906 	br	4022b4c <__flash_rwdata_start+0xffff2288>
 40233e8:	1839883a 	mov	fp,r3
 40233ec:	18004716 	blt	r3,zero,402350c <___vfprintf_internal_r+0x2048>
 40233f0:	dc403417 	ldw	r17,208(sp)
 40233f4:	003e1606 	br	4022c50 <__flash_rwdata_start+0xffff238c>
 40233f8:	00c0290e 	bge	zero,r3,40234a0 <___vfprintf_internal_r+0x1fdc>
 40233fc:	4800021e 	bne	r9,zero,4023408 <___vfprintf_internal_r+0x1f44>
 4023400:	e080004c 	andi	r2,fp,1
 4023404:	103ff826 	beq	r2,zero,40233e8 <__flash_rwdata_start+0xffff2b24>
 4023408:	d8c03417 	ldw	r3,208(sp)
 402340c:	4a400044 	addi	r9,r9,1
 4023410:	1a63883a 	add	r17,r3,r9
 4023414:	8839883a 	mov	fp,r17
 4023418:	883e0d0e 	bge	r17,zero,4022c50 <__flash_rwdata_start+0xffff238c>
 402341c:	003fee06 	br	40233d8 <__flash_rwdata_start+0xffff2b14>
 4023420:	d8802117 	ldw	r2,132(sp)
 4023424:	003df606 	br	4022c00 <__flash_rwdata_start+0xffff233c>
 4023428:	0005883a 	mov	r2,zero
 402342c:	003f5206 	br	4023178 <__flash_rwdata_start+0xffff28b4>
 4023430:	00800c04 	movi	r2,48
 4023434:	a8c00c04 	addi	r3,r21,48
 4023438:	d8802345 	stb	r2,141(sp)
 402343c:	d8c02385 	stb	r3,142(sp)
 4023440:	d88023c4 	addi	r2,sp,143
 4023444:	dcc022c4 	addi	r19,sp,139
 4023448:	003fbd06 	br	4023340 <__flash_rwdata_start+0xffff2a7c>
 402344c:	d9003717 	ldw	r4,220(sp)
 4023450:	880b883a 	mov	r5,r17
 4023454:	000d883a 	mov	r6,zero
 4023458:	000f883a 	mov	r7,zero
 402345c:	da003f15 	stw	r8,252(sp)
 4023460:	da403e15 	stw	r9,248(sp)
 4023464:	da803d15 	stw	r10,244(sp)
 4023468:	402c6400 	call	402c640 <__eqdf2>
 402346c:	da003f17 	ldw	r8,252(sp)
 4023470:	da403e17 	ldw	r9,248(sp)
 4023474:	da803d17 	ldw	r10,244(sp)
 4023478:	103f1526 	beq	r2,zero,40230d0 <__flash_rwdata_start+0xffff280c>
 402347c:	00800044 	movi	r2,1
 4023480:	1547c83a 	sub	r3,r2,r21
 4023484:	d8c02615 	stw	r3,152(sp)
 4023488:	003f1206 	br	40230d4 <__flash_rwdata_start+0xffff2810>
 402348c:	0039883a 	mov	fp,zero
 4023490:	003fb506 	br	4023368 <__flash_rwdata_start+0xffff2aa4>
 4023494:	e084703a 	and	r2,fp,r2
 4023498:	103fb126 	beq	r2,zero,4023360 <__flash_rwdata_start+0xffff2a9c>
 402349c:	003faf06 	br	402335c <__flash_rwdata_start+0xffff2a98>
 40234a0:	4800081e 	bne	r9,zero,40234c4 <___vfprintf_internal_r+0x2000>
 40234a4:	e080004c 	andi	r2,fp,1
 40234a8:	1000061e 	bne	r2,zero,40234c4 <___vfprintf_internal_r+0x2000>
 40234ac:	07000044 	movi	fp,1
 40234b0:	e023883a 	mov	r17,fp
 40234b4:	003de606 	br	4022c50 <__flash_rwdata_start+0xffff238c>
 40234b8:	04400084 	movi	r17,2
 40234bc:	88e3c83a 	sub	r17,r17,r3
 40234c0:	003fc106 	br	40233c8 <__flash_rwdata_start+0xffff2b04>
 40234c4:	4c400084 	addi	r17,r9,2
 40234c8:	8839883a 	mov	fp,r17
 40234cc:	883de00e 	bge	r17,zero,4022c50 <__flash_rwdata_start+0xffff238c>
 40234d0:	003fc106 	br	40233d8 <__flash_rwdata_start+0xffff2b14>
 40234d4:	d9402d17 	ldw	r5,180(sp)
 40234d8:	2a400017 	ldw	r9,0(r5)
 40234dc:	28c00104 	addi	r3,r5,4
 40234e0:	d8c02d15 	stw	r3,180(sp)
 40234e4:	483eb50e 	bge	r9,zero,4022fbc <__flash_rwdata_start+0xffff26f8>
 40234e8:	027fffc4 	movi	r9,-1
 40234ec:	e4000047 	ldb	r16,1(fp)
 40234f0:	00385a06 	br	402165c <__flash_rwdata_start+0xffff0d98>
 40234f4:	00800b44 	movi	r2,45
 40234f8:	056bc83a 	sub	r21,zero,r21
 40234fc:	d8802305 	stb	r2,140(sp)
 4023500:	003f6806 	br	40232a4 <__flash_rwdata_start+0xffff29e0>
 4023504:	d8802344 	addi	r2,sp,141
 4023508:	003f8d06 	br	4023340 <__flash_rwdata_start+0xffff2a7c>
 402350c:	0039883a 	mov	fp,zero
 4023510:	003fb706 	br	40233f0 <__flash_rwdata_start+0xffff2b2c>
 4023514:	d8c02617 	ldw	r3,152(sp)
 4023518:	003f5c06 	br	402328c <__flash_rwdata_start+0xffff29c8>

0402351c <__vfprintf_internal>:
 402351c:	2007883a 	mov	r3,r4
 4023520:	01000034 	movhi	r4,0
 4023524:	21078604 	addi	r4,r4,7704
 4023528:	21000017 	ldw	r4,0(r4)
 402352c:	2805883a 	mov	r2,r5
 4023530:	300f883a 	mov	r7,r6
 4023534:	180b883a 	mov	r5,r3
 4023538:	100d883a 	mov	r6,r2
 402353c:	40214c41 	jmpi	40214c4 <___vfprintf_internal_r>

04023540 <__sbprintf>:
 4023540:	2880030b 	ldhu	r2,12(r5)
 4023544:	2ac01917 	ldw	r11,100(r5)
 4023548:	2a80038b 	ldhu	r10,14(r5)
 402354c:	2a400717 	ldw	r9,28(r5)
 4023550:	2a000917 	ldw	r8,36(r5)
 4023554:	defee204 	addi	sp,sp,-1144
 4023558:	00c10004 	movi	r3,1024
 402355c:	dc011a15 	stw	r16,1128(sp)
 4023560:	10bfff4c 	andi	r2,r2,65533
 4023564:	2821883a 	mov	r16,r5
 4023568:	d8cb883a 	add	r5,sp,r3
 402356c:	dc811c15 	stw	r18,1136(sp)
 4023570:	dc411b15 	stw	r17,1132(sp)
 4023574:	dfc11d15 	stw	ra,1140(sp)
 4023578:	2025883a 	mov	r18,r4
 402357c:	d881030d 	sth	r2,1036(sp)
 4023580:	dac11915 	stw	r11,1124(sp)
 4023584:	da81038d 	sth	r10,1038(sp)
 4023588:	da410715 	stw	r9,1052(sp)
 402358c:	da010915 	stw	r8,1060(sp)
 4023590:	dec10015 	stw	sp,1024(sp)
 4023594:	dec10415 	stw	sp,1040(sp)
 4023598:	d8c10215 	stw	r3,1032(sp)
 402359c:	d8c10515 	stw	r3,1044(sp)
 40235a0:	d8010615 	stw	zero,1048(sp)
 40235a4:	40214c40 	call	40214c4 <___vfprintf_internal_r>
 40235a8:	1023883a 	mov	r17,r2
 40235ac:	10000416 	blt	r2,zero,40235c0 <__sbprintf+0x80>
 40235b0:	9009883a 	mov	r4,r18
 40235b4:	d9410004 	addi	r5,sp,1024
 40235b8:	40252a80 	call	40252a8 <_fflush_r>
 40235bc:	10000d1e 	bne	r2,zero,40235f4 <__sbprintf+0xb4>
 40235c0:	d8c1030b 	ldhu	r3,1036(sp)
 40235c4:	18c0100c 	andi	r3,r3,64
 40235c8:	18000326 	beq	r3,zero,40235d8 <__sbprintf+0x98>
 40235cc:	8080030b 	ldhu	r2,12(r16)
 40235d0:	10801014 	ori	r2,r2,64
 40235d4:	8080030d 	sth	r2,12(r16)
 40235d8:	8805883a 	mov	r2,r17
 40235dc:	dfc11d17 	ldw	ra,1140(sp)
 40235e0:	dc811c17 	ldw	r18,1136(sp)
 40235e4:	dc411b17 	ldw	r17,1132(sp)
 40235e8:	dc011a17 	ldw	r16,1128(sp)
 40235ec:	dec11e04 	addi	sp,sp,1144
 40235f0:	f800283a 	ret
 40235f4:	047fffc4 	movi	r17,-1
 40235f8:	003ff106 	br	40235c0 <__flash_rwdata_start+0xffff2cfc>

040235fc <__swsetup_r>:
 40235fc:	00800034 	movhi	r2,0
 4023600:	defffd04 	addi	sp,sp,-12
 4023604:	10878604 	addi	r2,r2,7704
 4023608:	dc400115 	stw	r17,4(sp)
 402360c:	2023883a 	mov	r17,r4
 4023610:	11000017 	ldw	r4,0(r2)
 4023614:	dc000015 	stw	r16,0(sp)
 4023618:	dfc00215 	stw	ra,8(sp)
 402361c:	2821883a 	mov	r16,r5
 4023620:	20000226 	beq	r4,zero,402362c <__swsetup_r+0x30>
 4023624:	20c00e17 	ldw	r3,56(r4)
 4023628:	18003126 	beq	r3,zero,40236f0 <__swsetup_r+0xf4>
 402362c:	8080030b 	ldhu	r2,12(r16)
 4023630:	10c0020c 	andi	r3,r2,8
 4023634:	100d883a 	mov	r6,r2
 4023638:	18000f26 	beq	r3,zero,4023678 <__swsetup_r+0x7c>
 402363c:	80c00417 	ldw	r3,16(r16)
 4023640:	18001526 	beq	r3,zero,4023698 <__swsetup_r+0x9c>
 4023644:	1100004c 	andi	r4,r2,1
 4023648:	20001c1e 	bne	r4,zero,40236bc <__swsetup_r+0xc0>
 402364c:	1080008c 	andi	r2,r2,2
 4023650:	1000291e 	bne	r2,zero,40236f8 <__swsetup_r+0xfc>
 4023654:	80800517 	ldw	r2,20(r16)
 4023658:	80800215 	stw	r2,8(r16)
 402365c:	18001c26 	beq	r3,zero,40236d0 <__swsetup_r+0xd4>
 4023660:	0005883a 	mov	r2,zero
 4023664:	dfc00217 	ldw	ra,8(sp)
 4023668:	dc400117 	ldw	r17,4(sp)
 402366c:	dc000017 	ldw	r16,0(sp)
 4023670:	dec00304 	addi	sp,sp,12
 4023674:	f800283a 	ret
 4023678:	3080040c 	andi	r2,r6,16
 402367c:	10002e26 	beq	r2,zero,4023738 <__swsetup_r+0x13c>
 4023680:	3080010c 	andi	r2,r6,4
 4023684:	10001e1e 	bne	r2,zero,4023700 <__swsetup_r+0x104>
 4023688:	80c00417 	ldw	r3,16(r16)
 402368c:	30800214 	ori	r2,r6,8
 4023690:	8080030d 	sth	r2,12(r16)
 4023694:	183feb1e 	bne	r3,zero,4023644 <__flash_rwdata_start+0xffff2d80>
 4023698:	1140a00c 	andi	r5,r2,640
 402369c:	01008004 	movi	r4,512
 40236a0:	293fe826 	beq	r5,r4,4023644 <__flash_rwdata_start+0xffff2d80>
 40236a4:	8809883a 	mov	r4,r17
 40236a8:	800b883a 	mov	r5,r16
 40236ac:	402622c0 	call	402622c <__smakebuf_r>
 40236b0:	8080030b 	ldhu	r2,12(r16)
 40236b4:	80c00417 	ldw	r3,16(r16)
 40236b8:	003fe206 	br	4023644 <__flash_rwdata_start+0xffff2d80>
 40236bc:	80800517 	ldw	r2,20(r16)
 40236c0:	80000215 	stw	zero,8(r16)
 40236c4:	0085c83a 	sub	r2,zero,r2
 40236c8:	80800615 	stw	r2,24(r16)
 40236cc:	183fe41e 	bne	r3,zero,4023660 <__flash_rwdata_start+0xffff2d9c>
 40236d0:	80c0030b 	ldhu	r3,12(r16)
 40236d4:	0005883a 	mov	r2,zero
 40236d8:	1900200c 	andi	r4,r3,128
 40236dc:	203fe126 	beq	r4,zero,4023664 <__flash_rwdata_start+0xffff2da0>
 40236e0:	18c01014 	ori	r3,r3,64
 40236e4:	80c0030d 	sth	r3,12(r16)
 40236e8:	00bfffc4 	movi	r2,-1
 40236ec:	003fdd06 	br	4023664 <__flash_rwdata_start+0xffff2da0>
 40236f0:	40256940 	call	4025694 <__sinit>
 40236f4:	003fcd06 	br	402362c <__flash_rwdata_start+0xffff2d68>
 40236f8:	0005883a 	mov	r2,zero
 40236fc:	003fd606 	br	4023658 <__flash_rwdata_start+0xffff2d94>
 4023700:	81400c17 	ldw	r5,48(r16)
 4023704:	28000626 	beq	r5,zero,4023720 <__swsetup_r+0x124>
 4023708:	80801004 	addi	r2,r16,64
 402370c:	28800326 	beq	r5,r2,402371c <__swsetup_r+0x120>
 4023710:	8809883a 	mov	r4,r17
 4023714:	40258080 	call	4025808 <_free_r>
 4023718:	8180030b 	ldhu	r6,12(r16)
 402371c:	80000c15 	stw	zero,48(r16)
 4023720:	80c00417 	ldw	r3,16(r16)
 4023724:	00bff6c4 	movi	r2,-37
 4023728:	118c703a 	and	r6,r2,r6
 402372c:	80000115 	stw	zero,4(r16)
 4023730:	80c00015 	stw	r3,0(r16)
 4023734:	003fd506 	br	402368c <__flash_rwdata_start+0xffff2dc8>
 4023738:	00800244 	movi	r2,9
 402373c:	88800015 	stw	r2,0(r17)
 4023740:	30801014 	ori	r2,r6,64
 4023744:	8080030d 	sth	r2,12(r16)
 4023748:	00bfffc4 	movi	r2,-1
 402374c:	003fc506 	br	4023664 <__flash_rwdata_start+0xffff2da0>

04023750 <quorem>:
 4023750:	defff204 	addi	sp,sp,-56
 4023754:	ddc00b15 	stw	r23,44(sp)
 4023758:	20800417 	ldw	r2,16(r4)
 402375c:	2dc00417 	ldw	r23,16(r5)
 4023760:	dfc00d15 	stw	ra,52(sp)
 4023764:	df000c15 	stw	fp,48(sp)
 4023768:	dd800a15 	stw	r22,40(sp)
 402376c:	dd400915 	stw	r21,36(sp)
 4023770:	dd000815 	stw	r20,32(sp)
 4023774:	dcc00715 	stw	r19,28(sp)
 4023778:	dc800615 	stw	r18,24(sp)
 402377c:	dc400515 	stw	r17,20(sp)
 4023780:	dc000415 	stw	r16,16(sp)
 4023784:	15c07a16 	blt	r2,r23,4023970 <quorem+0x220>
 4023788:	bdffffc4 	addi	r23,r23,-1
 402378c:	bde9883a 	add	r20,r23,r23
 4023790:	28c00504 	addi	r3,r5,20
 4023794:	a529883a 	add	r20,r20,r20
 4023798:	1d39883a 	add	fp,r3,r20
 402379c:	24c00504 	addi	r19,r4,20
 40237a0:	d9400215 	stw	r5,8(sp)
 40237a4:	9d29883a 	add	r20,r19,r20
 40237a8:	e1400017 	ldw	r5,0(fp)
 40237ac:	d9000015 	stw	r4,0(sp)
 40237b0:	a1000017 	ldw	r4,0(r20)
 40237b4:	29400044 	addi	r5,r5,1
 40237b8:	d8c00115 	stw	r3,4(sp)
 40237bc:	dd000315 	stw	r20,12(sp)
 40237c0:	40210fc0 	call	40210fc <__udivsi3>
 40237c4:	1025883a 	mov	r18,r2
 40237c8:	10003026 	beq	r2,zero,402388c <quorem+0x13c>
 40237cc:	dc400117 	ldw	r17,4(sp)
 40237d0:	9829883a 	mov	r20,r19
 40237d4:	002d883a 	mov	r22,zero
 40237d8:	0021883a 	mov	r16,zero
 40237dc:	8d400017 	ldw	r21,0(r17)
 40237e0:	900b883a 	mov	r5,r18
 40237e4:	8c400104 	addi	r17,r17,4
 40237e8:	a93fffcc 	andi	r4,r21,65535
 40237ec:	402110c0 	call	402110c <__mulsi3>
 40237f0:	a808d43a 	srli	r4,r21,16
 40237f4:	900b883a 	mov	r5,r18
 40237f8:	b0ad883a 	add	r22,r22,r2
 40237fc:	402110c0 	call	402110c <__mulsi3>
 4023800:	a1000017 	ldw	r4,0(r20)
 4023804:	b00cd43a 	srli	r6,r22,16
 4023808:	b0ffffcc 	andi	r3,r22,65535
 402380c:	217fffcc 	andi	r5,r4,65535
 4023810:	2c21883a 	add	r16,r5,r16
 4023814:	80c7c83a 	sub	r3,r16,r3
 4023818:	2008d43a 	srli	r4,r4,16
 402381c:	3085883a 	add	r2,r6,r2
 4023820:	1821d43a 	srai	r16,r3,16
 4023824:	117fffcc 	andi	r5,r2,65535
 4023828:	2149c83a 	sub	r4,r4,r5
 402382c:	2421883a 	add	r16,r4,r16
 4023830:	8008943a 	slli	r4,r16,16
 4023834:	18ffffcc 	andi	r3,r3,65535
 4023838:	102cd43a 	srli	r22,r2,16
 402383c:	20c8b03a 	or	r4,r4,r3
 4023840:	a1000015 	stw	r4,0(r20)
 4023844:	8021d43a 	srai	r16,r16,16
 4023848:	a5000104 	addi	r20,r20,4
 402384c:	e47fe32e 	bgeu	fp,r17,40237dc <__flash_rwdata_start+0xffff2f18>
 4023850:	d8c00317 	ldw	r3,12(sp)
 4023854:	18800017 	ldw	r2,0(r3)
 4023858:	10000c1e 	bne	r2,zero,402388c <quorem+0x13c>
 402385c:	18bfff04 	addi	r2,r3,-4
 4023860:	9880082e 	bgeu	r19,r2,4023884 <quorem+0x134>
 4023864:	18ffff17 	ldw	r3,-4(r3)
 4023868:	18000326 	beq	r3,zero,4023878 <quorem+0x128>
 402386c:	00000506 	br	4023884 <quorem+0x134>
 4023870:	10c00017 	ldw	r3,0(r2)
 4023874:	1800031e 	bne	r3,zero,4023884 <quorem+0x134>
 4023878:	10bfff04 	addi	r2,r2,-4
 402387c:	bdffffc4 	addi	r23,r23,-1
 4023880:	98bffb36 	bltu	r19,r2,4023870 <__flash_rwdata_start+0xffff2fac>
 4023884:	d8c00017 	ldw	r3,0(sp)
 4023888:	1dc00415 	stw	r23,16(r3)
 402388c:	d9000017 	ldw	r4,0(sp)
 4023890:	d9400217 	ldw	r5,8(sp)
 4023894:	40278840 	call	4027884 <__mcmp>
 4023898:	10002816 	blt	r2,zero,402393c <quorem+0x1ec>
 402389c:	dc400117 	ldw	r17,4(sp)
 40238a0:	94800044 	addi	r18,r18,1
 40238a4:	980d883a 	mov	r6,r19
 40238a8:	0007883a 	mov	r3,zero
 40238ac:	31000017 	ldw	r4,0(r6)
 40238b0:	89400017 	ldw	r5,0(r17)
 40238b4:	31800104 	addi	r6,r6,4
 40238b8:	20bfffcc 	andi	r2,r4,65535
 40238bc:	10c7883a 	add	r3,r2,r3
 40238c0:	28bfffcc 	andi	r2,r5,65535
 40238c4:	1885c83a 	sub	r2,r3,r2
 40238c8:	280ad43a 	srli	r5,r5,16
 40238cc:	2008d43a 	srli	r4,r4,16
 40238d0:	1007d43a 	srai	r3,r2,16
 40238d4:	10bfffcc 	andi	r2,r2,65535
 40238d8:	2149c83a 	sub	r4,r4,r5
 40238dc:	20c9883a 	add	r4,r4,r3
 40238e0:	200a943a 	slli	r5,r4,16
 40238e4:	8c400104 	addi	r17,r17,4
 40238e8:	2007d43a 	srai	r3,r4,16
 40238ec:	2884b03a 	or	r2,r5,r2
 40238f0:	30bfff15 	stw	r2,-4(r6)
 40238f4:	e47fed2e 	bgeu	fp,r17,40238ac <__flash_rwdata_start+0xffff2fe8>
 40238f8:	bdc5883a 	add	r2,r23,r23
 40238fc:	1085883a 	add	r2,r2,r2
 4023900:	9887883a 	add	r3,r19,r2
 4023904:	18800017 	ldw	r2,0(r3)
 4023908:	10000c1e 	bne	r2,zero,402393c <quorem+0x1ec>
 402390c:	18bfff04 	addi	r2,r3,-4
 4023910:	9880082e 	bgeu	r19,r2,4023934 <quorem+0x1e4>
 4023914:	18ffff17 	ldw	r3,-4(r3)
 4023918:	18000326 	beq	r3,zero,4023928 <quorem+0x1d8>
 402391c:	00000506 	br	4023934 <quorem+0x1e4>
 4023920:	10c00017 	ldw	r3,0(r2)
 4023924:	1800031e 	bne	r3,zero,4023934 <quorem+0x1e4>
 4023928:	10bfff04 	addi	r2,r2,-4
 402392c:	bdffffc4 	addi	r23,r23,-1
 4023930:	98bffb36 	bltu	r19,r2,4023920 <__flash_rwdata_start+0xffff305c>
 4023934:	d8c00017 	ldw	r3,0(sp)
 4023938:	1dc00415 	stw	r23,16(r3)
 402393c:	9005883a 	mov	r2,r18
 4023940:	dfc00d17 	ldw	ra,52(sp)
 4023944:	df000c17 	ldw	fp,48(sp)
 4023948:	ddc00b17 	ldw	r23,44(sp)
 402394c:	dd800a17 	ldw	r22,40(sp)
 4023950:	dd400917 	ldw	r21,36(sp)
 4023954:	dd000817 	ldw	r20,32(sp)
 4023958:	dcc00717 	ldw	r19,28(sp)
 402395c:	dc800617 	ldw	r18,24(sp)
 4023960:	dc400517 	ldw	r17,20(sp)
 4023964:	dc000417 	ldw	r16,16(sp)
 4023968:	dec00e04 	addi	sp,sp,56
 402396c:	f800283a 	ret
 4023970:	0005883a 	mov	r2,zero
 4023974:	003ff206 	br	4023940 <__flash_rwdata_start+0xffff307c>

04023978 <_dtoa_r>:
 4023978:	20801017 	ldw	r2,64(r4)
 402397c:	deffde04 	addi	sp,sp,-136
 4023980:	dd401d15 	stw	r21,116(sp)
 4023984:	dcc01b15 	stw	r19,108(sp)
 4023988:	dc801a15 	stw	r18,104(sp)
 402398c:	dc401915 	stw	r17,100(sp)
 4023990:	dc001815 	stw	r16,96(sp)
 4023994:	dfc02115 	stw	ra,132(sp)
 4023998:	df002015 	stw	fp,128(sp)
 402399c:	ddc01f15 	stw	r23,124(sp)
 40239a0:	dd801e15 	stw	r22,120(sp)
 40239a4:	dd001c15 	stw	r20,112(sp)
 40239a8:	d9c00315 	stw	r7,12(sp)
 40239ac:	2021883a 	mov	r16,r4
 40239b0:	302b883a 	mov	r21,r6
 40239b4:	2825883a 	mov	r18,r5
 40239b8:	dc402417 	ldw	r17,144(sp)
 40239bc:	3027883a 	mov	r19,r6
 40239c0:	10000826 	beq	r2,zero,40239e4 <_dtoa_r+0x6c>
 40239c4:	21801117 	ldw	r6,68(r4)
 40239c8:	00c00044 	movi	r3,1
 40239cc:	100b883a 	mov	r5,r2
 40239d0:	1986983a 	sll	r3,r3,r6
 40239d4:	11800115 	stw	r6,4(r2)
 40239d8:	10c00215 	stw	r3,8(r2)
 40239dc:	4026f9c0 	call	4026f9c <_Bfree>
 40239e0:	80001015 	stw	zero,64(r16)
 40239e4:	a8002d16 	blt	r21,zero,4023a9c <_dtoa_r+0x124>
 40239e8:	88000015 	stw	zero,0(r17)
 40239ec:	a8dffc2c 	andhi	r3,r21,32752
 40239f0:	009ffc34 	movhi	r2,32752
 40239f4:	18801b26 	beq	r3,r2,4023a64 <_dtoa_r+0xec>
 40239f8:	9009883a 	mov	r4,r18
 40239fc:	980b883a 	mov	r5,r19
 4023a00:	000d883a 	mov	r6,zero
 4023a04:	000f883a 	mov	r7,zero
 4023a08:	402c6400 	call	402c640 <__eqdf2>
 4023a0c:	10002a1e 	bne	r2,zero,4023ab8 <_dtoa_r+0x140>
 4023a10:	d8c02317 	ldw	r3,140(sp)
 4023a14:	d9002517 	ldw	r4,148(sp)
 4023a18:	00800044 	movi	r2,1
 4023a1c:	18800015 	stw	r2,0(r3)
 4023a20:	2001a226 	beq	r4,zero,40240ac <_dtoa_r+0x734>
 4023a24:	00800034 	movhi	r2,0
 4023a28:	10802644 	addi	r2,r2,153
 4023a2c:	20800015 	stw	r2,0(r4)
 4023a30:	10bfffc4 	addi	r2,r2,-1
 4023a34:	dfc02117 	ldw	ra,132(sp)
 4023a38:	df002017 	ldw	fp,128(sp)
 4023a3c:	ddc01f17 	ldw	r23,124(sp)
 4023a40:	dd801e17 	ldw	r22,120(sp)
 4023a44:	dd401d17 	ldw	r21,116(sp)
 4023a48:	dd001c17 	ldw	r20,112(sp)
 4023a4c:	dcc01b17 	ldw	r19,108(sp)
 4023a50:	dc801a17 	ldw	r18,104(sp)
 4023a54:	dc401917 	ldw	r17,100(sp)
 4023a58:	dc001817 	ldw	r16,96(sp)
 4023a5c:	dec02204 	addi	sp,sp,136
 4023a60:	f800283a 	ret
 4023a64:	d8c02317 	ldw	r3,140(sp)
 4023a68:	0089c3c4 	movi	r2,9999
 4023a6c:	18800015 	stw	r2,0(r3)
 4023a70:	90017c26 	beq	r18,zero,4024064 <_dtoa_r+0x6ec>
 4023a74:	00800034 	movhi	r2,0
 4023a78:	10803204 	addi	r2,r2,200
 4023a7c:	d9002517 	ldw	r4,148(sp)
 4023a80:	203fec26 	beq	r4,zero,4023a34 <__flash_rwdata_start+0xffff3170>
 4023a84:	10c000c7 	ldb	r3,3(r2)
 4023a88:	18017d1e 	bne	r3,zero,4024080 <_dtoa_r+0x708>
 4023a8c:	10c000c4 	addi	r3,r2,3
 4023a90:	d9802517 	ldw	r6,148(sp)
 4023a94:	30c00015 	stw	r3,0(r6)
 4023a98:	003fe606 	br	4023a34 <__flash_rwdata_start+0xffff3170>
 4023a9c:	04e00034 	movhi	r19,32768
 4023aa0:	9cffffc4 	addi	r19,r19,-1
 4023aa4:	00800044 	movi	r2,1
 4023aa8:	ace6703a 	and	r19,r21,r19
 4023aac:	88800015 	stw	r2,0(r17)
 4023ab0:	982b883a 	mov	r21,r19
 4023ab4:	003fcd06 	br	40239ec <__flash_rwdata_start+0xffff3128>
 4023ab8:	d8800204 	addi	r2,sp,8
 4023abc:	a822d53a 	srli	r17,r21,20
 4023ac0:	d8800015 	stw	r2,0(sp)
 4023ac4:	8009883a 	mov	r4,r16
 4023ac8:	900b883a 	mov	r5,r18
 4023acc:	980d883a 	mov	r6,r19
 4023ad0:	d9c00104 	addi	r7,sp,4
 4023ad4:	4027bf80 	call	4027bf8 <__d2b>
 4023ad8:	1039883a 	mov	fp,r2
 4023adc:	88016a1e 	bne	r17,zero,4024088 <_dtoa_r+0x710>
 4023ae0:	dd000217 	ldw	r20,8(sp)
 4023ae4:	dc400117 	ldw	r17,4(sp)
 4023ae8:	00befbc4 	movi	r2,-1041
 4023aec:	a463883a 	add	r17,r20,r17
 4023af0:	8882ea16 	blt	r17,r2,402469c <_dtoa_r+0xd24>
 4023af4:	00bf0384 	movi	r2,-1010
 4023af8:	1445c83a 	sub	r2,r2,r17
 4023afc:	89010484 	addi	r4,r17,1042
 4023b00:	a8aa983a 	sll	r21,r21,r2
 4023b04:	9108d83a 	srl	r4,r18,r4
 4023b08:	a908b03a 	or	r4,r21,r4
 4023b0c:	402db180 	call	402db18 <__floatunsidf>
 4023b10:	017f8434 	movhi	r5,65040
 4023b14:	01800044 	movi	r6,1
 4023b18:	1009883a 	mov	r4,r2
 4023b1c:	194b883a 	add	r5,r3,r5
 4023b20:	8c7fffc4 	addi	r17,r17,-1
 4023b24:	d9800f15 	stw	r6,60(sp)
 4023b28:	000d883a 	mov	r6,zero
 4023b2c:	01cffe34 	movhi	r7,16376
 4023b30:	402d0f00 	call	402d0f0 <__subdf3>
 4023b34:	0198dbf4 	movhi	r6,25455
 4023b38:	01cff4f4 	movhi	r7,16339
 4023b3c:	1009883a 	mov	r4,r2
 4023b40:	180b883a 	mov	r5,r3
 4023b44:	3190d844 	addi	r6,r6,17249
 4023b48:	39e1e9c4 	addi	r7,r7,-30809
 4023b4c:	402c8840 	call	402c884 <__muldf3>
 4023b50:	01a2d874 	movhi	r6,35681
 4023b54:	01cff1f4 	movhi	r7,16327
 4023b58:	180b883a 	mov	r5,r3
 4023b5c:	31b22cc4 	addi	r6,r6,-14157
 4023b60:	39e28a04 	addi	r7,r7,-30168
 4023b64:	1009883a 	mov	r4,r2
 4023b68:	402b4240 	call	402b424 <__adddf3>
 4023b6c:	8809883a 	mov	r4,r17
 4023b70:	102d883a 	mov	r22,r2
 4023b74:	182b883a 	mov	r21,r3
 4023b78:	402da480 	call	402da48 <__floatsidf>
 4023b7c:	019427f4 	movhi	r6,20639
 4023b80:	01cff4f4 	movhi	r7,16339
 4023b84:	1009883a 	mov	r4,r2
 4023b88:	180b883a 	mov	r5,r3
 4023b8c:	319e7ec4 	addi	r6,r6,31227
 4023b90:	39d104c4 	addi	r7,r7,17427
 4023b94:	402c8840 	call	402c884 <__muldf3>
 4023b98:	b009883a 	mov	r4,r22
 4023b9c:	a80b883a 	mov	r5,r21
 4023ba0:	100d883a 	mov	r6,r2
 4023ba4:	180f883a 	mov	r7,r3
 4023ba8:	402b4240 	call	402b424 <__adddf3>
 4023bac:	1009883a 	mov	r4,r2
 4023bb0:	180b883a 	mov	r5,r3
 4023bb4:	102d883a 	mov	r22,r2
 4023bb8:	182b883a 	mov	r21,r3
 4023bbc:	402d9c00 	call	402d9c0 <__fixdfsi>
 4023bc0:	b009883a 	mov	r4,r22
 4023bc4:	a80b883a 	mov	r5,r21
 4023bc8:	000d883a 	mov	r6,zero
 4023bcc:	000f883a 	mov	r7,zero
 4023bd0:	d8800515 	stw	r2,20(sp)
 4023bd4:	402c7a40 	call	402c7a4 <__ledf2>
 4023bd8:	10023116 	blt	r2,zero,40244a0 <_dtoa_r+0xb28>
 4023bdc:	d8c00517 	ldw	r3,20(sp)
 4023be0:	00800584 	movi	r2,22
 4023be4:	10c21f36 	bltu	r2,r3,4024464 <_dtoa_r+0xaec>
 4023be8:	180490fa 	slli	r2,r3,3
 4023bec:	00c00034 	movhi	r3,0
 4023bf0:	18c04e04 	addi	r3,r3,312
 4023bf4:	1885883a 	add	r2,r3,r2
 4023bf8:	11000017 	ldw	r4,0(r2)
 4023bfc:	11400117 	ldw	r5,4(r2)
 4023c00:	900d883a 	mov	r6,r18
 4023c04:	980f883a 	mov	r7,r19
 4023c08:	402c6c40 	call	402c6c4 <__gedf2>
 4023c0c:	0082a70e 	bge	zero,r2,40246ac <_dtoa_r+0xd34>
 4023c10:	d9000517 	ldw	r4,20(sp)
 4023c14:	d8000d15 	stw	zero,52(sp)
 4023c18:	213fffc4 	addi	r4,r4,-1
 4023c1c:	d9000515 	stw	r4,20(sp)
 4023c20:	a463c83a 	sub	r17,r20,r17
 4023c24:	8dbfffc4 	addi	r22,r17,-1
 4023c28:	b0021916 	blt	r22,zero,4024490 <_dtoa_r+0xb18>
 4023c2c:	d8000815 	stw	zero,32(sp)
 4023c30:	d8800517 	ldw	r2,20(sp)
 4023c34:	10020e16 	blt	r2,zero,4024470 <_dtoa_r+0xaf8>
 4023c38:	b0ad883a 	add	r22,r22,r2
 4023c3c:	d8800a15 	stw	r2,40(sp)
 4023c40:	d8000915 	stw	zero,36(sp)
 4023c44:	d8c00317 	ldw	r3,12(sp)
 4023c48:	00800244 	movi	r2,9
 4023c4c:	10c11a36 	bltu	r2,r3,40240b8 <_dtoa_r+0x740>
 4023c50:	00800144 	movi	r2,5
 4023c54:	10c4fc0e 	bge	r2,r3,4025048 <_dtoa_r+0x16d0>
 4023c58:	18ffff04 	addi	r3,r3,-4
 4023c5c:	d8c00315 	stw	r3,12(sp)
 4023c60:	0029883a 	mov	r20,zero
 4023c64:	d9800317 	ldw	r6,12(sp)
 4023c68:	008000c4 	movi	r2,3
 4023c6c:	3083bd26 	beq	r6,r2,4024b64 <_dtoa_r+0x11ec>
 4023c70:	1183670e 	bge	r2,r6,4024a10 <_dtoa_r+0x1098>
 4023c74:	d8c00317 	ldw	r3,12(sp)
 4023c78:	00800104 	movi	r2,4
 4023c7c:	1882e726 	beq	r3,r2,402481c <_dtoa_r+0xea4>
 4023c80:	00800144 	movi	r2,5
 4023c84:	1884f21e 	bne	r3,r2,4025050 <_dtoa_r+0x16d8>
 4023c88:	00800044 	movi	r2,1
 4023c8c:	d8800b15 	stw	r2,44(sp)
 4023c90:	d8c02217 	ldw	r3,136(sp)
 4023c94:	d9000517 	ldw	r4,20(sp)
 4023c98:	1907883a 	add	r3,r3,r4
 4023c9c:	19800044 	addi	r6,r3,1
 4023ca0:	d8c00c15 	stw	r3,48(sp)
 4023ca4:	d9800615 	stw	r6,24(sp)
 4023ca8:	0183c30e 	bge	zero,r6,4024bb8 <_dtoa_r+0x1240>
 4023cac:	d9800617 	ldw	r6,24(sp)
 4023cb0:	3023883a 	mov	r17,r6
 4023cb4:	80001115 	stw	zero,68(r16)
 4023cb8:	008005c4 	movi	r2,23
 4023cbc:	1184f62e 	bgeu	r2,r6,4025098 <_dtoa_r+0x1720>
 4023cc0:	00c00044 	movi	r3,1
 4023cc4:	00800104 	movi	r2,4
 4023cc8:	1085883a 	add	r2,r2,r2
 4023ccc:	11000504 	addi	r4,r2,20
 4023cd0:	180b883a 	mov	r5,r3
 4023cd4:	18c00044 	addi	r3,r3,1
 4023cd8:	313ffb2e 	bgeu	r6,r4,4023cc8 <__flash_rwdata_start+0xffff3404>
 4023cdc:	81401115 	stw	r5,68(r16)
 4023ce0:	8009883a 	mov	r4,r16
 4023ce4:	4026ef40 	call	4026ef4 <_Balloc>
 4023ce8:	d8800715 	stw	r2,28(sp)
 4023cec:	80801015 	stw	r2,64(r16)
 4023cf0:	00800384 	movi	r2,14
 4023cf4:	1440fd36 	bltu	r2,r17,40240ec <_dtoa_r+0x774>
 4023cf8:	a000fc26 	beq	r20,zero,40240ec <_dtoa_r+0x774>
 4023cfc:	d8800517 	ldw	r2,20(sp)
 4023d00:	0083b90e 	bge	zero,r2,4024be8 <_dtoa_r+0x1270>
 4023d04:	d8c00517 	ldw	r3,20(sp)
 4023d08:	108003cc 	andi	r2,r2,15
 4023d0c:	100490fa 	slli	r2,r2,3
 4023d10:	182fd13a 	srai	r23,r3,4
 4023d14:	00c00034 	movhi	r3,0
 4023d18:	18c04e04 	addi	r3,r3,312
 4023d1c:	1885883a 	add	r2,r3,r2
 4023d20:	b8c0040c 	andi	r3,r23,16
 4023d24:	12c00017 	ldw	r11,0(r2)
 4023d28:	12800117 	ldw	r10,4(r2)
 4023d2c:	18039726 	beq	r3,zero,4024b8c <_dtoa_r+0x1214>
 4023d30:	00800034 	movhi	r2,0
 4023d34:	10804404 	addi	r2,r2,272
 4023d38:	11800817 	ldw	r6,32(r2)
 4023d3c:	11c00917 	ldw	r7,36(r2)
 4023d40:	9009883a 	mov	r4,r18
 4023d44:	980b883a 	mov	r5,r19
 4023d48:	da801615 	stw	r10,88(sp)
 4023d4c:	dac01515 	stw	r11,84(sp)
 4023d50:	402bcc00 	call	402bcc0 <__divdf3>
 4023d54:	da801617 	ldw	r10,88(sp)
 4023d58:	dac01517 	ldw	r11,84(sp)
 4023d5c:	bdc003cc 	andi	r23,r23,15
 4023d60:	044000c4 	movi	r17,3
 4023d64:	d8800e15 	stw	r2,56(sp)
 4023d68:	182b883a 	mov	r21,r3
 4023d6c:	b8001126 	beq	r23,zero,4023db4 <_dtoa_r+0x43c>
 4023d70:	05000034 	movhi	r20,0
 4023d74:	a5004404 	addi	r20,r20,272
 4023d78:	5805883a 	mov	r2,r11
 4023d7c:	5007883a 	mov	r3,r10
 4023d80:	b980004c 	andi	r6,r23,1
 4023d84:	1009883a 	mov	r4,r2
 4023d88:	b82fd07a 	srai	r23,r23,1
 4023d8c:	180b883a 	mov	r5,r3
 4023d90:	30000426 	beq	r6,zero,4023da4 <_dtoa_r+0x42c>
 4023d94:	a1800017 	ldw	r6,0(r20)
 4023d98:	a1c00117 	ldw	r7,4(r20)
 4023d9c:	8c400044 	addi	r17,r17,1
 4023da0:	402c8840 	call	402c884 <__muldf3>
 4023da4:	a5000204 	addi	r20,r20,8
 4023da8:	b83ff51e 	bne	r23,zero,4023d80 <__flash_rwdata_start+0xffff34bc>
 4023dac:	1017883a 	mov	r11,r2
 4023db0:	1815883a 	mov	r10,r3
 4023db4:	d9000e17 	ldw	r4,56(sp)
 4023db8:	a80b883a 	mov	r5,r21
 4023dbc:	580d883a 	mov	r6,r11
 4023dc0:	500f883a 	mov	r7,r10
 4023dc4:	402bcc00 	call	402bcc0 <__divdf3>
 4023dc8:	1029883a 	mov	r20,r2
 4023dcc:	182b883a 	mov	r21,r3
 4023dd0:	d9800d17 	ldw	r6,52(sp)
 4023dd4:	30000626 	beq	r6,zero,4023df0 <_dtoa_r+0x478>
 4023dd8:	a009883a 	mov	r4,r20
 4023ddc:	a80b883a 	mov	r5,r21
 4023de0:	000d883a 	mov	r6,zero
 4023de4:	01cffc34 	movhi	r7,16368
 4023de8:	402c7a40 	call	402c7a4 <__ledf2>
 4023dec:	10043216 	blt	r2,zero,4024eb8 <_dtoa_r+0x1540>
 4023df0:	8809883a 	mov	r4,r17
 4023df4:	402da480 	call	402da48 <__floatsidf>
 4023df8:	1009883a 	mov	r4,r2
 4023dfc:	180b883a 	mov	r5,r3
 4023e00:	a00d883a 	mov	r6,r20
 4023e04:	a80f883a 	mov	r7,r21
 4023e08:	402c8840 	call	402c884 <__muldf3>
 4023e0c:	000d883a 	mov	r6,zero
 4023e10:	1009883a 	mov	r4,r2
 4023e14:	180b883a 	mov	r5,r3
 4023e18:	01d00734 	movhi	r7,16412
 4023e1c:	402b4240 	call	402b424 <__adddf3>
 4023e20:	1023883a 	mov	r17,r2
 4023e24:	d9800617 	ldw	r6,24(sp)
 4023e28:	00bf3034 	movhi	r2,64704
 4023e2c:	1885883a 	add	r2,r3,r2
 4023e30:	d8800e15 	stw	r2,56(sp)
 4023e34:	30032e26 	beq	r6,zero,4024af0 <_dtoa_r+0x1178>
 4023e38:	d8c00517 	ldw	r3,20(sp)
 4023e3c:	da800617 	ldw	r10,24(sp)
 4023e40:	d8c01215 	stw	r3,72(sp)
 4023e44:	d9000b17 	ldw	r4,44(sp)
 4023e48:	2003b026 	beq	r4,zero,4024d0c <_dtoa_r+0x1394>
 4023e4c:	50bfffc4 	addi	r2,r10,-1
 4023e50:	100490fa 	slli	r2,r2,3
 4023e54:	00c00034 	movhi	r3,0
 4023e58:	18c04e04 	addi	r3,r3,312
 4023e5c:	1885883a 	add	r2,r3,r2
 4023e60:	11800017 	ldw	r6,0(r2)
 4023e64:	11c00117 	ldw	r7,4(r2)
 4023e68:	d8800717 	ldw	r2,28(sp)
 4023e6c:	0009883a 	mov	r4,zero
 4023e70:	014ff834 	movhi	r5,16352
 4023e74:	da801615 	stw	r10,88(sp)
 4023e78:	15c00044 	addi	r23,r2,1
 4023e7c:	402bcc00 	call	402bcc0 <__divdf3>
 4023e80:	d9c00e17 	ldw	r7,56(sp)
 4023e84:	880d883a 	mov	r6,r17
 4023e88:	1009883a 	mov	r4,r2
 4023e8c:	180b883a 	mov	r5,r3
 4023e90:	402d0f00 	call	402d0f0 <__subdf3>
 4023e94:	a80b883a 	mov	r5,r21
 4023e98:	a009883a 	mov	r4,r20
 4023e9c:	d8c01015 	stw	r3,64(sp)
 4023ea0:	d8800e15 	stw	r2,56(sp)
 4023ea4:	402d9c00 	call	402d9c0 <__fixdfsi>
 4023ea8:	1009883a 	mov	r4,r2
 4023eac:	d8801715 	stw	r2,92(sp)
 4023eb0:	402da480 	call	402da48 <__floatsidf>
 4023eb4:	a009883a 	mov	r4,r20
 4023eb8:	a80b883a 	mov	r5,r21
 4023ebc:	100d883a 	mov	r6,r2
 4023ec0:	180f883a 	mov	r7,r3
 4023ec4:	402d0f00 	call	402d0f0 <__subdf3>
 4023ec8:	da001717 	ldw	r8,92(sp)
 4023ecc:	1829883a 	mov	r20,r3
 4023ed0:	d8c00717 	ldw	r3,28(sp)
 4023ed4:	d9000e17 	ldw	r4,56(sp)
 4023ed8:	d9401017 	ldw	r5,64(sp)
 4023edc:	42000c04 	addi	r8,r8,48
 4023ee0:	1023883a 	mov	r17,r2
 4023ee4:	1a000005 	stb	r8,0(r3)
 4023ee8:	880d883a 	mov	r6,r17
 4023eec:	a00f883a 	mov	r7,r20
 4023ef0:	402b883a 	mov	r21,r8
 4023ef4:	402c6c40 	call	402c6c4 <__gedf2>
 4023ef8:	00844516 	blt	zero,r2,4025010 <_dtoa_r+0x1698>
 4023efc:	0009883a 	mov	r4,zero
 4023f00:	014ffc34 	movhi	r5,16368
 4023f04:	880d883a 	mov	r6,r17
 4023f08:	a00f883a 	mov	r7,r20
 4023f0c:	402d0f00 	call	402d0f0 <__subdf3>
 4023f10:	d9000e17 	ldw	r4,56(sp)
 4023f14:	d9401017 	ldw	r5,64(sp)
 4023f18:	100d883a 	mov	r6,r2
 4023f1c:	180f883a 	mov	r7,r3
 4023f20:	402c6c40 	call	402c6c4 <__gedf2>
 4023f24:	da801617 	ldw	r10,88(sp)
 4023f28:	00843616 	blt	zero,r2,4025004 <_dtoa_r+0x168c>
 4023f2c:	00800044 	movi	r2,1
 4023f30:	12806e0e 	bge	r2,r10,40240ec <_dtoa_r+0x774>
 4023f34:	d9000717 	ldw	r4,28(sp)
 4023f38:	dd801315 	stw	r22,76(sp)
 4023f3c:	dc001115 	stw	r16,68(sp)
 4023f40:	2295883a 	add	r10,r4,r10
 4023f44:	dcc01415 	stw	r19,80(sp)
 4023f48:	502d883a 	mov	r22,r10
 4023f4c:	dcc01017 	ldw	r19,64(sp)
 4023f50:	b821883a 	mov	r16,r23
 4023f54:	dc801015 	stw	r18,64(sp)
 4023f58:	dc800e17 	ldw	r18,56(sp)
 4023f5c:	00000906 	br	4023f84 <_dtoa_r+0x60c>
 4023f60:	402d0f00 	call	402d0f0 <__subdf3>
 4023f64:	1009883a 	mov	r4,r2
 4023f68:	180b883a 	mov	r5,r3
 4023f6c:	900d883a 	mov	r6,r18
 4023f70:	980f883a 	mov	r7,r19
 4023f74:	402c7a40 	call	402c7a4 <__ledf2>
 4023f78:	10040e16 	blt	r2,zero,4024fb4 <_dtoa_r+0x163c>
 4023f7c:	b821883a 	mov	r16,r23
 4023f80:	bd841026 	beq	r23,r22,4024fc4 <_dtoa_r+0x164c>
 4023f84:	9009883a 	mov	r4,r18
 4023f88:	980b883a 	mov	r5,r19
 4023f8c:	000d883a 	mov	r6,zero
 4023f90:	01d00934 	movhi	r7,16420
 4023f94:	402c8840 	call	402c884 <__muldf3>
 4023f98:	000d883a 	mov	r6,zero
 4023f9c:	01d00934 	movhi	r7,16420
 4023fa0:	8809883a 	mov	r4,r17
 4023fa4:	a00b883a 	mov	r5,r20
 4023fa8:	1025883a 	mov	r18,r2
 4023fac:	1827883a 	mov	r19,r3
 4023fb0:	402c8840 	call	402c884 <__muldf3>
 4023fb4:	180b883a 	mov	r5,r3
 4023fb8:	1009883a 	mov	r4,r2
 4023fbc:	1823883a 	mov	r17,r3
 4023fc0:	1029883a 	mov	r20,r2
 4023fc4:	402d9c00 	call	402d9c0 <__fixdfsi>
 4023fc8:	1009883a 	mov	r4,r2
 4023fcc:	102b883a 	mov	r21,r2
 4023fd0:	402da480 	call	402da48 <__floatsidf>
 4023fd4:	a009883a 	mov	r4,r20
 4023fd8:	880b883a 	mov	r5,r17
 4023fdc:	100d883a 	mov	r6,r2
 4023fe0:	180f883a 	mov	r7,r3
 4023fe4:	402d0f00 	call	402d0f0 <__subdf3>
 4023fe8:	ad400c04 	addi	r21,r21,48
 4023fec:	1009883a 	mov	r4,r2
 4023ff0:	180b883a 	mov	r5,r3
 4023ff4:	900d883a 	mov	r6,r18
 4023ff8:	980f883a 	mov	r7,r19
 4023ffc:	85400005 	stb	r21,0(r16)
 4024000:	1023883a 	mov	r17,r2
 4024004:	1829883a 	mov	r20,r3
 4024008:	402c7a40 	call	402c7a4 <__ledf2>
 402400c:	bdc00044 	addi	r23,r23,1
 4024010:	0009883a 	mov	r4,zero
 4024014:	014ffc34 	movhi	r5,16368
 4024018:	880d883a 	mov	r6,r17
 402401c:	a00f883a 	mov	r7,r20
 4024020:	103fcf0e 	bge	r2,zero,4023f60 <__flash_rwdata_start+0xffff369c>
 4024024:	d9801217 	ldw	r6,72(sp)
 4024028:	dc001117 	ldw	r16,68(sp)
 402402c:	d9800515 	stw	r6,20(sp)
 4024030:	8009883a 	mov	r4,r16
 4024034:	e00b883a 	mov	r5,fp
 4024038:	4026f9c0 	call	4026f9c <_Bfree>
 402403c:	d8c00517 	ldw	r3,20(sp)
 4024040:	d9002317 	ldw	r4,140(sp)
 4024044:	d9802517 	ldw	r6,148(sp)
 4024048:	b8000005 	stb	zero,0(r23)
 402404c:	18800044 	addi	r2,r3,1
 4024050:	20800015 	stw	r2,0(r4)
 4024054:	30027226 	beq	r6,zero,4024a20 <_dtoa_r+0x10a8>
 4024058:	35c00015 	stw	r23,0(r6)
 402405c:	d8800717 	ldw	r2,28(sp)
 4024060:	003e7406 	br	4023a34 <__flash_rwdata_start+0xffff3170>
 4024064:	00800434 	movhi	r2,16
 4024068:	10bfffc4 	addi	r2,r2,-1
 402406c:	a8aa703a 	and	r21,r21,r2
 4024070:	a83e801e 	bne	r21,zero,4023a74 <__flash_rwdata_start+0xffff31b0>
 4024074:	00800034 	movhi	r2,0
 4024078:	10802f04 	addi	r2,r2,188
 402407c:	003e7f06 	br	4023a7c <__flash_rwdata_start+0xffff31b8>
 4024080:	10c00204 	addi	r3,r2,8
 4024084:	003e8206 	br	4023a90 <__flash_rwdata_start+0xffff31cc>
 4024088:	01400434 	movhi	r5,16
 402408c:	297fffc4 	addi	r5,r5,-1
 4024090:	994a703a 	and	r5,r19,r5
 4024094:	9009883a 	mov	r4,r18
 4024098:	8c7f0044 	addi	r17,r17,-1023
 402409c:	294ffc34 	orhi	r5,r5,16368
 40240a0:	dd000217 	ldw	r20,8(sp)
 40240a4:	d8000f15 	stw	zero,60(sp)
 40240a8:	003e9f06 	br	4023b28 <__flash_rwdata_start+0xffff3264>
 40240ac:	00800034 	movhi	r2,0
 40240b0:	10802604 	addi	r2,r2,152
 40240b4:	003e5f06 	br	4023a34 <__flash_rwdata_start+0xffff3170>
 40240b8:	80001115 	stw	zero,68(r16)
 40240bc:	8009883a 	mov	r4,r16
 40240c0:	000b883a 	mov	r5,zero
 40240c4:	4026ef40 	call	4026ef4 <_Balloc>
 40240c8:	01bfffc4 	movi	r6,-1
 40240cc:	d8800715 	stw	r2,28(sp)
 40240d0:	80801015 	stw	r2,64(r16)
 40240d4:	00800044 	movi	r2,1
 40240d8:	d9800c15 	stw	r6,48(sp)
 40240dc:	d8800b15 	stw	r2,44(sp)
 40240e0:	d9800615 	stw	r6,24(sp)
 40240e4:	d8002215 	stw	zero,136(sp)
 40240e8:	d8000315 	stw	zero,12(sp)
 40240ec:	d8800117 	ldw	r2,4(sp)
 40240f0:	10008e16 	blt	r2,zero,402432c <_dtoa_r+0x9b4>
 40240f4:	d9000517 	ldw	r4,20(sp)
 40240f8:	00c00384 	movi	r3,14
 40240fc:	19008b16 	blt	r3,r4,402432c <_dtoa_r+0x9b4>
 4024100:	200490fa 	slli	r2,r4,3
 4024104:	00c00034 	movhi	r3,0
 4024108:	d9802217 	ldw	r6,136(sp)
 402410c:	18c04e04 	addi	r3,r3,312
 4024110:	1885883a 	add	r2,r3,r2
 4024114:	14400017 	ldw	r17,0(r2)
 4024118:	15000117 	ldw	r20,4(r2)
 402411c:	3001c716 	blt	r6,zero,402483c <_dtoa_r+0xec4>
 4024120:	880d883a 	mov	r6,r17
 4024124:	a00f883a 	mov	r7,r20
 4024128:	9009883a 	mov	r4,r18
 402412c:	980b883a 	mov	r5,r19
 4024130:	402bcc00 	call	402bcc0 <__divdf3>
 4024134:	180b883a 	mov	r5,r3
 4024138:	1009883a 	mov	r4,r2
 402413c:	402d9c00 	call	402d9c0 <__fixdfsi>
 4024140:	1009883a 	mov	r4,r2
 4024144:	102d883a 	mov	r22,r2
 4024148:	402da480 	call	402da48 <__floatsidf>
 402414c:	1009883a 	mov	r4,r2
 4024150:	180b883a 	mov	r5,r3
 4024154:	880d883a 	mov	r6,r17
 4024158:	a00f883a 	mov	r7,r20
 402415c:	402c8840 	call	402c884 <__muldf3>
 4024160:	9009883a 	mov	r4,r18
 4024164:	980b883a 	mov	r5,r19
 4024168:	100d883a 	mov	r6,r2
 402416c:	180f883a 	mov	r7,r3
 4024170:	402d0f00 	call	402d0f0 <__subdf3>
 4024174:	d9000717 	ldw	r4,28(sp)
 4024178:	d9800617 	ldw	r6,24(sp)
 402417c:	180b883a 	mov	r5,r3
 4024180:	b0c00c04 	addi	r3,r22,48
 4024184:	20c00005 	stb	r3,0(r4)
 4024188:	25c00044 	addi	r23,r4,1
 402418c:	01000044 	movi	r4,1
 4024190:	1011883a 	mov	r8,r2
 4024194:	2807883a 	mov	r3,r5
 4024198:	31003d26 	beq	r6,r4,4024290 <_dtoa_r+0x918>
 402419c:	000d883a 	mov	r6,zero
 40241a0:	01d00934 	movhi	r7,16420
 40241a4:	1009883a 	mov	r4,r2
 40241a8:	402c8840 	call	402c884 <__muldf3>
 40241ac:	1009883a 	mov	r4,r2
 40241b0:	180b883a 	mov	r5,r3
 40241b4:	000d883a 	mov	r6,zero
 40241b8:	000f883a 	mov	r7,zero
 40241bc:	1027883a 	mov	r19,r2
 40241c0:	182b883a 	mov	r21,r3
 40241c4:	402c6400 	call	402c640 <__eqdf2>
 40241c8:	103f9926 	beq	r2,zero,4024030 <__flash_rwdata_start+0xffff376c>
 40241cc:	d8c00617 	ldw	r3,24(sp)
 40241d0:	d9000717 	ldw	r4,28(sp)
 40241d4:	b825883a 	mov	r18,r23
 40241d8:	18bfffc4 	addi	r2,r3,-1
 40241dc:	20ad883a 	add	r22,r4,r2
 40241e0:	dc000315 	stw	r16,12(sp)
 40241e4:	00000a06 	br	4024210 <_dtoa_r+0x898>
 40241e8:	402c8840 	call	402c884 <__muldf3>
 40241ec:	1009883a 	mov	r4,r2
 40241f0:	180b883a 	mov	r5,r3
 40241f4:	000d883a 	mov	r6,zero
 40241f8:	000f883a 	mov	r7,zero
 40241fc:	1027883a 	mov	r19,r2
 4024200:	182b883a 	mov	r21,r3
 4024204:	b825883a 	mov	r18,r23
 4024208:	402c6400 	call	402c640 <__eqdf2>
 402420c:	10022626 	beq	r2,zero,4024aa8 <_dtoa_r+0x1130>
 4024210:	880d883a 	mov	r6,r17
 4024214:	a00f883a 	mov	r7,r20
 4024218:	9809883a 	mov	r4,r19
 402421c:	a80b883a 	mov	r5,r21
 4024220:	402bcc00 	call	402bcc0 <__divdf3>
 4024224:	180b883a 	mov	r5,r3
 4024228:	1009883a 	mov	r4,r2
 402422c:	402d9c00 	call	402d9c0 <__fixdfsi>
 4024230:	1009883a 	mov	r4,r2
 4024234:	1021883a 	mov	r16,r2
 4024238:	402da480 	call	402da48 <__floatsidf>
 402423c:	1009883a 	mov	r4,r2
 4024240:	180b883a 	mov	r5,r3
 4024244:	880d883a 	mov	r6,r17
 4024248:	a00f883a 	mov	r7,r20
 402424c:	402c8840 	call	402c884 <__muldf3>
 4024250:	9809883a 	mov	r4,r19
 4024254:	a80b883a 	mov	r5,r21
 4024258:	100d883a 	mov	r6,r2
 402425c:	180f883a 	mov	r7,r3
 4024260:	402d0f00 	call	402d0f0 <__subdf3>
 4024264:	82000c04 	addi	r8,r16,48
 4024268:	92000005 	stb	r8,0(r18)
 402426c:	1009883a 	mov	r4,r2
 4024270:	180b883a 	mov	r5,r3
 4024274:	000d883a 	mov	r6,zero
 4024278:	01d00934 	movhi	r7,16420
 402427c:	1011883a 	mov	r8,r2
 4024280:	bdc00044 	addi	r23,r23,1
 4024284:	95bfd81e 	bne	r18,r22,40241e8 <__flash_rwdata_start+0xffff3924>
 4024288:	802d883a 	mov	r22,r16
 402428c:	dc000317 	ldw	r16,12(sp)
 4024290:	4009883a 	mov	r4,r8
 4024294:	180b883a 	mov	r5,r3
 4024298:	400d883a 	mov	r6,r8
 402429c:	180f883a 	mov	r7,r3
 40242a0:	402b4240 	call	402b424 <__adddf3>
 40242a4:	8809883a 	mov	r4,r17
 40242a8:	a00b883a 	mov	r5,r20
 40242ac:	100d883a 	mov	r6,r2
 40242b0:	180f883a 	mov	r7,r3
 40242b4:	1027883a 	mov	r19,r2
 40242b8:	1825883a 	mov	r18,r3
 40242bc:	402c7a40 	call	402c7a4 <__ledf2>
 40242c0:	10000816 	blt	r2,zero,40242e4 <_dtoa_r+0x96c>
 40242c4:	8809883a 	mov	r4,r17
 40242c8:	a00b883a 	mov	r5,r20
 40242cc:	980d883a 	mov	r6,r19
 40242d0:	900f883a 	mov	r7,r18
 40242d4:	402c6400 	call	402c640 <__eqdf2>
 40242d8:	103f551e 	bne	r2,zero,4024030 <__flash_rwdata_start+0xffff376c>
 40242dc:	b580004c 	andi	r22,r22,1
 40242e0:	b03f5326 	beq	r22,zero,4024030 <__flash_rwdata_start+0xffff376c>
 40242e4:	bd7fffc3 	ldbu	r21,-1(r23)
 40242e8:	b8bfffc4 	addi	r2,r23,-1
 40242ec:	1007883a 	mov	r3,r2
 40242f0:	01400e44 	movi	r5,57
 40242f4:	d9800717 	ldw	r6,28(sp)
 40242f8:	00000506 	br	4024310 <_dtoa_r+0x998>
 40242fc:	18ffffc4 	addi	r3,r3,-1
 4024300:	30825e26 	beq	r6,r2,4024c7c <_dtoa_r+0x1304>
 4024304:	1d400003 	ldbu	r21,0(r3)
 4024308:	102f883a 	mov	r23,r2
 402430c:	10bfffc4 	addi	r2,r2,-1
 4024310:	a9003fcc 	andi	r4,r21,255
 4024314:	2100201c 	xori	r4,r4,128
 4024318:	213fe004 	addi	r4,r4,-128
 402431c:	217ff726 	beq	r4,r5,40242fc <__flash_rwdata_start+0xffff3a38>
 4024320:	aa000044 	addi	r8,r21,1
 4024324:	12000005 	stb	r8,0(r2)
 4024328:	003f4106 	br	4024030 <__flash_rwdata_start+0xffff376c>
 402432c:	d8c00b17 	ldw	r3,44(sp)
 4024330:	18006726 	beq	r3,zero,40244d0 <_dtoa_r+0xb58>
 4024334:	d9000317 	ldw	r4,12(sp)
 4024338:	00c00044 	movi	r3,1
 402433c:	19016a0e 	bge	r3,r4,40248e8 <_dtoa_r+0xf70>
 4024340:	d8800617 	ldw	r2,24(sp)
 4024344:	d8c00917 	ldw	r3,36(sp)
 4024348:	157fffc4 	addi	r21,r2,-1
 402434c:	1d420716 	blt	r3,r21,4024b6c <_dtoa_r+0x11f4>
 4024350:	1d6bc83a 	sub	r21,r3,r21
 4024354:	d8800617 	ldw	r2,24(sp)
 4024358:	1002c716 	blt	r2,zero,4024e78 <_dtoa_r+0x1500>
 402435c:	dd000817 	ldw	r20,32(sp)
 4024360:	d8800617 	ldw	r2,24(sp)
 4024364:	d9800817 	ldw	r6,32(sp)
 4024368:	8009883a 	mov	r4,r16
 402436c:	01400044 	movi	r5,1
 4024370:	308d883a 	add	r6,r6,r2
 4024374:	d9800815 	stw	r6,32(sp)
 4024378:	b0ad883a 	add	r22,r22,r2
 402437c:	40273280 	call	4027328 <__i2b>
 4024380:	1023883a 	mov	r17,r2
 4024384:	a0000826 	beq	r20,zero,40243a8 <_dtoa_r+0xa30>
 4024388:	0580070e 	bge	zero,r22,40243a8 <_dtoa_r+0xa30>
 402438c:	b005883a 	mov	r2,r22
 4024390:	a5812016 	blt	r20,r22,4024814 <_dtoa_r+0xe9c>
 4024394:	d8c00817 	ldw	r3,32(sp)
 4024398:	a0a9c83a 	sub	r20,r20,r2
 402439c:	b0adc83a 	sub	r22,r22,r2
 40243a0:	1887c83a 	sub	r3,r3,r2
 40243a4:	d8c00815 	stw	r3,32(sp)
 40243a8:	d9000917 	ldw	r4,36(sp)
 40243ac:	0100140e 	bge	zero,r4,4024400 <_dtoa_r+0xa88>
 40243b0:	d9800b17 	ldw	r6,44(sp)
 40243b4:	3001e526 	beq	r6,zero,4024b4c <_dtoa_r+0x11d4>
 40243b8:	05400e0e 	bge	zero,r21,40243f4 <_dtoa_r+0xa7c>
 40243bc:	880b883a 	mov	r5,r17
 40243c0:	8009883a 	mov	r4,r16
 40243c4:	a80d883a 	mov	r6,r21
 40243c8:	40275f40 	call	40275f4 <__pow5mult>
 40243cc:	e00d883a 	mov	r6,fp
 40243d0:	8009883a 	mov	r4,r16
 40243d4:	100b883a 	mov	r5,r2
 40243d8:	1023883a 	mov	r17,r2
 40243dc:	40273640 	call	4027364 <__multiply>
 40243e0:	102f883a 	mov	r23,r2
 40243e4:	e00b883a 	mov	r5,fp
 40243e8:	8009883a 	mov	r4,r16
 40243ec:	4026f9c0 	call	4026f9c <_Bfree>
 40243f0:	b839883a 	mov	fp,r23
 40243f4:	d8800917 	ldw	r2,36(sp)
 40243f8:	154dc83a 	sub	r6,r2,r21
 40243fc:	3001281e 	bne	r6,zero,40248a0 <_dtoa_r+0xf28>
 4024400:	05c00044 	movi	r23,1
 4024404:	8009883a 	mov	r4,r16
 4024408:	b80b883a 	mov	r5,r23
 402440c:	40273280 	call	4027328 <__i2b>
 4024410:	d8c00a17 	ldw	r3,40(sp)
 4024414:	102b883a 	mov	r21,r2
 4024418:	00c0310e 	bge	zero,r3,40244e0 <_dtoa_r+0xb68>
 402441c:	8009883a 	mov	r4,r16
 4024420:	100b883a 	mov	r5,r2
 4024424:	180d883a 	mov	r6,r3
 4024428:	40275f40 	call	40275f4 <__pow5mult>
 402442c:	d9000317 	ldw	r4,12(sp)
 4024430:	102b883a 	mov	r21,r2
 4024434:	b9011f0e 	bge	r23,r4,40248b4 <_dtoa_r+0xf3c>
 4024438:	0027883a 	mov	r19,zero
 402443c:	a8800417 	ldw	r2,16(r21)
 4024440:	10800104 	addi	r2,r2,4
 4024444:	1085883a 	add	r2,r2,r2
 4024448:	1085883a 	add	r2,r2,r2
 402444c:	a885883a 	add	r2,r21,r2
 4024450:	11000017 	ldw	r4,0(r2)
 4024454:	40272100 	call	4027210 <__hi0bits>
 4024458:	00c00804 	movi	r3,32
 402445c:	1885c83a 	sub	r2,r3,r2
 4024460:	00002506 	br	40244f8 <_dtoa_r+0xb80>
 4024464:	01800044 	movi	r6,1
 4024468:	d9800d15 	stw	r6,52(sp)
 402446c:	003dec06 	br	4023c20 <__flash_rwdata_start+0xffff335c>
 4024470:	d8c00817 	ldw	r3,32(sp)
 4024474:	d9000517 	ldw	r4,20(sp)
 4024478:	d8000a15 	stw	zero,40(sp)
 402447c:	1907c83a 	sub	r3,r3,r4
 4024480:	010dc83a 	sub	r6,zero,r4
 4024484:	d8c00815 	stw	r3,32(sp)
 4024488:	d9800915 	stw	r6,36(sp)
 402448c:	003ded06 	br	4023c44 <__flash_rwdata_start+0xffff3380>
 4024490:	05adc83a 	sub	r22,zero,r22
 4024494:	dd800815 	stw	r22,32(sp)
 4024498:	002d883a 	mov	r22,zero
 402449c:	003de406 	br	4023c30 <__flash_rwdata_start+0xffff336c>
 40244a0:	d9000517 	ldw	r4,20(sp)
 40244a4:	402da480 	call	402da48 <__floatsidf>
 40244a8:	1009883a 	mov	r4,r2
 40244ac:	180b883a 	mov	r5,r3
 40244b0:	b00d883a 	mov	r6,r22
 40244b4:	a80f883a 	mov	r7,r21
 40244b8:	402c6400 	call	402c640 <__eqdf2>
 40244bc:	103dc726 	beq	r2,zero,4023bdc <__flash_rwdata_start+0xffff3318>
 40244c0:	d8800517 	ldw	r2,20(sp)
 40244c4:	10bfffc4 	addi	r2,r2,-1
 40244c8:	d8800515 	stw	r2,20(sp)
 40244cc:	003dc306 	br	4023bdc <__flash_rwdata_start+0xffff3318>
 40244d0:	dd400917 	ldw	r21,36(sp)
 40244d4:	dd000817 	ldw	r20,32(sp)
 40244d8:	0023883a 	mov	r17,zero
 40244dc:	003fa906 	br	4024384 <__flash_rwdata_start+0xffff3ac0>
 40244e0:	d9800317 	ldw	r6,12(sp)
 40244e4:	b981670e 	bge	r23,r6,4024a84 <_dtoa_r+0x110c>
 40244e8:	0027883a 	mov	r19,zero
 40244ec:	d8c00a17 	ldw	r3,40(sp)
 40244f0:	183fd21e 	bne	r3,zero,402443c <__flash_rwdata_start+0xffff3b78>
 40244f4:	00800044 	movi	r2,1
 40244f8:	1585883a 	add	r2,r2,r22
 40244fc:	108007cc 	andi	r2,r2,31
 4024500:	10005f26 	beq	r2,zero,4024680 <_dtoa_r+0xd08>
 4024504:	00c00804 	movi	r3,32
 4024508:	1887c83a 	sub	r3,r3,r2
 402450c:	01000104 	movi	r4,4
 4024510:	20c2dd0e 	bge	r4,r3,4025088 <_dtoa_r+0x1710>
 4024514:	d9000817 	ldw	r4,32(sp)
 4024518:	00c00704 	movi	r3,28
 402451c:	1885c83a 	sub	r2,r3,r2
 4024520:	2089883a 	add	r4,r4,r2
 4024524:	d9000815 	stw	r4,32(sp)
 4024528:	a0a9883a 	add	r20,r20,r2
 402452c:	b0ad883a 	add	r22,r22,r2
 4024530:	d8800817 	ldw	r2,32(sp)
 4024534:	0080050e 	bge	zero,r2,402454c <_dtoa_r+0xbd4>
 4024538:	e00b883a 	mov	r5,fp
 402453c:	8009883a 	mov	r4,r16
 4024540:	100d883a 	mov	r6,r2
 4024544:	40277340 	call	4027734 <__lshift>
 4024548:	1039883a 	mov	fp,r2
 402454c:	0580050e 	bge	zero,r22,4024564 <_dtoa_r+0xbec>
 4024550:	a80b883a 	mov	r5,r21
 4024554:	8009883a 	mov	r4,r16
 4024558:	b00d883a 	mov	r6,r22
 402455c:	40277340 	call	4027734 <__lshift>
 4024560:	102b883a 	mov	r21,r2
 4024564:	d8c00d17 	ldw	r3,52(sp)
 4024568:	1801161e 	bne	r3,zero,40249c4 <_dtoa_r+0x104c>
 402456c:	d8c00617 	ldw	r3,24(sp)
 4024570:	00c12d0e 	bge	zero,r3,4024a28 <_dtoa_r+0x10b0>
 4024574:	d8c00b17 	ldw	r3,44(sp)
 4024578:	1800571e 	bne	r3,zero,40246d8 <_dtoa_r+0xd60>
 402457c:	dc800717 	ldw	r18,28(sp)
 4024580:	dcc00617 	ldw	r19,24(sp)
 4024584:	9029883a 	mov	r20,r18
 4024588:	00000206 	br	4024594 <_dtoa_r+0xc1c>
 402458c:	4026fc40 	call	4026fc4 <__multadd>
 4024590:	1039883a 	mov	fp,r2
 4024594:	e009883a 	mov	r4,fp
 4024598:	a80b883a 	mov	r5,r21
 402459c:	40237500 	call	4023750 <quorem>
 40245a0:	10800c04 	addi	r2,r2,48
 40245a4:	90800005 	stb	r2,0(r18)
 40245a8:	94800044 	addi	r18,r18,1
 40245ac:	9507c83a 	sub	r3,r18,r20
 40245b0:	8009883a 	mov	r4,r16
 40245b4:	e00b883a 	mov	r5,fp
 40245b8:	01800284 	movi	r6,10
 40245bc:	000f883a 	mov	r7,zero
 40245c0:	1cfff216 	blt	r3,r19,402458c <__flash_rwdata_start+0xffff3cc8>
 40245c4:	1011883a 	mov	r8,r2
 40245c8:	d8800617 	ldw	r2,24(sp)
 40245cc:	00822e0e 	bge	zero,r2,4024e88 <_dtoa_r+0x1510>
 40245d0:	d9000717 	ldw	r4,28(sp)
 40245d4:	0025883a 	mov	r18,zero
 40245d8:	20af883a 	add	r23,r4,r2
 40245dc:	e00b883a 	mov	r5,fp
 40245e0:	01800044 	movi	r6,1
 40245e4:	8009883a 	mov	r4,r16
 40245e8:	da001715 	stw	r8,92(sp)
 40245ec:	40277340 	call	4027734 <__lshift>
 40245f0:	1009883a 	mov	r4,r2
 40245f4:	a80b883a 	mov	r5,r21
 40245f8:	1039883a 	mov	fp,r2
 40245fc:	40278840 	call	4027884 <__mcmp>
 4024600:	da001717 	ldw	r8,92(sp)
 4024604:	00816e0e 	bge	zero,r2,4024bc0 <_dtoa_r+0x1248>
 4024608:	b93fffc3 	ldbu	r4,-1(r23)
 402460c:	b8bfffc4 	addi	r2,r23,-1
 4024610:	1007883a 	mov	r3,r2
 4024614:	01800e44 	movi	r6,57
 4024618:	d9c00717 	ldw	r7,28(sp)
 402461c:	00000506 	br	4024634 <_dtoa_r+0xcbc>
 4024620:	18ffffc4 	addi	r3,r3,-1
 4024624:	38811926 	beq	r7,r2,4024a8c <_dtoa_r+0x1114>
 4024628:	19000003 	ldbu	r4,0(r3)
 402462c:	102f883a 	mov	r23,r2
 4024630:	10bfffc4 	addi	r2,r2,-1
 4024634:	21403fcc 	andi	r5,r4,255
 4024638:	2940201c 	xori	r5,r5,128
 402463c:	297fe004 	addi	r5,r5,-128
 4024640:	29bff726 	beq	r5,r6,4024620 <__flash_rwdata_start+0xffff3d5c>
 4024644:	21000044 	addi	r4,r4,1
 4024648:	11000005 	stb	r4,0(r2)
 402464c:	8009883a 	mov	r4,r16
 4024650:	a80b883a 	mov	r5,r21
 4024654:	4026f9c0 	call	4026f9c <_Bfree>
 4024658:	883e7526 	beq	r17,zero,4024030 <__flash_rwdata_start+0xffff376c>
 402465c:	90000426 	beq	r18,zero,4024670 <_dtoa_r+0xcf8>
 4024660:	94400326 	beq	r18,r17,4024670 <_dtoa_r+0xcf8>
 4024664:	8009883a 	mov	r4,r16
 4024668:	900b883a 	mov	r5,r18
 402466c:	4026f9c0 	call	4026f9c <_Bfree>
 4024670:	8009883a 	mov	r4,r16
 4024674:	880b883a 	mov	r5,r17
 4024678:	4026f9c0 	call	4026f9c <_Bfree>
 402467c:	003e6c06 	br	4024030 <__flash_rwdata_start+0xffff376c>
 4024680:	00800704 	movi	r2,28
 4024684:	d9800817 	ldw	r6,32(sp)
 4024688:	a0a9883a 	add	r20,r20,r2
 402468c:	b0ad883a 	add	r22,r22,r2
 4024690:	308d883a 	add	r6,r6,r2
 4024694:	d9800815 	stw	r6,32(sp)
 4024698:	003fa506 	br	4024530 <__flash_rwdata_start+0xffff3c6c>
 402469c:	013efb84 	movi	r4,-1042
 40246a0:	246bc83a 	sub	r21,r4,r17
 40246a4:	9548983a 	sll	r4,r18,r21
 40246a8:	003d1806 	br	4023b0c <__flash_rwdata_start+0xffff3248>
 40246ac:	d8000d15 	stw	zero,52(sp)
 40246b0:	003d5b06 	br	4023c20 <__flash_rwdata_start+0xffff335c>
 40246b4:	880b883a 	mov	r5,r17
 40246b8:	8009883a 	mov	r4,r16
 40246bc:	01800284 	movi	r6,10
 40246c0:	000f883a 	mov	r7,zero
 40246c4:	4026fc40 	call	4026fc4 <__multadd>
 40246c8:	1023883a 	mov	r17,r2
 40246cc:	d8800c17 	ldw	r2,48(sp)
 40246d0:	0082550e 	bge	zero,r2,4025028 <_dtoa_r+0x16b0>
 40246d4:	d8800615 	stw	r2,24(sp)
 40246d8:	0500050e 	bge	zero,r20,40246f0 <_dtoa_r+0xd78>
 40246dc:	880b883a 	mov	r5,r17
 40246e0:	8009883a 	mov	r4,r16
 40246e4:	a00d883a 	mov	r6,r20
 40246e8:	40277340 	call	4027734 <__lshift>
 40246ec:	1023883a 	mov	r17,r2
 40246f0:	98016a1e 	bne	r19,zero,4024c9c <_dtoa_r+0x1324>
 40246f4:	8829883a 	mov	r20,r17
 40246f8:	d9000617 	ldw	r4,24(sp)
 40246fc:	dcc00717 	ldw	r19,28(sp)
 4024700:	9480004c 	andi	r18,r18,1
 4024704:	20bfffc4 	addi	r2,r4,-1
 4024708:	9885883a 	add	r2,r19,r2
 402470c:	d8800415 	stw	r2,16(sp)
 4024710:	dc800615 	stw	r18,24(sp)
 4024714:	e009883a 	mov	r4,fp
 4024718:	a80b883a 	mov	r5,r21
 402471c:	40237500 	call	4023750 <quorem>
 4024720:	e009883a 	mov	r4,fp
 4024724:	880b883a 	mov	r5,r17
 4024728:	102f883a 	mov	r23,r2
 402472c:	40278840 	call	4027884 <__mcmp>
 4024730:	8009883a 	mov	r4,r16
 4024734:	a80b883a 	mov	r5,r21
 4024738:	a00d883a 	mov	r6,r20
 402473c:	102d883a 	mov	r22,r2
 4024740:	40278e40 	call	40278e4 <__mdiff>
 4024744:	1007883a 	mov	r3,r2
 4024748:	10800317 	ldw	r2,12(r2)
 402474c:	bc800c04 	addi	r18,r23,48
 4024750:	1000971e 	bne	r2,zero,40249b0 <_dtoa_r+0x1038>
 4024754:	180b883a 	mov	r5,r3
 4024758:	e009883a 	mov	r4,fp
 402475c:	d8c01515 	stw	r3,84(sp)
 4024760:	40278840 	call	4027884 <__mcmp>
 4024764:	d8c01517 	ldw	r3,84(sp)
 4024768:	8009883a 	mov	r4,r16
 402476c:	d8801515 	stw	r2,84(sp)
 4024770:	180b883a 	mov	r5,r3
 4024774:	4026f9c0 	call	4026f9c <_Bfree>
 4024778:	d8801517 	ldw	r2,84(sp)
 402477c:	1000041e 	bne	r2,zero,4024790 <_dtoa_r+0xe18>
 4024780:	d9800317 	ldw	r6,12(sp)
 4024784:	3000021e 	bne	r6,zero,4024790 <_dtoa_r+0xe18>
 4024788:	d8c00617 	ldw	r3,24(sp)
 402478c:	18007626 	beq	r3,zero,4024968 <_dtoa_r+0xff0>
 4024790:	b0005b16 	blt	r22,zero,4024900 <_dtoa_r+0xf88>
 4024794:	b000041e 	bne	r22,zero,40247a8 <_dtoa_r+0xe30>
 4024798:	d9000317 	ldw	r4,12(sp)
 402479c:	2000021e 	bne	r4,zero,40247a8 <_dtoa_r+0xe30>
 40247a0:	d8c00617 	ldw	r3,24(sp)
 40247a4:	18005626 	beq	r3,zero,4024900 <_dtoa_r+0xf88>
 40247a8:	00814d16 	blt	zero,r2,4024ce0 <_dtoa_r+0x1368>
 40247ac:	d8c00417 	ldw	r3,16(sp)
 40247b0:	9d800044 	addi	r22,r19,1
 40247b4:	9c800005 	stb	r18,0(r19)
 40247b8:	b02f883a 	mov	r23,r22
 40247bc:	98c14c26 	beq	r19,r3,4024cf0 <_dtoa_r+0x1378>
 40247c0:	e00b883a 	mov	r5,fp
 40247c4:	8009883a 	mov	r4,r16
 40247c8:	01800284 	movi	r6,10
 40247cc:	000f883a 	mov	r7,zero
 40247d0:	4026fc40 	call	4026fc4 <__multadd>
 40247d4:	1039883a 	mov	fp,r2
 40247d8:	8d006d26 	beq	r17,r20,4024990 <_dtoa_r+0x1018>
 40247dc:	880b883a 	mov	r5,r17
 40247e0:	01800284 	movi	r6,10
 40247e4:	000f883a 	mov	r7,zero
 40247e8:	8009883a 	mov	r4,r16
 40247ec:	4026fc40 	call	4026fc4 <__multadd>
 40247f0:	a00b883a 	mov	r5,r20
 40247f4:	8009883a 	mov	r4,r16
 40247f8:	01800284 	movi	r6,10
 40247fc:	000f883a 	mov	r7,zero
 4024800:	1023883a 	mov	r17,r2
 4024804:	4026fc40 	call	4026fc4 <__multadd>
 4024808:	1029883a 	mov	r20,r2
 402480c:	b027883a 	mov	r19,r22
 4024810:	003fc006 	br	4024714 <__flash_rwdata_start+0xffff3e50>
 4024814:	a005883a 	mov	r2,r20
 4024818:	003ede06 	br	4024394 <__flash_rwdata_start+0xffff3ad0>
 402481c:	01000044 	movi	r4,1
 4024820:	d9000b15 	stw	r4,44(sp)
 4024824:	d9802217 	ldw	r6,136(sp)
 4024828:	0180dc0e 	bge	zero,r6,4024b9c <_dtoa_r+0x1224>
 402482c:	3023883a 	mov	r17,r6
 4024830:	d9800c15 	stw	r6,48(sp)
 4024834:	d9800615 	stw	r6,24(sp)
 4024838:	003d1e06 	br	4023cb4 <__flash_rwdata_start+0xffff33f0>
 402483c:	d8800617 	ldw	r2,24(sp)
 4024840:	00be3716 	blt	zero,r2,4024120 <__flash_rwdata_start+0xffff385c>
 4024844:	1000be1e 	bne	r2,zero,4024b40 <_dtoa_r+0x11c8>
 4024848:	8809883a 	mov	r4,r17
 402484c:	a00b883a 	mov	r5,r20
 4024850:	000d883a 	mov	r6,zero
 4024854:	01d00534 	movhi	r7,16404
 4024858:	402c8840 	call	402c884 <__muldf3>
 402485c:	1009883a 	mov	r4,r2
 4024860:	180b883a 	mov	r5,r3
 4024864:	900d883a 	mov	r6,r18
 4024868:	980f883a 	mov	r7,r19
 402486c:	402c6c40 	call	402c6c4 <__gedf2>
 4024870:	002b883a 	mov	r21,zero
 4024874:	0023883a 	mov	r17,zero
 4024878:	10007a16 	blt	r2,zero,4024a64 <_dtoa_r+0x10ec>
 402487c:	d9002217 	ldw	r4,136(sp)
 4024880:	ddc00717 	ldw	r23,28(sp)
 4024884:	0108303a 	nor	r4,zero,r4
 4024888:	d9000515 	stw	r4,20(sp)
 402488c:	8009883a 	mov	r4,r16
 4024890:	a80b883a 	mov	r5,r21
 4024894:	4026f9c0 	call	4026f9c <_Bfree>
 4024898:	883f751e 	bne	r17,zero,4024670 <__flash_rwdata_start+0xffff3dac>
 402489c:	003de406 	br	4024030 <__flash_rwdata_start+0xffff376c>
 40248a0:	e00b883a 	mov	r5,fp
 40248a4:	8009883a 	mov	r4,r16
 40248a8:	40275f40 	call	40275f4 <__pow5mult>
 40248ac:	1039883a 	mov	fp,r2
 40248b0:	003ed306 	br	4024400 <__flash_rwdata_start+0xffff3b3c>
 40248b4:	903ee01e 	bne	r18,zero,4024438 <__flash_rwdata_start+0xffff3b74>
 40248b8:	00800434 	movhi	r2,16
 40248bc:	10bfffc4 	addi	r2,r2,-1
 40248c0:	9884703a 	and	r2,r19,r2
 40248c4:	103f081e 	bne	r2,zero,40244e8 <__flash_rwdata_start+0xffff3c24>
 40248c8:	9cdffc2c 	andhi	r19,r19,32752
 40248cc:	983f0626 	beq	r19,zero,40244e8 <__flash_rwdata_start+0xffff3c24>
 40248d0:	d8800817 	ldw	r2,32(sp)
 40248d4:	b5800044 	addi	r22,r22,1
 40248d8:	04c00044 	movi	r19,1
 40248dc:	10800044 	addi	r2,r2,1
 40248e0:	d8800815 	stw	r2,32(sp)
 40248e4:	003f0106 	br	40244ec <__flash_rwdata_start+0xffff3c28>
 40248e8:	d9800f17 	ldw	r6,60(sp)
 40248ec:	30016826 	beq	r6,zero,4024e90 <_dtoa_r+0x1518>
 40248f0:	10810cc4 	addi	r2,r2,1075
 40248f4:	dd400917 	ldw	r21,36(sp)
 40248f8:	dd000817 	ldw	r20,32(sp)
 40248fc:	003e9906 	br	4024364 <__flash_rwdata_start+0xffff3aa0>
 4024900:	9011883a 	mov	r8,r18
 4024904:	4007883a 	mov	r3,r8
 4024908:	e02d883a 	mov	r22,fp
 402490c:	0080100e 	bge	zero,r2,4024950 <_dtoa_r+0xfd8>
 4024910:	01800044 	movi	r6,1
 4024914:	8009883a 	mov	r4,r16
 4024918:	e00b883a 	mov	r5,fp
 402491c:	da001515 	stw	r8,84(sp)
 4024920:	da001715 	stw	r8,92(sp)
 4024924:	40277340 	call	4027734 <__lshift>
 4024928:	1009883a 	mov	r4,r2
 402492c:	a80b883a 	mov	r5,r21
 4024930:	102d883a 	mov	r22,r2
 4024934:	40278840 	call	4027884 <__mcmp>
 4024938:	d8c01517 	ldw	r3,84(sp)
 402493c:	da001717 	ldw	r8,92(sp)
 4024940:	0081a50e 	bge	zero,r2,4024fd8 <_dtoa_r+0x1660>
 4024944:	00800e44 	movi	r2,57
 4024948:	40817b26 	beq	r8,r2,4024f38 <_dtoa_r+0x15c0>
 402494c:	40c00044 	addi	r3,r8,1
 4024950:	8825883a 	mov	r18,r17
 4024954:	9dc00044 	addi	r23,r19,1
 4024958:	98c00005 	stb	r3,0(r19)
 402495c:	a023883a 	mov	r17,r20
 4024960:	b039883a 	mov	fp,r22
 4024964:	003f3906 	br	402464c <__flash_rwdata_start+0xffff3d88>
 4024968:	00800e44 	movi	r2,57
 402496c:	9011883a 	mov	r8,r18
 4024970:	90817226 	beq	r18,r2,4024f3c <_dtoa_r+0x15c4>
 4024974:	0580010e 	bge	zero,r22,402497c <_dtoa_r+0x1004>
 4024978:	ba000c44 	addi	r8,r23,49
 402497c:	8825883a 	mov	r18,r17
 4024980:	9dc00044 	addi	r23,r19,1
 4024984:	9a000005 	stb	r8,0(r19)
 4024988:	a023883a 	mov	r17,r20
 402498c:	003f2f06 	br	402464c <__flash_rwdata_start+0xffff3d88>
 4024990:	880b883a 	mov	r5,r17
 4024994:	8009883a 	mov	r4,r16
 4024998:	01800284 	movi	r6,10
 402499c:	000f883a 	mov	r7,zero
 40249a0:	4026fc40 	call	4026fc4 <__multadd>
 40249a4:	1023883a 	mov	r17,r2
 40249a8:	1029883a 	mov	r20,r2
 40249ac:	003f9706 	br	402480c <__flash_rwdata_start+0xffff3f48>
 40249b0:	8009883a 	mov	r4,r16
 40249b4:	180b883a 	mov	r5,r3
 40249b8:	4026f9c0 	call	4026f9c <_Bfree>
 40249bc:	00800044 	movi	r2,1
 40249c0:	003f7306 	br	4024790 <__flash_rwdata_start+0xffff3ecc>
 40249c4:	e009883a 	mov	r4,fp
 40249c8:	a80b883a 	mov	r5,r21
 40249cc:	40278840 	call	4027884 <__mcmp>
 40249d0:	103ee60e 	bge	r2,zero,402456c <__flash_rwdata_start+0xffff3ca8>
 40249d4:	8009883a 	mov	r4,r16
 40249d8:	e00b883a 	mov	r5,fp
 40249dc:	01800284 	movi	r6,10
 40249e0:	000f883a 	mov	r7,zero
 40249e4:	4026fc40 	call	4026fc4 <__multadd>
 40249e8:	d9000517 	ldw	r4,20(sp)
 40249ec:	d9800b17 	ldw	r6,44(sp)
 40249f0:	1039883a 	mov	fp,r2
 40249f4:	213fffc4 	addi	r4,r4,-1
 40249f8:	d9000515 	stw	r4,20(sp)
 40249fc:	303f2d1e 	bne	r6,zero,40246b4 <__flash_rwdata_start+0xffff3df0>
 4024a00:	d9000c17 	ldw	r4,48(sp)
 4024a04:	0101780e 	bge	zero,r4,4024fe8 <_dtoa_r+0x1670>
 4024a08:	d9000615 	stw	r4,24(sp)
 4024a0c:	003edb06 	br	402457c <__flash_rwdata_start+0xffff3cb8>
 4024a10:	00800084 	movi	r2,2
 4024a14:	30818e1e 	bne	r6,r2,4025050 <_dtoa_r+0x16d8>
 4024a18:	d8000b15 	stw	zero,44(sp)
 4024a1c:	003f8106 	br	4024824 <__flash_rwdata_start+0xffff3f60>
 4024a20:	d8800717 	ldw	r2,28(sp)
 4024a24:	003c0306 	br	4023a34 <__flash_rwdata_start+0xffff3170>
 4024a28:	d9000317 	ldw	r4,12(sp)
 4024a2c:	00800084 	movi	r2,2
 4024a30:	113ed00e 	bge	r2,r4,4024574 <__flash_rwdata_start+0xffff3cb0>
 4024a34:	d8c00617 	ldw	r3,24(sp)
 4024a38:	183f901e 	bne	r3,zero,402487c <__flash_rwdata_start+0xffff3fb8>
 4024a3c:	a80b883a 	mov	r5,r21
 4024a40:	8009883a 	mov	r4,r16
 4024a44:	01800144 	movi	r6,5
 4024a48:	000f883a 	mov	r7,zero
 4024a4c:	4026fc40 	call	4026fc4 <__multadd>
 4024a50:	e009883a 	mov	r4,fp
 4024a54:	100b883a 	mov	r5,r2
 4024a58:	102b883a 	mov	r21,r2
 4024a5c:	40278840 	call	4027884 <__mcmp>
 4024a60:	00bf860e 	bge	zero,r2,402487c <__flash_rwdata_start+0xffff3fb8>
 4024a64:	d9800717 	ldw	r6,28(sp)
 4024a68:	00800c44 	movi	r2,49
 4024a6c:	30800005 	stb	r2,0(r6)
 4024a70:	d8800517 	ldw	r2,20(sp)
 4024a74:	35c00044 	addi	r23,r6,1
 4024a78:	10800044 	addi	r2,r2,1
 4024a7c:	d8800515 	stw	r2,20(sp)
 4024a80:	003f8206 	br	402488c <__flash_rwdata_start+0xffff3fc8>
 4024a84:	903e981e 	bne	r18,zero,40244e8 <__flash_rwdata_start+0xffff3c24>
 4024a88:	003f8b06 	br	40248b8 <__flash_rwdata_start+0xffff3ff4>
 4024a8c:	d9800517 	ldw	r6,20(sp)
 4024a90:	d8c00717 	ldw	r3,28(sp)
 4024a94:	00800c44 	movi	r2,49
 4024a98:	31800044 	addi	r6,r6,1
 4024a9c:	d9800515 	stw	r6,20(sp)
 4024aa0:	18800005 	stb	r2,0(r3)
 4024aa4:	003ee906 	br	402464c <__flash_rwdata_start+0xffff3d88>
 4024aa8:	dc000317 	ldw	r16,12(sp)
 4024aac:	003d6006 	br	4024030 <__flash_rwdata_start+0xffff376c>
 4024ab0:	8809883a 	mov	r4,r17
 4024ab4:	402da480 	call	402da48 <__floatsidf>
 4024ab8:	a009883a 	mov	r4,r20
 4024abc:	a80b883a 	mov	r5,r21
 4024ac0:	100d883a 	mov	r6,r2
 4024ac4:	180f883a 	mov	r7,r3
 4024ac8:	402c8840 	call	402c884 <__muldf3>
 4024acc:	1009883a 	mov	r4,r2
 4024ad0:	180b883a 	mov	r5,r3
 4024ad4:	000d883a 	mov	r6,zero
 4024ad8:	01d00734 	movhi	r7,16412
 4024adc:	402b4240 	call	402b424 <__adddf3>
 4024ae0:	1023883a 	mov	r17,r2
 4024ae4:	00bf3034 	movhi	r2,64704
 4024ae8:	1885883a 	add	r2,r3,r2
 4024aec:	d8800e15 	stw	r2,56(sp)
 4024af0:	a009883a 	mov	r4,r20
 4024af4:	a80b883a 	mov	r5,r21
 4024af8:	000d883a 	mov	r6,zero
 4024afc:	01d00534 	movhi	r7,16404
 4024b00:	402d0f00 	call	402d0f0 <__subdf3>
 4024b04:	d9c00e17 	ldw	r7,56(sp)
 4024b08:	1009883a 	mov	r4,r2
 4024b0c:	180b883a 	mov	r5,r3
 4024b10:	880d883a 	mov	r6,r17
 4024b14:	102b883a 	mov	r21,r2
 4024b18:	1829883a 	mov	r20,r3
 4024b1c:	402c6c40 	call	402c6c4 <__gedf2>
 4024b20:	00807716 	blt	zero,r2,4024d00 <_dtoa_r+0x1388>
 4024b24:	d8800e17 	ldw	r2,56(sp)
 4024b28:	a809883a 	mov	r4,r21
 4024b2c:	a00b883a 	mov	r5,r20
 4024b30:	11e0003c 	xorhi	r7,r2,32768
 4024b34:	880d883a 	mov	r6,r17
 4024b38:	402c7a40 	call	402c7a4 <__ledf2>
 4024b3c:	103d6b0e 	bge	r2,zero,40240ec <__flash_rwdata_start+0xffff3828>
 4024b40:	002b883a 	mov	r21,zero
 4024b44:	0023883a 	mov	r17,zero
 4024b48:	003f4c06 	br	402487c <__flash_rwdata_start+0xffff3fb8>
 4024b4c:	d9800917 	ldw	r6,36(sp)
 4024b50:	e00b883a 	mov	r5,fp
 4024b54:	8009883a 	mov	r4,r16
 4024b58:	40275f40 	call	40275f4 <__pow5mult>
 4024b5c:	1039883a 	mov	fp,r2
 4024b60:	003e2706 	br	4024400 <__flash_rwdata_start+0xffff3b3c>
 4024b64:	d8000b15 	stw	zero,44(sp)
 4024b68:	003c4906 	br	4023c90 <__flash_rwdata_start+0xffff33cc>
 4024b6c:	d9000917 	ldw	r4,36(sp)
 4024b70:	d9800a17 	ldw	r6,40(sp)
 4024b74:	dd400915 	stw	r21,36(sp)
 4024b78:	a905c83a 	sub	r2,r21,r4
 4024b7c:	308d883a 	add	r6,r6,r2
 4024b80:	d9800a15 	stw	r6,40(sp)
 4024b84:	002b883a 	mov	r21,zero
 4024b88:	003df206 	br	4024354 <__flash_rwdata_start+0xffff3a90>
 4024b8c:	dc800e15 	stw	r18,56(sp)
 4024b90:	982b883a 	mov	r21,r19
 4024b94:	04400084 	movi	r17,2
 4024b98:	003c7406 	br	4023d6c <__flash_rwdata_start+0xffff34a8>
 4024b9c:	04400044 	movi	r17,1
 4024ba0:	dc400c15 	stw	r17,48(sp)
 4024ba4:	dc400615 	stw	r17,24(sp)
 4024ba8:	dc402215 	stw	r17,136(sp)
 4024bac:	80001115 	stw	zero,68(r16)
 4024bb0:	000b883a 	mov	r5,zero
 4024bb4:	003c4a06 	br	4023ce0 <__flash_rwdata_start+0xffff341c>
 4024bb8:	3023883a 	mov	r17,r6
 4024bbc:	003ffb06 	br	4024bac <__flash_rwdata_start+0xffff42e8>
 4024bc0:	1000021e 	bne	r2,zero,4024bcc <_dtoa_r+0x1254>
 4024bc4:	4200004c 	andi	r8,r8,1
 4024bc8:	403e8f1e 	bne	r8,zero,4024608 <__flash_rwdata_start+0xffff3d44>
 4024bcc:	01000c04 	movi	r4,48
 4024bd0:	00000106 	br	4024bd8 <_dtoa_r+0x1260>
 4024bd4:	102f883a 	mov	r23,r2
 4024bd8:	b8bfffc4 	addi	r2,r23,-1
 4024bdc:	10c00007 	ldb	r3,0(r2)
 4024be0:	193ffc26 	beq	r3,r4,4024bd4 <__flash_rwdata_start+0xffff4310>
 4024be4:	003e9906 	br	402464c <__flash_rwdata_start+0xffff3d88>
 4024be8:	d9000517 	ldw	r4,20(sp)
 4024bec:	012fc83a 	sub	r23,zero,r4
 4024bf0:	b800ad26 	beq	r23,zero,4024ea8 <_dtoa_r+0x1530>
 4024bf4:	b88003cc 	andi	r2,r23,15
 4024bf8:	100490fa 	slli	r2,r2,3
 4024bfc:	00c00034 	movhi	r3,0
 4024c00:	18c04e04 	addi	r3,r3,312
 4024c04:	1885883a 	add	r2,r3,r2
 4024c08:	11800017 	ldw	r6,0(r2)
 4024c0c:	11c00117 	ldw	r7,4(r2)
 4024c10:	b82fd13a 	srai	r23,r23,4
 4024c14:	9009883a 	mov	r4,r18
 4024c18:	980b883a 	mov	r5,r19
 4024c1c:	402c8840 	call	402c884 <__muldf3>
 4024c20:	1029883a 	mov	r20,r2
 4024c24:	182b883a 	mov	r21,r3
 4024c28:	b800f426 	beq	r23,zero,4024ffc <_dtoa_r+0x1684>
 4024c2c:	02000034 	movhi	r8,0
 4024c30:	42004404 	addi	r8,r8,272
 4024c34:	8029883a 	mov	r20,r16
 4024c38:	04400084 	movi	r17,2
 4024c3c:	4021883a 	mov	r16,r8
 4024c40:	b980004c 	andi	r6,r23,1
 4024c44:	1009883a 	mov	r4,r2
 4024c48:	b82fd07a 	srai	r23,r23,1
 4024c4c:	180b883a 	mov	r5,r3
 4024c50:	30000426 	beq	r6,zero,4024c64 <_dtoa_r+0x12ec>
 4024c54:	81800017 	ldw	r6,0(r16)
 4024c58:	81c00117 	ldw	r7,4(r16)
 4024c5c:	8c400044 	addi	r17,r17,1
 4024c60:	402c8840 	call	402c884 <__muldf3>
 4024c64:	84000204 	addi	r16,r16,8
 4024c68:	b83ff51e 	bne	r23,zero,4024c40 <__flash_rwdata_start+0xffff437c>
 4024c6c:	a021883a 	mov	r16,r20
 4024c70:	182b883a 	mov	r21,r3
 4024c74:	1029883a 	mov	r20,r2
 4024c78:	003c5506 	br	4023dd0 <__flash_rwdata_start+0xffff350c>
 4024c7c:	d9800517 	ldw	r6,20(sp)
 4024c80:	d9000717 	ldw	r4,28(sp)
 4024c84:	00c00c04 	movi	r3,48
 4024c88:	31800044 	addi	r6,r6,1
 4024c8c:	d9800515 	stw	r6,20(sp)
 4024c90:	20c00005 	stb	r3,0(r4)
 4024c94:	02000c44 	movi	r8,49
 4024c98:	003da206 	br	4024324 <__flash_rwdata_start+0xffff3a60>
 4024c9c:	89400117 	ldw	r5,4(r17)
 4024ca0:	8009883a 	mov	r4,r16
 4024ca4:	4026ef40 	call	4026ef4 <_Balloc>
 4024ca8:	89800417 	ldw	r6,16(r17)
 4024cac:	11000304 	addi	r4,r2,12
 4024cb0:	89400304 	addi	r5,r17,12
 4024cb4:	31800084 	addi	r6,r6,2
 4024cb8:	318d883a 	add	r6,r6,r6
 4024cbc:	318d883a 	add	r6,r6,r6
 4024cc0:	1027883a 	mov	r19,r2
 4024cc4:	40211340 	call	4021134 <memcpy>
 4024cc8:	8009883a 	mov	r4,r16
 4024ccc:	980b883a 	mov	r5,r19
 4024cd0:	01800044 	movi	r6,1
 4024cd4:	40277340 	call	4027734 <__lshift>
 4024cd8:	1029883a 	mov	r20,r2
 4024cdc:	003e8606 	br	40246f8 <__flash_rwdata_start+0xffff3e34>
 4024ce0:	00800e44 	movi	r2,57
 4024ce4:	90809526 	beq	r18,r2,4024f3c <_dtoa_r+0x15c4>
 4024ce8:	92000044 	addi	r8,r18,1
 4024cec:	003f2306 	br	402497c <__flash_rwdata_start+0xffff40b8>
 4024cf0:	9011883a 	mov	r8,r18
 4024cf4:	8825883a 	mov	r18,r17
 4024cf8:	a023883a 	mov	r17,r20
 4024cfc:	003e3706 	br	40245dc <__flash_rwdata_start+0xffff3d18>
 4024d00:	002b883a 	mov	r21,zero
 4024d04:	0023883a 	mov	r17,zero
 4024d08:	003f5606 	br	4024a64 <__flash_rwdata_start+0xffff41a0>
 4024d0c:	51bfffc4 	addi	r6,r10,-1
 4024d10:	300490fa 	slli	r2,r6,3
 4024d14:	00c00034 	movhi	r3,0
 4024d18:	18c04e04 	addi	r3,r3,312
 4024d1c:	1885883a 	add	r2,r3,r2
 4024d20:	d9c00e17 	ldw	r7,56(sp)
 4024d24:	11000017 	ldw	r4,0(r2)
 4024d28:	11400117 	ldw	r5,4(r2)
 4024d2c:	d8800717 	ldw	r2,28(sp)
 4024d30:	d9801015 	stw	r6,64(sp)
 4024d34:	880d883a 	mov	r6,r17
 4024d38:	da801615 	stw	r10,88(sp)
 4024d3c:	15c00044 	addi	r23,r2,1
 4024d40:	402c8840 	call	402c884 <__muldf3>
 4024d44:	a80b883a 	mov	r5,r21
 4024d48:	a009883a 	mov	r4,r20
 4024d4c:	d8c01115 	stw	r3,68(sp)
 4024d50:	d8800e15 	stw	r2,56(sp)
 4024d54:	402d9c00 	call	402d9c0 <__fixdfsi>
 4024d58:	1009883a 	mov	r4,r2
 4024d5c:	1023883a 	mov	r17,r2
 4024d60:	402da480 	call	402da48 <__floatsidf>
 4024d64:	a009883a 	mov	r4,r20
 4024d68:	a80b883a 	mov	r5,r21
 4024d6c:	100d883a 	mov	r6,r2
 4024d70:	180f883a 	mov	r7,r3
 4024d74:	402d0f00 	call	402d0f0 <__subdf3>
 4024d78:	1813883a 	mov	r9,r3
 4024d7c:	d8c00717 	ldw	r3,28(sp)
 4024d80:	8c400c04 	addi	r17,r17,48
 4024d84:	1011883a 	mov	r8,r2
 4024d88:	1c400005 	stb	r17,0(r3)
 4024d8c:	da801617 	ldw	r10,88(sp)
 4024d90:	00800044 	movi	r2,1
 4024d94:	50802326 	beq	r10,r2,4024e24 <_dtoa_r+0x14ac>
 4024d98:	d8800717 	ldw	r2,28(sp)
 4024d9c:	b82b883a 	mov	r21,r23
 4024da0:	dc001315 	stw	r16,76(sp)
 4024da4:	12a9883a 	add	r20,r2,r10
 4024da8:	4807883a 	mov	r3,r9
 4024dac:	4005883a 	mov	r2,r8
 4024db0:	dc801415 	stw	r18,80(sp)
 4024db4:	000d883a 	mov	r6,zero
 4024db8:	01d00934 	movhi	r7,16420
 4024dbc:	1009883a 	mov	r4,r2
 4024dc0:	180b883a 	mov	r5,r3
 4024dc4:	402c8840 	call	402c884 <__muldf3>
 4024dc8:	180b883a 	mov	r5,r3
 4024dcc:	1009883a 	mov	r4,r2
 4024dd0:	1821883a 	mov	r16,r3
 4024dd4:	1025883a 	mov	r18,r2
 4024dd8:	402d9c00 	call	402d9c0 <__fixdfsi>
 4024ddc:	1009883a 	mov	r4,r2
 4024de0:	1023883a 	mov	r17,r2
 4024de4:	402da480 	call	402da48 <__floatsidf>
 4024de8:	9009883a 	mov	r4,r18
 4024dec:	800b883a 	mov	r5,r16
 4024df0:	100d883a 	mov	r6,r2
 4024df4:	180f883a 	mov	r7,r3
 4024df8:	8c400c04 	addi	r17,r17,48
 4024dfc:	402d0f00 	call	402d0f0 <__subdf3>
 4024e00:	ad400044 	addi	r21,r21,1
 4024e04:	ac7fffc5 	stb	r17,-1(r21)
 4024e08:	ad3fea1e 	bne	r21,r20,4024db4 <__flash_rwdata_start+0xffff44f0>
 4024e0c:	1813883a 	mov	r9,r3
 4024e10:	d8c01017 	ldw	r3,64(sp)
 4024e14:	dc001317 	ldw	r16,76(sp)
 4024e18:	dc801417 	ldw	r18,80(sp)
 4024e1c:	1011883a 	mov	r8,r2
 4024e20:	b8ef883a 	add	r23,r23,r3
 4024e24:	d9000e17 	ldw	r4,56(sp)
 4024e28:	d9401117 	ldw	r5,68(sp)
 4024e2c:	000d883a 	mov	r6,zero
 4024e30:	01cff834 	movhi	r7,16352
 4024e34:	da001715 	stw	r8,92(sp)
 4024e38:	da401515 	stw	r9,84(sp)
 4024e3c:	402b4240 	call	402b424 <__adddf3>
 4024e40:	da001717 	ldw	r8,92(sp)
 4024e44:	da401517 	ldw	r9,84(sp)
 4024e48:	1009883a 	mov	r4,r2
 4024e4c:	400d883a 	mov	r6,r8
 4024e50:	480f883a 	mov	r7,r9
 4024e54:	180b883a 	mov	r5,r3
 4024e58:	402c7a40 	call	402c7a4 <__ledf2>
 4024e5c:	da001717 	ldw	r8,92(sp)
 4024e60:	da401517 	ldw	r9,84(sp)
 4024e64:	10003b0e 	bge	r2,zero,4024f54 <_dtoa_r+0x15dc>
 4024e68:	d9001217 	ldw	r4,72(sp)
 4024e6c:	bd7fffc3 	ldbu	r21,-1(r23)
 4024e70:	d9000515 	stw	r4,20(sp)
 4024e74:	003d1c06 	br	40242e8 <__flash_rwdata_start+0xffff3a24>
 4024e78:	d8c00817 	ldw	r3,32(sp)
 4024e7c:	18a9c83a 	sub	r20,r3,r2
 4024e80:	0005883a 	mov	r2,zero
 4024e84:	003d3706 	br	4024364 <__flash_rwdata_start+0xffff3aa0>
 4024e88:	00800044 	movi	r2,1
 4024e8c:	003dd006 	br	40245d0 <__flash_rwdata_start+0xffff3d0c>
 4024e90:	d8c00217 	ldw	r3,8(sp)
 4024e94:	00800d84 	movi	r2,54
 4024e98:	dd400917 	ldw	r21,36(sp)
 4024e9c:	10c5c83a 	sub	r2,r2,r3
 4024ea0:	dd000817 	ldw	r20,32(sp)
 4024ea4:	003d2f06 	br	4024364 <__flash_rwdata_start+0xffff3aa0>
 4024ea8:	9029883a 	mov	r20,r18
 4024eac:	982b883a 	mov	r21,r19
 4024eb0:	04400084 	movi	r17,2
 4024eb4:	003bc606 	br	4023dd0 <__flash_rwdata_start+0xffff350c>
 4024eb8:	d8800617 	ldw	r2,24(sp)
 4024ebc:	103efc26 	beq	r2,zero,4024ab0 <__flash_rwdata_start+0xffff41ec>
 4024ec0:	d8c00c17 	ldw	r3,48(sp)
 4024ec4:	00fc890e 	bge	zero,r3,40240ec <__flash_rwdata_start+0xffff3828>
 4024ec8:	a80b883a 	mov	r5,r21
 4024ecc:	a009883a 	mov	r4,r20
 4024ed0:	000d883a 	mov	r6,zero
 4024ed4:	01d00934 	movhi	r7,16420
 4024ed8:	402c8840 	call	402c884 <__muldf3>
 4024edc:	89000044 	addi	r4,r17,1
 4024ee0:	1029883a 	mov	r20,r2
 4024ee4:	182b883a 	mov	r21,r3
 4024ee8:	402da480 	call	402da48 <__floatsidf>
 4024eec:	a009883a 	mov	r4,r20
 4024ef0:	a80b883a 	mov	r5,r21
 4024ef4:	100d883a 	mov	r6,r2
 4024ef8:	180f883a 	mov	r7,r3
 4024efc:	402c8840 	call	402c884 <__muldf3>
 4024f00:	1009883a 	mov	r4,r2
 4024f04:	180b883a 	mov	r5,r3
 4024f08:	000d883a 	mov	r6,zero
 4024f0c:	01d00734 	movhi	r7,16412
 4024f10:	402b4240 	call	402b424 <__adddf3>
 4024f14:	d9000517 	ldw	r4,20(sp)
 4024f18:	1023883a 	mov	r17,r2
 4024f1c:	00bf3034 	movhi	r2,64704
 4024f20:	213fffc4 	addi	r4,r4,-1
 4024f24:	1885883a 	add	r2,r3,r2
 4024f28:	d9001215 	stw	r4,72(sp)
 4024f2c:	d8800e15 	stw	r2,56(sp)
 4024f30:	da800c17 	ldw	r10,48(sp)
 4024f34:	003bc306 	br	4023e44 <__flash_rwdata_start+0xffff3580>
 4024f38:	b039883a 	mov	fp,r22
 4024f3c:	01000e44 	movi	r4,57
 4024f40:	8825883a 	mov	r18,r17
 4024f44:	9dc00044 	addi	r23,r19,1
 4024f48:	99000005 	stb	r4,0(r19)
 4024f4c:	a023883a 	mov	r17,r20
 4024f50:	003dae06 	br	402460c <__flash_rwdata_start+0xffff3d48>
 4024f54:	d9800e17 	ldw	r6,56(sp)
 4024f58:	d9c01117 	ldw	r7,68(sp)
 4024f5c:	0009883a 	mov	r4,zero
 4024f60:	014ff834 	movhi	r5,16352
 4024f64:	da001715 	stw	r8,92(sp)
 4024f68:	da401515 	stw	r9,84(sp)
 4024f6c:	402d0f00 	call	402d0f0 <__subdf3>
 4024f70:	da001717 	ldw	r8,92(sp)
 4024f74:	da401517 	ldw	r9,84(sp)
 4024f78:	1009883a 	mov	r4,r2
 4024f7c:	180b883a 	mov	r5,r3
 4024f80:	400d883a 	mov	r6,r8
 4024f84:	480f883a 	mov	r7,r9
 4024f88:	402c6c40 	call	402c6c4 <__gedf2>
 4024f8c:	00bc570e 	bge	zero,r2,40240ec <__flash_rwdata_start+0xffff3828>
 4024f90:	01000c04 	movi	r4,48
 4024f94:	00000106 	br	4024f9c <_dtoa_r+0x1624>
 4024f98:	102f883a 	mov	r23,r2
 4024f9c:	b8bfffc4 	addi	r2,r23,-1
 4024fa0:	10c00007 	ldb	r3,0(r2)
 4024fa4:	193ffc26 	beq	r3,r4,4024f98 <__flash_rwdata_start+0xffff46d4>
 4024fa8:	d9801217 	ldw	r6,72(sp)
 4024fac:	d9800515 	stw	r6,20(sp)
 4024fb0:	003c1f06 	br	4024030 <__flash_rwdata_start+0xffff376c>
 4024fb4:	d8801217 	ldw	r2,72(sp)
 4024fb8:	dc001117 	ldw	r16,68(sp)
 4024fbc:	d8800515 	stw	r2,20(sp)
 4024fc0:	003cc906 	br	40242e8 <__flash_rwdata_start+0xffff3a24>
 4024fc4:	dd801317 	ldw	r22,76(sp)
 4024fc8:	dc001117 	ldw	r16,68(sp)
 4024fcc:	dcc01417 	ldw	r19,80(sp)
 4024fd0:	dc801017 	ldw	r18,64(sp)
 4024fd4:	003c4506 	br	40240ec <__flash_rwdata_start+0xffff3828>
 4024fd8:	103e5d1e 	bne	r2,zero,4024950 <__flash_rwdata_start+0xffff408c>
 4024fdc:	4080004c 	andi	r2,r8,1
 4024fe0:	103e5b26 	beq	r2,zero,4024950 <__flash_rwdata_start+0xffff408c>
 4024fe4:	003e5706 	br	4024944 <__flash_rwdata_start+0xffff4080>
 4024fe8:	d8c00317 	ldw	r3,12(sp)
 4024fec:	00800084 	movi	r2,2
 4024ff0:	10c00a16 	blt	r2,r3,402501c <_dtoa_r+0x16a4>
 4024ff4:	d9000c17 	ldw	r4,48(sp)
 4024ff8:	003e8306 	br	4024a08 <__flash_rwdata_start+0xffff4144>
 4024ffc:	04400084 	movi	r17,2
 4025000:	003b7306 	br	4023dd0 <__flash_rwdata_start+0xffff350c>
 4025004:	d9801217 	ldw	r6,72(sp)
 4025008:	d9800515 	stw	r6,20(sp)
 402500c:	003cb606 	br	40242e8 <__flash_rwdata_start+0xffff3a24>
 4025010:	d9001217 	ldw	r4,72(sp)
 4025014:	d9000515 	stw	r4,20(sp)
 4025018:	003c0506 	br	4024030 <__flash_rwdata_start+0xffff376c>
 402501c:	d9800c17 	ldw	r6,48(sp)
 4025020:	d9800615 	stw	r6,24(sp)
 4025024:	003e8306 	br	4024a34 <__flash_rwdata_start+0xffff4170>
 4025028:	d9800317 	ldw	r6,12(sp)
 402502c:	00800084 	movi	r2,2
 4025030:	11800216 	blt	r2,r6,402503c <_dtoa_r+0x16c4>
 4025034:	d8800c17 	ldw	r2,48(sp)
 4025038:	003da606 	br	40246d4 <__flash_rwdata_start+0xffff3e10>
 402503c:	d8800c17 	ldw	r2,48(sp)
 4025040:	d8800615 	stw	r2,24(sp)
 4025044:	003e7b06 	br	4024a34 <__flash_rwdata_start+0xffff4170>
 4025048:	05000044 	movi	r20,1
 402504c:	003b0506 	br	4023c64 <__flash_rwdata_start+0xffff33a0>
 4025050:	8009883a 	mov	r4,r16
 4025054:	80001115 	stw	zero,68(r16)
 4025058:	000b883a 	mov	r5,zero
 402505c:	4026ef40 	call	4026ef4 <_Balloc>
 4025060:	d8800715 	stw	r2,28(sp)
 4025064:	d8c00717 	ldw	r3,28(sp)
 4025068:	00bfffc4 	movi	r2,-1
 402506c:	01000044 	movi	r4,1
 4025070:	d8800c15 	stw	r2,48(sp)
 4025074:	80c01015 	stw	r3,64(r16)
 4025078:	d9000b15 	stw	r4,44(sp)
 402507c:	d8800615 	stw	r2,24(sp)
 4025080:	d8002215 	stw	zero,136(sp)
 4025084:	003c1906 	br	40240ec <__flash_rwdata_start+0xffff3828>
 4025088:	193d2926 	beq	r3,r4,4024530 <__flash_rwdata_start+0xffff3c6c>
 402508c:	00c00f04 	movi	r3,60
 4025090:	1885c83a 	sub	r2,r3,r2
 4025094:	003d7b06 	br	4024684 <__flash_rwdata_start+0xffff3dc0>
 4025098:	000b883a 	mov	r5,zero
 402509c:	003b1006 	br	4023ce0 <__flash_rwdata_start+0xffff341c>

040250a0 <__sflush_r>:
 40250a0:	2880030b 	ldhu	r2,12(r5)
 40250a4:	defffb04 	addi	sp,sp,-20
 40250a8:	dcc00315 	stw	r19,12(sp)
 40250ac:	dc400115 	stw	r17,4(sp)
 40250b0:	dfc00415 	stw	ra,16(sp)
 40250b4:	dc800215 	stw	r18,8(sp)
 40250b8:	dc000015 	stw	r16,0(sp)
 40250bc:	10c0020c 	andi	r3,r2,8
 40250c0:	2823883a 	mov	r17,r5
 40250c4:	2027883a 	mov	r19,r4
 40250c8:	1800311e 	bne	r3,zero,4025190 <__sflush_r+0xf0>
 40250cc:	28c00117 	ldw	r3,4(r5)
 40250d0:	10820014 	ori	r2,r2,2048
 40250d4:	2880030d 	sth	r2,12(r5)
 40250d8:	00c04b0e 	bge	zero,r3,4025208 <__sflush_r+0x168>
 40250dc:	8a000a17 	ldw	r8,40(r17)
 40250e0:	40002326 	beq	r8,zero,4025170 <__sflush_r+0xd0>
 40250e4:	9c000017 	ldw	r16,0(r19)
 40250e8:	10c4000c 	andi	r3,r2,4096
 40250ec:	98000015 	stw	zero,0(r19)
 40250f0:	18004826 	beq	r3,zero,4025214 <__sflush_r+0x174>
 40250f4:	89801417 	ldw	r6,80(r17)
 40250f8:	10c0010c 	andi	r3,r2,4
 40250fc:	18000626 	beq	r3,zero,4025118 <__sflush_r+0x78>
 4025100:	88c00117 	ldw	r3,4(r17)
 4025104:	88800c17 	ldw	r2,48(r17)
 4025108:	30cdc83a 	sub	r6,r6,r3
 402510c:	10000226 	beq	r2,zero,4025118 <__sflush_r+0x78>
 4025110:	88800f17 	ldw	r2,60(r17)
 4025114:	308dc83a 	sub	r6,r6,r2
 4025118:	89400717 	ldw	r5,28(r17)
 402511c:	9809883a 	mov	r4,r19
 4025120:	000f883a 	mov	r7,zero
 4025124:	403ee83a 	callr	r8
 4025128:	00ffffc4 	movi	r3,-1
 402512c:	10c04426 	beq	r2,r3,4025240 <__sflush_r+0x1a0>
 4025130:	88c0030b 	ldhu	r3,12(r17)
 4025134:	89000417 	ldw	r4,16(r17)
 4025138:	88000115 	stw	zero,4(r17)
 402513c:	197dffcc 	andi	r5,r3,63487
 4025140:	8940030d 	sth	r5,12(r17)
 4025144:	89000015 	stw	r4,0(r17)
 4025148:	18c4000c 	andi	r3,r3,4096
 402514c:	18002c1e 	bne	r3,zero,4025200 <__sflush_r+0x160>
 4025150:	89400c17 	ldw	r5,48(r17)
 4025154:	9c000015 	stw	r16,0(r19)
 4025158:	28000526 	beq	r5,zero,4025170 <__sflush_r+0xd0>
 402515c:	88801004 	addi	r2,r17,64
 4025160:	28800226 	beq	r5,r2,402516c <__sflush_r+0xcc>
 4025164:	9809883a 	mov	r4,r19
 4025168:	40258080 	call	4025808 <_free_r>
 402516c:	88000c15 	stw	zero,48(r17)
 4025170:	0005883a 	mov	r2,zero
 4025174:	dfc00417 	ldw	ra,16(sp)
 4025178:	dcc00317 	ldw	r19,12(sp)
 402517c:	dc800217 	ldw	r18,8(sp)
 4025180:	dc400117 	ldw	r17,4(sp)
 4025184:	dc000017 	ldw	r16,0(sp)
 4025188:	dec00504 	addi	sp,sp,20
 402518c:	f800283a 	ret
 4025190:	2c800417 	ldw	r18,16(r5)
 4025194:	903ff626 	beq	r18,zero,4025170 <__flash_rwdata_start+0xffff48ac>
 4025198:	2c000017 	ldw	r16,0(r5)
 402519c:	108000cc 	andi	r2,r2,3
 40251a0:	2c800015 	stw	r18,0(r5)
 40251a4:	84a1c83a 	sub	r16,r16,r18
 40251a8:	1000131e 	bne	r2,zero,40251f8 <__sflush_r+0x158>
 40251ac:	28800517 	ldw	r2,20(r5)
 40251b0:	88800215 	stw	r2,8(r17)
 40251b4:	04000316 	blt	zero,r16,40251c4 <__sflush_r+0x124>
 40251b8:	003fed06 	br	4025170 <__flash_rwdata_start+0xffff48ac>
 40251bc:	90a5883a 	add	r18,r18,r2
 40251c0:	043feb0e 	bge	zero,r16,4025170 <__flash_rwdata_start+0xffff48ac>
 40251c4:	88800917 	ldw	r2,36(r17)
 40251c8:	89400717 	ldw	r5,28(r17)
 40251cc:	800f883a 	mov	r7,r16
 40251d0:	900d883a 	mov	r6,r18
 40251d4:	9809883a 	mov	r4,r19
 40251d8:	103ee83a 	callr	r2
 40251dc:	80a1c83a 	sub	r16,r16,r2
 40251e0:	00bff616 	blt	zero,r2,40251bc <__flash_rwdata_start+0xffff48f8>
 40251e4:	88c0030b 	ldhu	r3,12(r17)
 40251e8:	00bfffc4 	movi	r2,-1
 40251ec:	18c01014 	ori	r3,r3,64
 40251f0:	88c0030d 	sth	r3,12(r17)
 40251f4:	003fdf06 	br	4025174 <__flash_rwdata_start+0xffff48b0>
 40251f8:	0005883a 	mov	r2,zero
 40251fc:	003fec06 	br	40251b0 <__flash_rwdata_start+0xffff48ec>
 4025200:	88801415 	stw	r2,80(r17)
 4025204:	003fd206 	br	4025150 <__flash_rwdata_start+0xffff488c>
 4025208:	28c00f17 	ldw	r3,60(r5)
 402520c:	00ffb316 	blt	zero,r3,40250dc <__flash_rwdata_start+0xffff4818>
 4025210:	003fd706 	br	4025170 <__flash_rwdata_start+0xffff48ac>
 4025214:	89400717 	ldw	r5,28(r17)
 4025218:	000d883a 	mov	r6,zero
 402521c:	9809883a 	mov	r4,r19
 4025220:	01c00044 	movi	r7,1
 4025224:	403ee83a 	callr	r8
 4025228:	100d883a 	mov	r6,r2
 402522c:	00bfffc4 	movi	r2,-1
 4025230:	30801426 	beq	r6,r2,4025284 <__sflush_r+0x1e4>
 4025234:	8880030b 	ldhu	r2,12(r17)
 4025238:	8a000a17 	ldw	r8,40(r17)
 402523c:	003fae06 	br	40250f8 <__flash_rwdata_start+0xffff4834>
 4025240:	98c00017 	ldw	r3,0(r19)
 4025244:	183fba26 	beq	r3,zero,4025130 <__flash_rwdata_start+0xffff486c>
 4025248:	01000744 	movi	r4,29
 402524c:	19000626 	beq	r3,r4,4025268 <__sflush_r+0x1c8>
 4025250:	01000584 	movi	r4,22
 4025254:	19000426 	beq	r3,r4,4025268 <__sflush_r+0x1c8>
 4025258:	88c0030b 	ldhu	r3,12(r17)
 402525c:	18c01014 	ori	r3,r3,64
 4025260:	88c0030d 	sth	r3,12(r17)
 4025264:	003fc306 	br	4025174 <__flash_rwdata_start+0xffff48b0>
 4025268:	8880030b 	ldhu	r2,12(r17)
 402526c:	88c00417 	ldw	r3,16(r17)
 4025270:	88000115 	stw	zero,4(r17)
 4025274:	10bdffcc 	andi	r2,r2,63487
 4025278:	8880030d 	sth	r2,12(r17)
 402527c:	88c00015 	stw	r3,0(r17)
 4025280:	003fb306 	br	4025150 <__flash_rwdata_start+0xffff488c>
 4025284:	98800017 	ldw	r2,0(r19)
 4025288:	103fea26 	beq	r2,zero,4025234 <__flash_rwdata_start+0xffff4970>
 402528c:	00c00744 	movi	r3,29
 4025290:	10c00226 	beq	r2,r3,402529c <__sflush_r+0x1fc>
 4025294:	00c00584 	movi	r3,22
 4025298:	10ffd21e 	bne	r2,r3,40251e4 <__flash_rwdata_start+0xffff4920>
 402529c:	9c000015 	stw	r16,0(r19)
 40252a0:	0005883a 	mov	r2,zero
 40252a4:	003fb306 	br	4025174 <__flash_rwdata_start+0xffff48b0>

040252a8 <_fflush_r>:
 40252a8:	defffd04 	addi	sp,sp,-12
 40252ac:	dc000115 	stw	r16,4(sp)
 40252b0:	dfc00215 	stw	ra,8(sp)
 40252b4:	2021883a 	mov	r16,r4
 40252b8:	20000226 	beq	r4,zero,40252c4 <_fflush_r+0x1c>
 40252bc:	20800e17 	ldw	r2,56(r4)
 40252c0:	10000c26 	beq	r2,zero,40252f4 <_fflush_r+0x4c>
 40252c4:	2880030f 	ldh	r2,12(r5)
 40252c8:	1000051e 	bne	r2,zero,40252e0 <_fflush_r+0x38>
 40252cc:	0005883a 	mov	r2,zero
 40252d0:	dfc00217 	ldw	ra,8(sp)
 40252d4:	dc000117 	ldw	r16,4(sp)
 40252d8:	dec00304 	addi	sp,sp,12
 40252dc:	f800283a 	ret
 40252e0:	8009883a 	mov	r4,r16
 40252e4:	dfc00217 	ldw	ra,8(sp)
 40252e8:	dc000117 	ldw	r16,4(sp)
 40252ec:	dec00304 	addi	sp,sp,12
 40252f0:	40250a01 	jmpi	40250a0 <__sflush_r>
 40252f4:	d9400015 	stw	r5,0(sp)
 40252f8:	40256940 	call	4025694 <__sinit>
 40252fc:	d9400017 	ldw	r5,0(sp)
 4025300:	003ff006 	br	40252c4 <__flash_rwdata_start+0xffff4a00>

04025304 <fflush>:
 4025304:	20000526 	beq	r4,zero,402531c <fflush+0x18>
 4025308:	00800034 	movhi	r2,0
 402530c:	10878604 	addi	r2,r2,7704
 4025310:	200b883a 	mov	r5,r4
 4025314:	11000017 	ldw	r4,0(r2)
 4025318:	40252a81 	jmpi	40252a8 <_fflush_r>
 402531c:	00800034 	movhi	r2,0
 4025320:	10878504 	addi	r2,r2,7700
 4025324:	11000017 	ldw	r4,0(r2)
 4025328:	014100b4 	movhi	r5,1026
 402532c:	2954aa04 	addi	r5,r5,21160
 4025330:	40260881 	jmpi	4026088 <_fwalk_reent>

04025334 <__fp_lock>:
 4025334:	0005883a 	mov	r2,zero
 4025338:	f800283a 	ret

0402533c <__fp_unlock>:
 402533c:	0005883a 	mov	r2,zero
 4025340:	f800283a 	ret

04025344 <_cleanup_r>:
 4025344:	014100f4 	movhi	r5,1027
 4025348:	29682304 	addi	r5,r5,-24436
 402534c:	40260881 	jmpi	4026088 <_fwalk_reent>

04025350 <__sinit.part.1>:
 4025350:	defff704 	addi	sp,sp,-36
 4025354:	00c100b4 	movhi	r3,1026
 4025358:	dfc00815 	stw	ra,32(sp)
 402535c:	ddc00715 	stw	r23,28(sp)
 4025360:	dd800615 	stw	r22,24(sp)
 4025364:	dd400515 	stw	r21,20(sp)
 4025368:	dd000415 	stw	r20,16(sp)
 402536c:	dcc00315 	stw	r19,12(sp)
 4025370:	dc800215 	stw	r18,8(sp)
 4025374:	dc400115 	stw	r17,4(sp)
 4025378:	dc000015 	stw	r16,0(sp)
 402537c:	18d4d104 	addi	r3,r3,21316
 4025380:	24000117 	ldw	r16,4(r4)
 4025384:	20c00f15 	stw	r3,60(r4)
 4025388:	2080bb04 	addi	r2,r4,748
 402538c:	00c000c4 	movi	r3,3
 4025390:	20c0b915 	stw	r3,740(r4)
 4025394:	2080ba15 	stw	r2,744(r4)
 4025398:	2000b815 	stw	zero,736(r4)
 402539c:	05c00204 	movi	r23,8
 40253a0:	00800104 	movi	r2,4
 40253a4:	2025883a 	mov	r18,r4
 40253a8:	b80d883a 	mov	r6,r23
 40253ac:	81001704 	addi	r4,r16,92
 40253b0:	000b883a 	mov	r5,zero
 40253b4:	80000015 	stw	zero,0(r16)
 40253b8:	80000115 	stw	zero,4(r16)
 40253bc:	80000215 	stw	zero,8(r16)
 40253c0:	8080030d 	sth	r2,12(r16)
 40253c4:	80001915 	stw	zero,100(r16)
 40253c8:	8000038d 	sth	zero,14(r16)
 40253cc:	80000415 	stw	zero,16(r16)
 40253d0:	80000515 	stw	zero,20(r16)
 40253d4:	80000615 	stw	zero,24(r16)
 40253d8:	4026dd00 	call	4026dd0 <memset>
 40253dc:	058100f4 	movhi	r22,1027
 40253e0:	94400217 	ldw	r17,8(r18)
 40253e4:	054100f4 	movhi	r21,1027
 40253e8:	050100f4 	movhi	r20,1027
 40253ec:	04c100f4 	movhi	r19,1027
 40253f0:	b5a1bb04 	addi	r22,r22,-30996
 40253f4:	ad61d204 	addi	r21,r21,-30904
 40253f8:	a521f104 	addi	r20,r20,-30780
 40253fc:	9ce20804 	addi	r19,r19,-30688
 4025400:	85800815 	stw	r22,32(r16)
 4025404:	85400915 	stw	r21,36(r16)
 4025408:	85000a15 	stw	r20,40(r16)
 402540c:	84c00b15 	stw	r19,44(r16)
 4025410:	84000715 	stw	r16,28(r16)
 4025414:	00800284 	movi	r2,10
 4025418:	8880030d 	sth	r2,12(r17)
 402541c:	00800044 	movi	r2,1
 4025420:	89001704 	addi	r4,r17,92
 4025424:	b80d883a 	mov	r6,r23
 4025428:	000b883a 	mov	r5,zero
 402542c:	88000015 	stw	zero,0(r17)
 4025430:	88000115 	stw	zero,4(r17)
 4025434:	88000215 	stw	zero,8(r17)
 4025438:	88001915 	stw	zero,100(r17)
 402543c:	8880038d 	sth	r2,14(r17)
 4025440:	88000415 	stw	zero,16(r17)
 4025444:	88000515 	stw	zero,20(r17)
 4025448:	88000615 	stw	zero,24(r17)
 402544c:	4026dd00 	call	4026dd0 <memset>
 4025450:	94000317 	ldw	r16,12(r18)
 4025454:	00800484 	movi	r2,18
 4025458:	8c400715 	stw	r17,28(r17)
 402545c:	8d800815 	stw	r22,32(r17)
 4025460:	8d400915 	stw	r21,36(r17)
 4025464:	8d000a15 	stw	r20,40(r17)
 4025468:	8cc00b15 	stw	r19,44(r17)
 402546c:	8080030d 	sth	r2,12(r16)
 4025470:	00800084 	movi	r2,2
 4025474:	80000015 	stw	zero,0(r16)
 4025478:	80000115 	stw	zero,4(r16)
 402547c:	80000215 	stw	zero,8(r16)
 4025480:	80001915 	stw	zero,100(r16)
 4025484:	8080038d 	sth	r2,14(r16)
 4025488:	80000415 	stw	zero,16(r16)
 402548c:	80000515 	stw	zero,20(r16)
 4025490:	80000615 	stw	zero,24(r16)
 4025494:	81001704 	addi	r4,r16,92
 4025498:	000b883a 	mov	r5,zero
 402549c:	b80d883a 	mov	r6,r23
 40254a0:	4026dd00 	call	4026dd0 <memset>
 40254a4:	00800044 	movi	r2,1
 40254a8:	84000715 	stw	r16,28(r16)
 40254ac:	85800815 	stw	r22,32(r16)
 40254b0:	85400915 	stw	r21,36(r16)
 40254b4:	85000a15 	stw	r20,40(r16)
 40254b8:	84c00b15 	stw	r19,44(r16)
 40254bc:	90800e15 	stw	r2,56(r18)
 40254c0:	dfc00817 	ldw	ra,32(sp)
 40254c4:	ddc00717 	ldw	r23,28(sp)
 40254c8:	dd800617 	ldw	r22,24(sp)
 40254cc:	dd400517 	ldw	r21,20(sp)
 40254d0:	dd000417 	ldw	r20,16(sp)
 40254d4:	dcc00317 	ldw	r19,12(sp)
 40254d8:	dc800217 	ldw	r18,8(sp)
 40254dc:	dc400117 	ldw	r17,4(sp)
 40254e0:	dc000017 	ldw	r16,0(sp)
 40254e4:	dec00904 	addi	sp,sp,36
 40254e8:	f800283a 	ret

040254ec <__sfmoreglue>:
 40254ec:	defffc04 	addi	sp,sp,-16
 40254f0:	dc800215 	stw	r18,8(sp)
 40254f4:	2825883a 	mov	r18,r5
 40254f8:	dc000015 	stw	r16,0(sp)
 40254fc:	01401a04 	movi	r5,104
 4025500:	2021883a 	mov	r16,r4
 4025504:	913fffc4 	addi	r4,r18,-1
 4025508:	dfc00315 	stw	ra,12(sp)
 402550c:	dc400115 	stw	r17,4(sp)
 4025510:	402110c0 	call	402110c <__mulsi3>
 4025514:	8009883a 	mov	r4,r16
 4025518:	11401d04 	addi	r5,r2,116
 402551c:	1023883a 	mov	r17,r2
 4025520:	40263e40 	call	40263e4 <_malloc_r>
 4025524:	1021883a 	mov	r16,r2
 4025528:	10000726 	beq	r2,zero,4025548 <__sfmoreglue+0x5c>
 402552c:	11000304 	addi	r4,r2,12
 4025530:	10000015 	stw	zero,0(r2)
 4025534:	14800115 	stw	r18,4(r2)
 4025538:	11000215 	stw	r4,8(r2)
 402553c:	000b883a 	mov	r5,zero
 4025540:	89801a04 	addi	r6,r17,104
 4025544:	4026dd00 	call	4026dd0 <memset>
 4025548:	8005883a 	mov	r2,r16
 402554c:	dfc00317 	ldw	ra,12(sp)
 4025550:	dc800217 	ldw	r18,8(sp)
 4025554:	dc400117 	ldw	r17,4(sp)
 4025558:	dc000017 	ldw	r16,0(sp)
 402555c:	dec00404 	addi	sp,sp,16
 4025560:	f800283a 	ret

04025564 <__sfp>:
 4025564:	00800034 	movhi	r2,0
 4025568:	defffb04 	addi	sp,sp,-20
 402556c:	10878504 	addi	r2,r2,7700
 4025570:	dc800215 	stw	r18,8(sp)
 4025574:	14800017 	ldw	r18,0(r2)
 4025578:	dcc00315 	stw	r19,12(sp)
 402557c:	dfc00415 	stw	ra,16(sp)
 4025580:	90800e17 	ldw	r2,56(r18)
 4025584:	dc400115 	stw	r17,4(sp)
 4025588:	dc000015 	stw	r16,0(sp)
 402558c:	2027883a 	mov	r19,r4
 4025590:	1000021e 	bne	r2,zero,402559c <__sfp+0x38>
 4025594:	9009883a 	mov	r4,r18
 4025598:	40253500 	call	4025350 <__sinit.part.1>
 402559c:	9480b804 	addi	r18,r18,736
 40255a0:	047fffc4 	movi	r17,-1
 40255a4:	91400117 	ldw	r5,4(r18)
 40255a8:	94000217 	ldw	r16,8(r18)
 40255ac:	297fffc4 	addi	r5,r5,-1
 40255b0:	28000a16 	blt	r5,zero,40255dc <__sfp+0x78>
 40255b4:	8080030f 	ldh	r2,12(r16)
 40255b8:	10000c26 	beq	r2,zero,40255ec <__sfp+0x88>
 40255bc:	80c01d04 	addi	r3,r16,116
 40255c0:	00000206 	br	40255cc <__sfp+0x68>
 40255c4:	18bfe60f 	ldh	r2,-104(r3)
 40255c8:	10000826 	beq	r2,zero,40255ec <__sfp+0x88>
 40255cc:	297fffc4 	addi	r5,r5,-1
 40255d0:	1c3ffd04 	addi	r16,r3,-12
 40255d4:	18c01a04 	addi	r3,r3,104
 40255d8:	2c7ffa1e 	bne	r5,r17,40255c4 <__flash_rwdata_start+0xffff4d00>
 40255dc:	90800017 	ldw	r2,0(r18)
 40255e0:	10001d26 	beq	r2,zero,4025658 <__sfp+0xf4>
 40255e4:	1025883a 	mov	r18,r2
 40255e8:	003fee06 	br	40255a4 <__flash_rwdata_start+0xffff4ce0>
 40255ec:	00bfffc4 	movi	r2,-1
 40255f0:	8080038d 	sth	r2,14(r16)
 40255f4:	00800044 	movi	r2,1
 40255f8:	8080030d 	sth	r2,12(r16)
 40255fc:	80001915 	stw	zero,100(r16)
 4025600:	80000015 	stw	zero,0(r16)
 4025604:	80000215 	stw	zero,8(r16)
 4025608:	80000115 	stw	zero,4(r16)
 402560c:	80000415 	stw	zero,16(r16)
 4025610:	80000515 	stw	zero,20(r16)
 4025614:	80000615 	stw	zero,24(r16)
 4025618:	81001704 	addi	r4,r16,92
 402561c:	000b883a 	mov	r5,zero
 4025620:	01800204 	movi	r6,8
 4025624:	4026dd00 	call	4026dd0 <memset>
 4025628:	8005883a 	mov	r2,r16
 402562c:	80000c15 	stw	zero,48(r16)
 4025630:	80000d15 	stw	zero,52(r16)
 4025634:	80001115 	stw	zero,68(r16)
 4025638:	80001215 	stw	zero,72(r16)
 402563c:	dfc00417 	ldw	ra,16(sp)
 4025640:	dcc00317 	ldw	r19,12(sp)
 4025644:	dc800217 	ldw	r18,8(sp)
 4025648:	dc400117 	ldw	r17,4(sp)
 402564c:	dc000017 	ldw	r16,0(sp)
 4025650:	dec00504 	addi	sp,sp,20
 4025654:	f800283a 	ret
 4025658:	9809883a 	mov	r4,r19
 402565c:	01400104 	movi	r5,4
 4025660:	40254ec0 	call	40254ec <__sfmoreglue>
 4025664:	90800015 	stw	r2,0(r18)
 4025668:	103fde1e 	bne	r2,zero,40255e4 <__flash_rwdata_start+0xffff4d20>
 402566c:	00800304 	movi	r2,12
 4025670:	98800015 	stw	r2,0(r19)
 4025674:	0005883a 	mov	r2,zero
 4025678:	003ff006 	br	402563c <__flash_rwdata_start+0xffff4d78>

0402567c <_cleanup>:
 402567c:	00800034 	movhi	r2,0
 4025680:	10878504 	addi	r2,r2,7700
 4025684:	11000017 	ldw	r4,0(r2)
 4025688:	014100f4 	movhi	r5,1027
 402568c:	29682304 	addi	r5,r5,-24436
 4025690:	40260881 	jmpi	4026088 <_fwalk_reent>

04025694 <__sinit>:
 4025694:	20800e17 	ldw	r2,56(r4)
 4025698:	10000126 	beq	r2,zero,40256a0 <__sinit+0xc>
 402569c:	f800283a 	ret
 40256a0:	40253501 	jmpi	4025350 <__sinit.part.1>

040256a4 <__sfp_lock_acquire>:
 40256a4:	f800283a 	ret

040256a8 <__sfp_lock_release>:
 40256a8:	f800283a 	ret

040256ac <__sinit_lock_acquire>:
 40256ac:	f800283a 	ret

040256b0 <__sinit_lock_release>:
 40256b0:	f800283a 	ret

040256b4 <__fp_lock_all>:
 40256b4:	00800034 	movhi	r2,0
 40256b8:	10878604 	addi	r2,r2,7704
 40256bc:	11000017 	ldw	r4,0(r2)
 40256c0:	014100b4 	movhi	r5,1026
 40256c4:	2954cd04 	addi	r5,r5,21300
 40256c8:	4025fc41 	jmpi	4025fc4 <_fwalk>

040256cc <__fp_unlock_all>:
 40256cc:	00800034 	movhi	r2,0
 40256d0:	10878604 	addi	r2,r2,7704
 40256d4:	11000017 	ldw	r4,0(r2)
 40256d8:	014100b4 	movhi	r5,1026
 40256dc:	2954cf04 	addi	r5,r5,21308
 40256e0:	4025fc41 	jmpi	4025fc4 <_fwalk>

040256e4 <_malloc_trim_r>:
 40256e4:	defffb04 	addi	sp,sp,-20
 40256e8:	dcc00315 	stw	r19,12(sp)
 40256ec:	04c00034 	movhi	r19,0
 40256f0:	dc800215 	stw	r18,8(sp)
 40256f4:	dc400115 	stw	r17,4(sp)
 40256f8:	dc000015 	stw	r16,0(sp)
 40256fc:	dfc00415 	stw	ra,16(sp)
 4025700:	2821883a 	mov	r16,r5
 4025704:	9cc1fa04 	addi	r19,r19,2024
 4025708:	2025883a 	mov	r18,r4
 402570c:	402e4ec0 	call	402e4ec <__malloc_lock>
 4025710:	98800217 	ldw	r2,8(r19)
 4025714:	14400117 	ldw	r17,4(r2)
 4025718:	00bfff04 	movi	r2,-4
 402571c:	88a2703a 	and	r17,r17,r2
 4025720:	8c21c83a 	sub	r16,r17,r16
 4025724:	8403fbc4 	addi	r16,r16,4079
 4025728:	8020d33a 	srli	r16,r16,12
 402572c:	0083ffc4 	movi	r2,4095
 4025730:	843fffc4 	addi	r16,r16,-1
 4025734:	8020933a 	slli	r16,r16,12
 4025738:	1400060e 	bge	r2,r16,4025754 <_malloc_trim_r+0x70>
 402573c:	9009883a 	mov	r4,r18
 4025740:	000b883a 	mov	r5,zero
 4025744:	40286980 	call	4028698 <_sbrk_r>
 4025748:	98c00217 	ldw	r3,8(r19)
 402574c:	1c47883a 	add	r3,r3,r17
 4025750:	10c00a26 	beq	r2,r3,402577c <_malloc_trim_r+0x98>
 4025754:	9009883a 	mov	r4,r18
 4025758:	402e50c0 	call	402e50c <__malloc_unlock>
 402575c:	0005883a 	mov	r2,zero
 4025760:	dfc00417 	ldw	ra,16(sp)
 4025764:	dcc00317 	ldw	r19,12(sp)
 4025768:	dc800217 	ldw	r18,8(sp)
 402576c:	dc400117 	ldw	r17,4(sp)
 4025770:	dc000017 	ldw	r16,0(sp)
 4025774:	dec00504 	addi	sp,sp,20
 4025778:	f800283a 	ret
 402577c:	9009883a 	mov	r4,r18
 4025780:	040bc83a 	sub	r5,zero,r16
 4025784:	40286980 	call	4028698 <_sbrk_r>
 4025788:	00ffffc4 	movi	r3,-1
 402578c:	10c00d26 	beq	r2,r3,40257c4 <_malloc_trim_r+0xe0>
 4025790:	00c00034 	movhi	r3,0
 4025794:	18c7a504 	addi	r3,r3,7828
 4025798:	18800017 	ldw	r2,0(r3)
 402579c:	99000217 	ldw	r4,8(r19)
 40257a0:	8c23c83a 	sub	r17,r17,r16
 40257a4:	8c400054 	ori	r17,r17,1
 40257a8:	1421c83a 	sub	r16,r2,r16
 40257ac:	24400115 	stw	r17,4(r4)
 40257b0:	9009883a 	mov	r4,r18
 40257b4:	1c000015 	stw	r16,0(r3)
 40257b8:	402e50c0 	call	402e50c <__malloc_unlock>
 40257bc:	00800044 	movi	r2,1
 40257c0:	003fe706 	br	4025760 <__flash_rwdata_start+0xffff4e9c>
 40257c4:	9009883a 	mov	r4,r18
 40257c8:	000b883a 	mov	r5,zero
 40257cc:	40286980 	call	4028698 <_sbrk_r>
 40257d0:	99000217 	ldw	r4,8(r19)
 40257d4:	014003c4 	movi	r5,15
 40257d8:	1107c83a 	sub	r3,r2,r4
 40257dc:	28ffdd0e 	bge	r5,r3,4025754 <__flash_rwdata_start+0xffff4e90>
 40257e0:	01400034 	movhi	r5,0
 40257e4:	29478804 	addi	r5,r5,7712
 40257e8:	29400017 	ldw	r5,0(r5)
 40257ec:	18c00054 	ori	r3,r3,1
 40257f0:	20c00115 	stw	r3,4(r4)
 40257f4:	00c00034 	movhi	r3,0
 40257f8:	1145c83a 	sub	r2,r2,r5
 40257fc:	18c7a504 	addi	r3,r3,7828
 4025800:	18800015 	stw	r2,0(r3)
 4025804:	003fd306 	br	4025754 <__flash_rwdata_start+0xffff4e90>

04025808 <_free_r>:
 4025808:	28004c26 	beq	r5,zero,402593c <_free_r+0x134>
 402580c:	defffd04 	addi	sp,sp,-12
 4025810:	dc400115 	stw	r17,4(sp)
 4025814:	dc000015 	stw	r16,0(sp)
 4025818:	2023883a 	mov	r17,r4
 402581c:	2821883a 	mov	r16,r5
 4025820:	dfc00215 	stw	ra,8(sp)
 4025824:	402e4ec0 	call	402e4ec <__malloc_lock>
 4025828:	813fff17 	ldw	r4,-4(r16)
 402582c:	00bfff84 	movi	r2,-2
 4025830:	02400034 	movhi	r9,0
 4025834:	81bffe04 	addi	r6,r16,-8
 4025838:	2084703a 	and	r2,r4,r2
 402583c:	4a41fa04 	addi	r9,r9,2024
 4025840:	308b883a 	add	r5,r6,r2
 4025844:	2a000117 	ldw	r8,4(r5)
 4025848:	49c00217 	ldw	r7,8(r9)
 402584c:	00ffff04 	movi	r3,-4
 4025850:	40c6703a 	and	r3,r8,r3
 4025854:	39405326 	beq	r7,r5,40259a4 <_free_r+0x19c>
 4025858:	28c00115 	stw	r3,4(r5)
 402585c:	2100004c 	andi	r4,r4,1
 4025860:	2000091e 	bne	r4,zero,4025888 <_free_r+0x80>
 4025864:	81fffe17 	ldw	r7,-8(r16)
 4025868:	4a000204 	addi	r8,r9,8
 402586c:	31cdc83a 	sub	r6,r6,r7
 4025870:	31000217 	ldw	r4,8(r6)
 4025874:	11c5883a 	add	r2,r2,r7
 4025878:	22006126 	beq	r4,r8,4025a00 <_free_r+0x1f8>
 402587c:	31c00317 	ldw	r7,12(r6)
 4025880:	21c00315 	stw	r7,12(r4)
 4025884:	39000215 	stw	r4,8(r7)
 4025888:	28c9883a 	add	r4,r5,r3
 402588c:	21c00117 	ldw	r7,4(r4)
 4025890:	39c0004c 	andi	r7,r7,1
 4025894:	38000d1e 	bne	r7,zero,40258cc <_free_r+0xc4>
 4025898:	29000217 	ldw	r4,8(r5)
 402589c:	10c5883a 	add	r2,r2,r3
 40258a0:	00c00034 	movhi	r3,0
 40258a4:	18c1fc04 	addi	r3,r3,2032
 40258a8:	20c07526 	beq	r4,r3,4025a80 <_free_r+0x278>
 40258ac:	29c00317 	ldw	r7,12(r5)
 40258b0:	11400054 	ori	r5,r2,1
 40258b4:	3087883a 	add	r3,r6,r2
 40258b8:	21c00315 	stw	r7,12(r4)
 40258bc:	39000215 	stw	r4,8(r7)
 40258c0:	31400115 	stw	r5,4(r6)
 40258c4:	18800015 	stw	r2,0(r3)
 40258c8:	00000406 	br	40258dc <_free_r+0xd4>
 40258cc:	10c00054 	ori	r3,r2,1
 40258d0:	30c00115 	stw	r3,4(r6)
 40258d4:	3087883a 	add	r3,r6,r2
 40258d8:	18800015 	stw	r2,0(r3)
 40258dc:	00c07fc4 	movi	r3,511
 40258e0:	18801736 	bltu	r3,r2,4025940 <_free_r+0x138>
 40258e4:	1004d0fa 	srli	r2,r2,3
 40258e8:	01400044 	movi	r5,1
 40258ec:	49000117 	ldw	r4,4(r9)
 40258f0:	1087883a 	add	r3,r2,r2
 40258f4:	18c7883a 	add	r3,r3,r3
 40258f8:	1005d0ba 	srai	r2,r2,2
 40258fc:	18c7883a 	add	r3,r3,r3
 4025900:	1a47883a 	add	r3,r3,r9
 4025904:	19c00217 	ldw	r7,8(r3)
 4025908:	2884983a 	sll	r2,r5,r2
 402590c:	30c00315 	stw	r3,12(r6)
 4025910:	31c00215 	stw	r7,8(r6)
 4025914:	1104b03a 	or	r2,r2,r4
 4025918:	19800215 	stw	r6,8(r3)
 402591c:	48800115 	stw	r2,4(r9)
 4025920:	39800315 	stw	r6,12(r7)
 4025924:	8809883a 	mov	r4,r17
 4025928:	dfc00217 	ldw	ra,8(sp)
 402592c:	dc400117 	ldw	r17,4(sp)
 4025930:	dc000017 	ldw	r16,0(sp)
 4025934:	dec00304 	addi	sp,sp,12
 4025938:	402e50c1 	jmpi	402e50c <__malloc_unlock>
 402593c:	f800283a 	ret
 4025940:	1006d27a 	srli	r3,r2,9
 4025944:	01000104 	movi	r4,4
 4025948:	20c04036 	bltu	r4,r3,4025a4c <_free_r+0x244>
 402594c:	1006d1ba 	srli	r3,r2,6
 4025950:	19400e04 	addi	r5,r3,56
 4025954:	2947883a 	add	r3,r5,r5
 4025958:	18c7883a 	add	r3,r3,r3
 402595c:	18c7883a 	add	r3,r3,r3
 4025960:	1a49883a 	add	r4,r3,r9
 4025964:	20c00217 	ldw	r3,8(r4)
 4025968:	01c00034 	movhi	r7,0
 402596c:	39c1fa04 	addi	r7,r7,2024
 4025970:	19003b26 	beq	r3,r4,4025a60 <_free_r+0x258>
 4025974:	01ffff04 	movi	r7,-4
 4025978:	19400117 	ldw	r5,4(r3)
 402597c:	29ca703a 	and	r5,r5,r7
 4025980:	1140022e 	bgeu	r2,r5,402598c <_free_r+0x184>
 4025984:	18c00217 	ldw	r3,8(r3)
 4025988:	20fffb1e 	bne	r4,r3,4025978 <__flash_rwdata_start+0xffff50b4>
 402598c:	18800317 	ldw	r2,12(r3)
 4025990:	30800315 	stw	r2,12(r6)
 4025994:	30c00215 	stw	r3,8(r6)
 4025998:	11800215 	stw	r6,8(r2)
 402599c:	19800315 	stw	r6,12(r3)
 40259a0:	003fe006 	br	4025924 <__flash_rwdata_start+0xffff5060>
 40259a4:	2100004c 	andi	r4,r4,1
 40259a8:	1885883a 	add	r2,r3,r2
 40259ac:	2000071e 	bne	r4,zero,40259cc <_free_r+0x1c4>
 40259b0:	817ffe17 	ldw	r5,-8(r16)
 40259b4:	314dc83a 	sub	r6,r6,r5
 40259b8:	30c00317 	ldw	r3,12(r6)
 40259bc:	31000217 	ldw	r4,8(r6)
 40259c0:	1145883a 	add	r2,r2,r5
 40259c4:	20c00315 	stw	r3,12(r4)
 40259c8:	19000215 	stw	r4,8(r3)
 40259cc:	10c00054 	ori	r3,r2,1
 40259d0:	30c00115 	stw	r3,4(r6)
 40259d4:	00c00034 	movhi	r3,0
 40259d8:	18c78904 	addi	r3,r3,7716
 40259dc:	18c00017 	ldw	r3,0(r3)
 40259e0:	49800215 	stw	r6,8(r9)
 40259e4:	10ffcf36 	bltu	r2,r3,4025924 <__flash_rwdata_start+0xffff5060>
 40259e8:	00800034 	movhi	r2,0
 40259ec:	10879d04 	addi	r2,r2,7796
 40259f0:	11400017 	ldw	r5,0(r2)
 40259f4:	8809883a 	mov	r4,r17
 40259f8:	40256e40 	call	40256e4 <_malloc_trim_r>
 40259fc:	003fc906 	br	4025924 <__flash_rwdata_start+0xffff5060>
 4025a00:	28c9883a 	add	r4,r5,r3
 4025a04:	21000117 	ldw	r4,4(r4)
 4025a08:	2100004c 	andi	r4,r4,1
 4025a0c:	20000a1e 	bne	r4,zero,4025a38 <_free_r+0x230>
 4025a10:	29000317 	ldw	r4,12(r5)
 4025a14:	29400217 	ldw	r5,8(r5)
 4025a18:	10c5883a 	add	r2,r2,r3
 4025a1c:	10c00054 	ori	r3,r2,1
 4025a20:	29000315 	stw	r4,12(r5)
 4025a24:	21400215 	stw	r5,8(r4)
 4025a28:	30c00115 	stw	r3,4(r6)
 4025a2c:	308d883a 	add	r6,r6,r2
 4025a30:	30800015 	stw	r2,0(r6)
 4025a34:	003fbb06 	br	4025924 <__flash_rwdata_start+0xffff5060>
 4025a38:	10c00054 	ori	r3,r2,1
 4025a3c:	30c00115 	stw	r3,4(r6)
 4025a40:	308d883a 	add	r6,r6,r2
 4025a44:	30800015 	stw	r2,0(r6)
 4025a48:	003fb606 	br	4025924 <__flash_rwdata_start+0xffff5060>
 4025a4c:	01000504 	movi	r4,20
 4025a50:	20c01436 	bltu	r4,r3,4025aa4 <_free_r+0x29c>
 4025a54:	194016c4 	addi	r5,r3,91
 4025a58:	2947883a 	add	r3,r5,r5
 4025a5c:	003fbe06 	br	4025958 <__flash_rwdata_start+0xffff5094>
 4025a60:	280bd0ba 	srai	r5,r5,2
 4025a64:	00800044 	movi	r2,1
 4025a68:	39000117 	ldw	r4,4(r7)
 4025a6c:	114a983a 	sll	r5,r2,r5
 4025a70:	1805883a 	mov	r2,r3
 4025a74:	2908b03a 	or	r4,r5,r4
 4025a78:	39000115 	stw	r4,4(r7)
 4025a7c:	003fc406 	br	4025990 <__flash_rwdata_start+0xffff50cc>
 4025a80:	49800515 	stw	r6,20(r9)
 4025a84:	49800415 	stw	r6,16(r9)
 4025a88:	10c00054 	ori	r3,r2,1
 4025a8c:	31000315 	stw	r4,12(r6)
 4025a90:	31000215 	stw	r4,8(r6)
 4025a94:	30c00115 	stw	r3,4(r6)
 4025a98:	308d883a 	add	r6,r6,r2
 4025a9c:	30800015 	stw	r2,0(r6)
 4025aa0:	003fa006 	br	4025924 <__flash_rwdata_start+0xffff5060>
 4025aa4:	01001504 	movi	r4,84
 4025aa8:	20c00436 	bltu	r4,r3,4025abc <_free_r+0x2b4>
 4025aac:	1006d33a 	srli	r3,r2,12
 4025ab0:	19401b84 	addi	r5,r3,110
 4025ab4:	2947883a 	add	r3,r5,r5
 4025ab8:	003fa706 	br	4025958 <__flash_rwdata_start+0xffff5094>
 4025abc:	01005504 	movi	r4,340
 4025ac0:	20c00436 	bltu	r4,r3,4025ad4 <_free_r+0x2cc>
 4025ac4:	1006d3fa 	srli	r3,r2,15
 4025ac8:	19401dc4 	addi	r5,r3,119
 4025acc:	2947883a 	add	r3,r5,r5
 4025ad0:	003fa106 	br	4025958 <__flash_rwdata_start+0xffff5094>
 4025ad4:	01015504 	movi	r4,1364
 4025ad8:	20c00436 	bltu	r4,r3,4025aec <_free_r+0x2e4>
 4025adc:	1006d4ba 	srli	r3,r2,18
 4025ae0:	19401f04 	addi	r5,r3,124
 4025ae4:	2947883a 	add	r3,r5,r5
 4025ae8:	003f9b06 	br	4025958 <__flash_rwdata_start+0xffff5094>
 4025aec:	00c03f04 	movi	r3,252
 4025af0:	01401f84 	movi	r5,126
 4025af4:	003f9806 	br	4025958 <__flash_rwdata_start+0xffff5094>

04025af8 <__sfvwrite_r>:
 4025af8:	30800217 	ldw	r2,8(r6)
 4025afc:	10006726 	beq	r2,zero,4025c9c <__sfvwrite_r+0x1a4>
 4025b00:	defff404 	addi	sp,sp,-48
 4025b04:	dd000615 	stw	r20,24(sp)
 4025b08:	2029883a 	mov	r20,r4
 4025b0c:	2900030b 	ldhu	r4,12(r5)
 4025b10:	ddc00915 	stw	r23,36(sp)
 4025b14:	dc000215 	stw	r16,8(sp)
 4025b18:	dfc00b15 	stw	ra,44(sp)
 4025b1c:	df000a15 	stw	fp,40(sp)
 4025b20:	dd800815 	stw	r22,32(sp)
 4025b24:	dd400715 	stw	r21,28(sp)
 4025b28:	dcc00515 	stw	r19,20(sp)
 4025b2c:	dc800415 	stw	r18,16(sp)
 4025b30:	dc400315 	stw	r17,12(sp)
 4025b34:	2080020c 	andi	r2,r4,8
 4025b38:	2821883a 	mov	r16,r5
 4025b3c:	302f883a 	mov	r23,r6
 4025b40:	10002726 	beq	r2,zero,4025be0 <__sfvwrite_r+0xe8>
 4025b44:	28800417 	ldw	r2,16(r5)
 4025b48:	10002526 	beq	r2,zero,4025be0 <__sfvwrite_r+0xe8>
 4025b4c:	2080008c 	andi	r2,r4,2
 4025b50:	bc400017 	ldw	r17,0(r23)
 4025b54:	10002a26 	beq	r2,zero,4025c00 <__sfvwrite_r+0x108>
 4025b58:	05600034 	movhi	r21,32768
 4025b5c:	0027883a 	mov	r19,zero
 4025b60:	0025883a 	mov	r18,zero
 4025b64:	ad7f0004 	addi	r21,r21,-1024
 4025b68:	980d883a 	mov	r6,r19
 4025b6c:	a009883a 	mov	r4,r20
 4025b70:	90004626 	beq	r18,zero,4025c8c <__sfvwrite_r+0x194>
 4025b74:	900f883a 	mov	r7,r18
 4025b78:	81400717 	ldw	r5,28(r16)
 4025b7c:	ac80022e 	bgeu	r21,r18,4025b88 <__sfvwrite_r+0x90>
 4025b80:	01e00034 	movhi	r7,32768
 4025b84:	39ff0004 	addi	r7,r7,-1024
 4025b88:	80800917 	ldw	r2,36(r16)
 4025b8c:	103ee83a 	callr	r2
 4025b90:	0080550e 	bge	zero,r2,4025ce8 <__sfvwrite_r+0x1f0>
 4025b94:	b8c00217 	ldw	r3,8(r23)
 4025b98:	98a7883a 	add	r19,r19,r2
 4025b9c:	90a5c83a 	sub	r18,r18,r2
 4025ba0:	1885c83a 	sub	r2,r3,r2
 4025ba4:	b8800215 	stw	r2,8(r23)
 4025ba8:	103fef1e 	bne	r2,zero,4025b68 <__flash_rwdata_start+0xffff52a4>
 4025bac:	0005883a 	mov	r2,zero
 4025bb0:	dfc00b17 	ldw	ra,44(sp)
 4025bb4:	df000a17 	ldw	fp,40(sp)
 4025bb8:	ddc00917 	ldw	r23,36(sp)
 4025bbc:	dd800817 	ldw	r22,32(sp)
 4025bc0:	dd400717 	ldw	r21,28(sp)
 4025bc4:	dd000617 	ldw	r20,24(sp)
 4025bc8:	dcc00517 	ldw	r19,20(sp)
 4025bcc:	dc800417 	ldw	r18,16(sp)
 4025bd0:	dc400317 	ldw	r17,12(sp)
 4025bd4:	dc000217 	ldw	r16,8(sp)
 4025bd8:	dec00c04 	addi	sp,sp,48
 4025bdc:	f800283a 	ret
 4025be0:	a009883a 	mov	r4,r20
 4025be4:	800b883a 	mov	r5,r16
 4025be8:	40235fc0 	call	40235fc <__swsetup_r>
 4025bec:	1000ef1e 	bne	r2,zero,4025fac <__sfvwrite_r+0x4b4>
 4025bf0:	8100030b 	ldhu	r4,12(r16)
 4025bf4:	bc400017 	ldw	r17,0(r23)
 4025bf8:	2080008c 	andi	r2,r4,2
 4025bfc:	103fd61e 	bne	r2,zero,4025b58 <__flash_rwdata_start+0xffff5294>
 4025c00:	2080004c 	andi	r2,r4,1
 4025c04:	10003d1e 	bne	r2,zero,4025cfc <__sfvwrite_r+0x204>
 4025c08:	0039883a 	mov	fp,zero
 4025c0c:	0025883a 	mov	r18,zero
 4025c10:	90001a26 	beq	r18,zero,4025c7c <__sfvwrite_r+0x184>
 4025c14:	2080800c 	andi	r2,r4,512
 4025c18:	85800217 	ldw	r22,8(r16)
 4025c1c:	10007926 	beq	r2,zero,4025e04 <__sfvwrite_r+0x30c>
 4025c20:	b027883a 	mov	r19,r22
 4025c24:	95809736 	bltu	r18,r22,4025e84 <__sfvwrite_r+0x38c>
 4025c28:	2081200c 	andi	r2,r4,1152
 4025c2c:	1000a21e 	bne	r2,zero,4025eb8 <__sfvwrite_r+0x3c0>
 4025c30:	81000017 	ldw	r4,0(r16)
 4025c34:	e00b883a 	mov	r5,fp
 4025c38:	980d883a 	mov	r6,r19
 4025c3c:	4026c740 	call	4026c74 <memmove>
 4025c40:	81000217 	ldw	r4,8(r16)
 4025c44:	81400017 	ldw	r5,0(r16)
 4025c48:	9005883a 	mov	r2,r18
 4025c4c:	2587c83a 	sub	r3,r4,r22
 4025c50:	2ce7883a 	add	r19,r5,r19
 4025c54:	80c00215 	stw	r3,8(r16)
 4025c58:	84c00015 	stw	r19,0(r16)
 4025c5c:	b8c00217 	ldw	r3,8(r23)
 4025c60:	e0b9883a 	add	fp,fp,r2
 4025c64:	90a5c83a 	sub	r18,r18,r2
 4025c68:	1885c83a 	sub	r2,r3,r2
 4025c6c:	b8800215 	stw	r2,8(r23)
 4025c70:	103fce26 	beq	r2,zero,4025bac <__flash_rwdata_start+0xffff52e8>
 4025c74:	8100030b 	ldhu	r4,12(r16)
 4025c78:	903fe61e 	bne	r18,zero,4025c14 <__flash_rwdata_start+0xffff5350>
 4025c7c:	8f000017 	ldw	fp,0(r17)
 4025c80:	8c800117 	ldw	r18,4(r17)
 4025c84:	8c400204 	addi	r17,r17,8
 4025c88:	003fe106 	br	4025c10 <__flash_rwdata_start+0xffff534c>
 4025c8c:	8cc00017 	ldw	r19,0(r17)
 4025c90:	8c800117 	ldw	r18,4(r17)
 4025c94:	8c400204 	addi	r17,r17,8
 4025c98:	003fb306 	br	4025b68 <__flash_rwdata_start+0xffff52a4>
 4025c9c:	0005883a 	mov	r2,zero
 4025ca0:	f800283a 	ret
 4025ca4:	00a00034 	movhi	r2,32768
 4025ca8:	10bfffc4 	addi	r2,r2,-1
 4025cac:	9009883a 	mov	r4,r18
 4025cb0:	1480012e 	bgeu	r2,r18,4025cb8 <__sfvwrite_r+0x1c0>
 4025cb4:	1009883a 	mov	r4,r2
 4025cb8:	980b883a 	mov	r5,r19
 4025cbc:	402104c0 	call	402104c <__divsi3>
 4025cc0:	9809883a 	mov	r4,r19
 4025cc4:	100b883a 	mov	r5,r2
 4025cc8:	402110c0 	call	402110c <__mulsi3>
 4025ccc:	81400717 	ldw	r5,28(r16)
 4025cd0:	80c00917 	ldw	r3,36(r16)
 4025cd4:	a009883a 	mov	r4,r20
 4025cd8:	e00d883a 	mov	r6,fp
 4025cdc:	100f883a 	mov	r7,r2
 4025ce0:	183ee83a 	callr	r3
 4025ce4:	00bfdd16 	blt	zero,r2,4025c5c <__flash_rwdata_start+0xffff5398>
 4025ce8:	8080030b 	ldhu	r2,12(r16)
 4025cec:	10801014 	ori	r2,r2,64
 4025cf0:	8080030d 	sth	r2,12(r16)
 4025cf4:	00bfffc4 	movi	r2,-1
 4025cf8:	003fad06 	br	4025bb0 <__flash_rwdata_start+0xffff52ec>
 4025cfc:	0027883a 	mov	r19,zero
 4025d00:	0011883a 	mov	r8,zero
 4025d04:	0039883a 	mov	fp,zero
 4025d08:	0025883a 	mov	r18,zero
 4025d0c:	90001f26 	beq	r18,zero,4025d8c <__sfvwrite_r+0x294>
 4025d10:	40006026 	beq	r8,zero,4025e94 <__sfvwrite_r+0x39c>
 4025d14:	982b883a 	mov	r21,r19
 4025d18:	94c0012e 	bgeu	r18,r19,4025d20 <__sfvwrite_r+0x228>
 4025d1c:	902b883a 	mov	r21,r18
 4025d20:	81000017 	ldw	r4,0(r16)
 4025d24:	80800417 	ldw	r2,16(r16)
 4025d28:	a82d883a 	mov	r22,r21
 4025d2c:	81800217 	ldw	r6,8(r16)
 4025d30:	81c00517 	ldw	r7,20(r16)
 4025d34:	1100022e 	bgeu	r2,r4,4025d40 <__sfvwrite_r+0x248>
 4025d38:	31c7883a 	add	r3,r6,r7
 4025d3c:	1d401816 	blt	r3,r21,4025da0 <__sfvwrite_r+0x2a8>
 4025d40:	a9c04416 	blt	r21,r7,4025e54 <__sfvwrite_r+0x35c>
 4025d44:	80800917 	ldw	r2,36(r16)
 4025d48:	81400717 	ldw	r5,28(r16)
 4025d4c:	a009883a 	mov	r4,r20
 4025d50:	da000115 	stw	r8,4(sp)
 4025d54:	e00d883a 	mov	r6,fp
 4025d58:	103ee83a 	callr	r2
 4025d5c:	102d883a 	mov	r22,r2
 4025d60:	da000117 	ldw	r8,4(sp)
 4025d64:	00bfe00e 	bge	zero,r2,4025ce8 <__flash_rwdata_start+0xffff5424>
 4025d68:	9da7c83a 	sub	r19,r19,r22
 4025d6c:	98001f26 	beq	r19,zero,4025dec <__sfvwrite_r+0x2f4>
 4025d70:	b8800217 	ldw	r2,8(r23)
 4025d74:	e5b9883a 	add	fp,fp,r22
 4025d78:	95a5c83a 	sub	r18,r18,r22
 4025d7c:	15adc83a 	sub	r22,r2,r22
 4025d80:	bd800215 	stw	r22,8(r23)
 4025d84:	b03f8926 	beq	r22,zero,4025bac <__flash_rwdata_start+0xffff52e8>
 4025d88:	903fe11e 	bne	r18,zero,4025d10 <__flash_rwdata_start+0xffff544c>
 4025d8c:	8f000017 	ldw	fp,0(r17)
 4025d90:	8c800117 	ldw	r18,4(r17)
 4025d94:	0011883a 	mov	r8,zero
 4025d98:	8c400204 	addi	r17,r17,8
 4025d9c:	003fdb06 	br	4025d0c <__flash_rwdata_start+0xffff5448>
 4025da0:	180d883a 	mov	r6,r3
 4025da4:	e00b883a 	mov	r5,fp
 4025da8:	da000115 	stw	r8,4(sp)
 4025dac:	d8c00015 	stw	r3,0(sp)
 4025db0:	4026c740 	call	4026c74 <memmove>
 4025db4:	d8c00017 	ldw	r3,0(sp)
 4025db8:	80800017 	ldw	r2,0(r16)
 4025dbc:	a009883a 	mov	r4,r20
 4025dc0:	800b883a 	mov	r5,r16
 4025dc4:	10c5883a 	add	r2,r2,r3
 4025dc8:	80800015 	stw	r2,0(r16)
 4025dcc:	d8c00015 	stw	r3,0(sp)
 4025dd0:	40252a80 	call	40252a8 <_fflush_r>
 4025dd4:	d8c00017 	ldw	r3,0(sp)
 4025dd8:	da000117 	ldw	r8,4(sp)
 4025ddc:	103fc21e 	bne	r2,zero,4025ce8 <__flash_rwdata_start+0xffff5424>
 4025de0:	182d883a 	mov	r22,r3
 4025de4:	9da7c83a 	sub	r19,r19,r22
 4025de8:	983fe11e 	bne	r19,zero,4025d70 <__flash_rwdata_start+0xffff54ac>
 4025dec:	a009883a 	mov	r4,r20
 4025df0:	800b883a 	mov	r5,r16
 4025df4:	40252a80 	call	40252a8 <_fflush_r>
 4025df8:	103fbb1e 	bne	r2,zero,4025ce8 <__flash_rwdata_start+0xffff5424>
 4025dfc:	0011883a 	mov	r8,zero
 4025e00:	003fdb06 	br	4025d70 <__flash_rwdata_start+0xffff54ac>
 4025e04:	81000017 	ldw	r4,0(r16)
 4025e08:	80800417 	ldw	r2,16(r16)
 4025e0c:	11000236 	bltu	r2,r4,4025e18 <__sfvwrite_r+0x320>
 4025e10:	84c00517 	ldw	r19,20(r16)
 4025e14:	94ffa32e 	bgeu	r18,r19,4025ca4 <__flash_rwdata_start+0xffff53e0>
 4025e18:	9027883a 	mov	r19,r18
 4025e1c:	b480012e 	bgeu	r22,r18,4025e24 <__sfvwrite_r+0x32c>
 4025e20:	b027883a 	mov	r19,r22
 4025e24:	e00b883a 	mov	r5,fp
 4025e28:	980d883a 	mov	r6,r19
 4025e2c:	4026c740 	call	4026c74 <memmove>
 4025e30:	80800217 	ldw	r2,8(r16)
 4025e34:	80c00017 	ldw	r3,0(r16)
 4025e38:	14c5c83a 	sub	r2,r2,r19
 4025e3c:	1cc7883a 	add	r3,r3,r19
 4025e40:	80800215 	stw	r2,8(r16)
 4025e44:	80c00015 	stw	r3,0(r16)
 4025e48:	10004326 	beq	r2,zero,4025f58 <__sfvwrite_r+0x460>
 4025e4c:	9805883a 	mov	r2,r19
 4025e50:	003f8206 	br	4025c5c <__flash_rwdata_start+0xffff5398>
 4025e54:	a80d883a 	mov	r6,r21
 4025e58:	e00b883a 	mov	r5,fp
 4025e5c:	da000115 	stw	r8,4(sp)
 4025e60:	4026c740 	call	4026c74 <memmove>
 4025e64:	80800217 	ldw	r2,8(r16)
 4025e68:	80c00017 	ldw	r3,0(r16)
 4025e6c:	da000117 	ldw	r8,4(sp)
 4025e70:	1545c83a 	sub	r2,r2,r21
 4025e74:	1d6b883a 	add	r21,r3,r21
 4025e78:	80800215 	stw	r2,8(r16)
 4025e7c:	85400015 	stw	r21,0(r16)
 4025e80:	003fb906 	br	4025d68 <__flash_rwdata_start+0xffff54a4>
 4025e84:	81000017 	ldw	r4,0(r16)
 4025e88:	902d883a 	mov	r22,r18
 4025e8c:	9027883a 	mov	r19,r18
 4025e90:	003f6806 	br	4025c34 <__flash_rwdata_start+0xffff5370>
 4025e94:	e009883a 	mov	r4,fp
 4025e98:	01400284 	movi	r5,10
 4025e9c:	900d883a 	mov	r6,r18
 4025ea0:	4026b8c0 	call	4026b8c <memchr>
 4025ea4:	10003e26 	beq	r2,zero,4025fa0 <__sfvwrite_r+0x4a8>
 4025ea8:	10800044 	addi	r2,r2,1
 4025eac:	1727c83a 	sub	r19,r2,fp
 4025eb0:	02000044 	movi	r8,1
 4025eb4:	003f9706 	br	4025d14 <__flash_rwdata_start+0xffff5450>
 4025eb8:	80800517 	ldw	r2,20(r16)
 4025ebc:	81400417 	ldw	r5,16(r16)
 4025ec0:	80c00017 	ldw	r3,0(r16)
 4025ec4:	10a7883a 	add	r19,r2,r2
 4025ec8:	9885883a 	add	r2,r19,r2
 4025ecc:	1026d7fa 	srli	r19,r2,31
 4025ed0:	196bc83a 	sub	r21,r3,r5
 4025ed4:	a9800044 	addi	r6,r21,1
 4025ed8:	9885883a 	add	r2,r19,r2
 4025edc:	1027d07a 	srai	r19,r2,1
 4025ee0:	3485883a 	add	r2,r6,r18
 4025ee4:	980d883a 	mov	r6,r19
 4025ee8:	9880022e 	bgeu	r19,r2,4025ef4 <__sfvwrite_r+0x3fc>
 4025eec:	1027883a 	mov	r19,r2
 4025ef0:	100d883a 	mov	r6,r2
 4025ef4:	2101000c 	andi	r4,r4,1024
 4025ef8:	20001c26 	beq	r4,zero,4025f6c <__sfvwrite_r+0x474>
 4025efc:	a009883a 	mov	r4,r20
 4025f00:	300b883a 	mov	r5,r6
 4025f04:	40263e40 	call	40263e4 <_malloc_r>
 4025f08:	102d883a 	mov	r22,r2
 4025f0c:	10002926 	beq	r2,zero,4025fb4 <__sfvwrite_r+0x4bc>
 4025f10:	81400417 	ldw	r5,16(r16)
 4025f14:	1009883a 	mov	r4,r2
 4025f18:	a80d883a 	mov	r6,r21
 4025f1c:	40211340 	call	4021134 <memcpy>
 4025f20:	8080030b 	ldhu	r2,12(r16)
 4025f24:	00fedfc4 	movi	r3,-1153
 4025f28:	10c4703a 	and	r2,r2,r3
 4025f2c:	10802014 	ori	r2,r2,128
 4025f30:	8080030d 	sth	r2,12(r16)
 4025f34:	b549883a 	add	r4,r22,r21
 4025f38:	9d4bc83a 	sub	r5,r19,r21
 4025f3c:	85800415 	stw	r22,16(r16)
 4025f40:	84c00515 	stw	r19,20(r16)
 4025f44:	81000015 	stw	r4,0(r16)
 4025f48:	902d883a 	mov	r22,r18
 4025f4c:	81400215 	stw	r5,8(r16)
 4025f50:	9027883a 	mov	r19,r18
 4025f54:	003f3706 	br	4025c34 <__flash_rwdata_start+0xffff5370>
 4025f58:	a009883a 	mov	r4,r20
 4025f5c:	800b883a 	mov	r5,r16
 4025f60:	40252a80 	call	40252a8 <_fflush_r>
 4025f64:	103fb926 	beq	r2,zero,4025e4c <__flash_rwdata_start+0xffff5588>
 4025f68:	003f5f06 	br	4025ce8 <__flash_rwdata_start+0xffff5424>
 4025f6c:	a009883a 	mov	r4,r20
 4025f70:	40280bc0 	call	40280bc <_realloc_r>
 4025f74:	102d883a 	mov	r22,r2
 4025f78:	103fee1e 	bne	r2,zero,4025f34 <__flash_rwdata_start+0xffff5670>
 4025f7c:	81400417 	ldw	r5,16(r16)
 4025f80:	a009883a 	mov	r4,r20
 4025f84:	40258080 	call	4025808 <_free_r>
 4025f88:	8080030b 	ldhu	r2,12(r16)
 4025f8c:	00ffdfc4 	movi	r3,-129
 4025f90:	1884703a 	and	r2,r3,r2
 4025f94:	00c00304 	movi	r3,12
 4025f98:	a0c00015 	stw	r3,0(r20)
 4025f9c:	003f5306 	br	4025cec <__flash_rwdata_start+0xffff5428>
 4025fa0:	94c00044 	addi	r19,r18,1
 4025fa4:	02000044 	movi	r8,1
 4025fa8:	003f5a06 	br	4025d14 <__flash_rwdata_start+0xffff5450>
 4025fac:	00bfffc4 	movi	r2,-1
 4025fb0:	003eff06 	br	4025bb0 <__flash_rwdata_start+0xffff52ec>
 4025fb4:	00800304 	movi	r2,12
 4025fb8:	a0800015 	stw	r2,0(r20)
 4025fbc:	8080030b 	ldhu	r2,12(r16)
 4025fc0:	003f4a06 	br	4025cec <__flash_rwdata_start+0xffff5428>

04025fc4 <_fwalk>:
 4025fc4:	defff704 	addi	sp,sp,-36
 4025fc8:	dd000415 	stw	r20,16(sp)
 4025fcc:	dfc00815 	stw	ra,32(sp)
 4025fd0:	ddc00715 	stw	r23,28(sp)
 4025fd4:	dd800615 	stw	r22,24(sp)
 4025fd8:	dd400515 	stw	r21,20(sp)
 4025fdc:	dcc00315 	stw	r19,12(sp)
 4025fe0:	dc800215 	stw	r18,8(sp)
 4025fe4:	dc400115 	stw	r17,4(sp)
 4025fe8:	dc000015 	stw	r16,0(sp)
 4025fec:	2500b804 	addi	r20,r4,736
 4025ff0:	a0002326 	beq	r20,zero,4026080 <_fwalk+0xbc>
 4025ff4:	282b883a 	mov	r21,r5
 4025ff8:	002f883a 	mov	r23,zero
 4025ffc:	05800044 	movi	r22,1
 4026000:	04ffffc4 	movi	r19,-1
 4026004:	a4400117 	ldw	r17,4(r20)
 4026008:	a4800217 	ldw	r18,8(r20)
 402600c:	8c7fffc4 	addi	r17,r17,-1
 4026010:	88000d16 	blt	r17,zero,4026048 <_fwalk+0x84>
 4026014:	94000304 	addi	r16,r18,12
 4026018:	94800384 	addi	r18,r18,14
 402601c:	80c0000b 	ldhu	r3,0(r16)
 4026020:	8c7fffc4 	addi	r17,r17,-1
 4026024:	813ffd04 	addi	r4,r16,-12
 4026028:	b0c0042e 	bgeu	r22,r3,402603c <_fwalk+0x78>
 402602c:	90c0000f 	ldh	r3,0(r18)
 4026030:	1cc00226 	beq	r3,r19,402603c <_fwalk+0x78>
 4026034:	a83ee83a 	callr	r21
 4026038:	b8aeb03a 	or	r23,r23,r2
 402603c:	84001a04 	addi	r16,r16,104
 4026040:	94801a04 	addi	r18,r18,104
 4026044:	8cfff51e 	bne	r17,r19,402601c <__flash_rwdata_start+0xffff5758>
 4026048:	a5000017 	ldw	r20,0(r20)
 402604c:	a03fed1e 	bne	r20,zero,4026004 <__flash_rwdata_start+0xffff5740>
 4026050:	b805883a 	mov	r2,r23
 4026054:	dfc00817 	ldw	ra,32(sp)
 4026058:	ddc00717 	ldw	r23,28(sp)
 402605c:	dd800617 	ldw	r22,24(sp)
 4026060:	dd400517 	ldw	r21,20(sp)
 4026064:	dd000417 	ldw	r20,16(sp)
 4026068:	dcc00317 	ldw	r19,12(sp)
 402606c:	dc800217 	ldw	r18,8(sp)
 4026070:	dc400117 	ldw	r17,4(sp)
 4026074:	dc000017 	ldw	r16,0(sp)
 4026078:	dec00904 	addi	sp,sp,36
 402607c:	f800283a 	ret
 4026080:	002f883a 	mov	r23,zero
 4026084:	003ff206 	br	4026050 <__flash_rwdata_start+0xffff578c>

04026088 <_fwalk_reent>:
 4026088:	defff704 	addi	sp,sp,-36
 402608c:	dd400515 	stw	r21,20(sp)
 4026090:	dfc00815 	stw	ra,32(sp)
 4026094:	ddc00715 	stw	r23,28(sp)
 4026098:	dd800615 	stw	r22,24(sp)
 402609c:	dd000415 	stw	r20,16(sp)
 40260a0:	dcc00315 	stw	r19,12(sp)
 40260a4:	dc800215 	stw	r18,8(sp)
 40260a8:	dc400115 	stw	r17,4(sp)
 40260ac:	dc000015 	stw	r16,0(sp)
 40260b0:	2540b804 	addi	r21,r4,736
 40260b4:	a8002326 	beq	r21,zero,4026144 <_fwalk_reent+0xbc>
 40260b8:	2829883a 	mov	r20,r5
 40260bc:	202d883a 	mov	r22,r4
 40260c0:	002f883a 	mov	r23,zero
 40260c4:	04c00044 	movi	r19,1
 40260c8:	04bfffc4 	movi	r18,-1
 40260cc:	ac400117 	ldw	r17,4(r21)
 40260d0:	ac000217 	ldw	r16,8(r21)
 40260d4:	8c7fffc4 	addi	r17,r17,-1
 40260d8:	88000c16 	blt	r17,zero,402610c <_fwalk_reent+0x84>
 40260dc:	84000304 	addi	r16,r16,12
 40260e0:	80c0000b 	ldhu	r3,0(r16)
 40260e4:	8c7fffc4 	addi	r17,r17,-1
 40260e8:	817ffd04 	addi	r5,r16,-12
 40260ec:	98c0052e 	bgeu	r19,r3,4026104 <_fwalk_reent+0x7c>
 40260f0:	80c0008f 	ldh	r3,2(r16)
 40260f4:	b009883a 	mov	r4,r22
 40260f8:	1c800226 	beq	r3,r18,4026104 <_fwalk_reent+0x7c>
 40260fc:	a03ee83a 	callr	r20
 4026100:	b8aeb03a 	or	r23,r23,r2
 4026104:	84001a04 	addi	r16,r16,104
 4026108:	8cbff51e 	bne	r17,r18,40260e0 <__flash_rwdata_start+0xffff581c>
 402610c:	ad400017 	ldw	r21,0(r21)
 4026110:	a83fee1e 	bne	r21,zero,40260cc <__flash_rwdata_start+0xffff5808>
 4026114:	b805883a 	mov	r2,r23
 4026118:	dfc00817 	ldw	ra,32(sp)
 402611c:	ddc00717 	ldw	r23,28(sp)
 4026120:	dd800617 	ldw	r22,24(sp)
 4026124:	dd400517 	ldw	r21,20(sp)
 4026128:	dd000417 	ldw	r20,16(sp)
 402612c:	dcc00317 	ldw	r19,12(sp)
 4026130:	dc800217 	ldw	r18,8(sp)
 4026134:	dc400117 	ldw	r17,4(sp)
 4026138:	dc000017 	ldw	r16,0(sp)
 402613c:	dec00904 	addi	sp,sp,36
 4026140:	f800283a 	ret
 4026144:	002f883a 	mov	r23,zero
 4026148:	003ff206 	br	4026114 <__flash_rwdata_start+0xffff5850>

0402614c <_setlocale_r>:
 402614c:	30001b26 	beq	r6,zero,40261bc <_setlocale_r+0x70>
 4026150:	01400034 	movhi	r5,0
 4026154:	defffe04 	addi	sp,sp,-8
 4026158:	29403404 	addi	r5,r5,208
 402615c:	3009883a 	mov	r4,r6
 4026160:	dc000015 	stw	r16,0(sp)
 4026164:	dfc00115 	stw	ra,4(sp)
 4026168:	3021883a 	mov	r16,r6
 402616c:	40288280 	call	4028828 <strcmp>
 4026170:	1000061e 	bne	r2,zero,402618c <_setlocale_r+0x40>
 4026174:	00800034 	movhi	r2,0
 4026178:	10803304 	addi	r2,r2,204
 402617c:	dfc00117 	ldw	ra,4(sp)
 4026180:	dc000017 	ldw	r16,0(sp)
 4026184:	dec00204 	addi	sp,sp,8
 4026188:	f800283a 	ret
 402618c:	01400034 	movhi	r5,0
 4026190:	29403304 	addi	r5,r5,204
 4026194:	8009883a 	mov	r4,r16
 4026198:	40288280 	call	4028828 <strcmp>
 402619c:	103ff526 	beq	r2,zero,4026174 <__flash_rwdata_start+0xffff58b0>
 40261a0:	01400034 	movhi	r5,0
 40261a4:	29401e04 	addi	r5,r5,120
 40261a8:	8009883a 	mov	r4,r16
 40261ac:	40288280 	call	4028828 <strcmp>
 40261b0:	103ff026 	beq	r2,zero,4026174 <__flash_rwdata_start+0xffff58b0>
 40261b4:	0005883a 	mov	r2,zero
 40261b8:	003ff006 	br	402617c <__flash_rwdata_start+0xffff58b8>
 40261bc:	00800034 	movhi	r2,0
 40261c0:	10803304 	addi	r2,r2,204
 40261c4:	f800283a 	ret

040261c8 <__locale_charset>:
 40261c8:	00800034 	movhi	r2,0
 40261cc:	1081e404 	addi	r2,r2,1936
 40261d0:	f800283a 	ret

040261d4 <__locale_mb_cur_max>:
 40261d4:	00800034 	movhi	r2,0
 40261d8:	10878704 	addi	r2,r2,7708
 40261dc:	10800017 	ldw	r2,0(r2)
 40261e0:	f800283a 	ret

040261e4 <__locale_msgcharset>:
 40261e4:	00800034 	movhi	r2,0
 40261e8:	1081dc04 	addi	r2,r2,1904
 40261ec:	f800283a 	ret

040261f0 <__locale_cjk_lang>:
 40261f0:	0005883a 	mov	r2,zero
 40261f4:	f800283a 	ret

040261f8 <_localeconv_r>:
 40261f8:	00800034 	movhi	r2,0
 40261fc:	1081ec04 	addi	r2,r2,1968
 4026200:	f800283a 	ret

04026204 <setlocale>:
 4026204:	00c00034 	movhi	r3,0
 4026208:	18c78604 	addi	r3,r3,7704
 402620c:	2005883a 	mov	r2,r4
 4026210:	19000017 	ldw	r4,0(r3)
 4026214:	280d883a 	mov	r6,r5
 4026218:	100b883a 	mov	r5,r2
 402621c:	402614c1 	jmpi	402614c <_setlocale_r>

04026220 <localeconv>:
 4026220:	00800034 	movhi	r2,0
 4026224:	1081ec04 	addi	r2,r2,1968
 4026228:	f800283a 	ret

0402622c <__smakebuf_r>:
 402622c:	2880030b 	ldhu	r2,12(r5)
 4026230:	10c0008c 	andi	r3,r2,2
 4026234:	1800401e 	bne	r3,zero,4026338 <__smakebuf_r+0x10c>
 4026238:	deffec04 	addi	sp,sp,-80
 402623c:	dc000f15 	stw	r16,60(sp)
 4026240:	2821883a 	mov	r16,r5
 4026244:	2940038f 	ldh	r5,14(r5)
 4026248:	dc401015 	stw	r17,64(sp)
 402624c:	dfc01315 	stw	ra,76(sp)
 4026250:	dcc01215 	stw	r19,72(sp)
 4026254:	dc801115 	stw	r18,68(sp)
 4026258:	2023883a 	mov	r17,r4
 402625c:	28001b16 	blt	r5,zero,40262cc <__smakebuf_r+0xa0>
 4026260:	d80d883a 	mov	r6,sp
 4026264:	402a3700 	call	402a370 <_fstat_r>
 4026268:	10001716 	blt	r2,zero,40262c8 <__smakebuf_r+0x9c>
 402626c:	d8800117 	ldw	r2,4(sp)
 4026270:	00e00014 	movui	r3,32768
 4026274:	10bc000c 	andi	r2,r2,61440
 4026278:	10c03726 	beq	r2,r3,4026358 <__smakebuf_r+0x12c>
 402627c:	80c0030b 	ldhu	r3,12(r16)
 4026280:	18c20014 	ori	r3,r3,2048
 4026284:	80c0030d 	sth	r3,12(r16)
 4026288:	00c80004 	movi	r3,8192
 402628c:	10c03c1e 	bne	r2,r3,4026380 <__smakebuf_r+0x154>
 4026290:	8140038f 	ldh	r5,14(r16)
 4026294:	8809883a 	mov	r4,r17
 4026298:	402a3c80 	call	402a3c8 <_isatty_r>
 402629c:	10004e26 	beq	r2,zero,40263d8 <__smakebuf_r+0x1ac>
 40262a0:	8080030b 	ldhu	r2,12(r16)
 40262a4:	04c00044 	movi	r19,1
 40262a8:	80c010c4 	addi	r3,r16,67
 40262ac:	14c4b03a 	or	r2,r2,r19
 40262b0:	8080030d 	sth	r2,12(r16)
 40262b4:	80c00015 	stw	r3,0(r16)
 40262b8:	80c00415 	stw	r3,16(r16)
 40262bc:	84c00515 	stw	r19,20(r16)
 40262c0:	04810004 	movi	r18,1024
 40262c4:	00000706 	br	40262e4 <__smakebuf_r+0xb8>
 40262c8:	8080030b 	ldhu	r2,12(r16)
 40262cc:	10c0200c 	andi	r3,r2,128
 40262d0:	18001f1e 	bne	r3,zero,4026350 <__smakebuf_r+0x124>
 40262d4:	04810004 	movi	r18,1024
 40262d8:	10820014 	ori	r2,r2,2048
 40262dc:	8080030d 	sth	r2,12(r16)
 40262e0:	0027883a 	mov	r19,zero
 40262e4:	8809883a 	mov	r4,r17
 40262e8:	900b883a 	mov	r5,r18
 40262ec:	40263e40 	call	40263e4 <_malloc_r>
 40262f0:	10002e26 	beq	r2,zero,40263ac <__smakebuf_r+0x180>
 40262f4:	80c0030b 	ldhu	r3,12(r16)
 40262f8:	010100b4 	movhi	r4,1026
 40262fc:	2114d104 	addi	r4,r4,21316
 4026300:	89000f15 	stw	r4,60(r17)
 4026304:	18c02014 	ori	r3,r3,128
 4026308:	80c0030d 	sth	r3,12(r16)
 402630c:	80800015 	stw	r2,0(r16)
 4026310:	80800415 	stw	r2,16(r16)
 4026314:	84800515 	stw	r18,20(r16)
 4026318:	98001c1e 	bne	r19,zero,402638c <__smakebuf_r+0x160>
 402631c:	dfc01317 	ldw	ra,76(sp)
 4026320:	dcc01217 	ldw	r19,72(sp)
 4026324:	dc801117 	ldw	r18,68(sp)
 4026328:	dc401017 	ldw	r17,64(sp)
 402632c:	dc000f17 	ldw	r16,60(sp)
 4026330:	dec01404 	addi	sp,sp,80
 4026334:	f800283a 	ret
 4026338:	288010c4 	addi	r2,r5,67
 402633c:	28800015 	stw	r2,0(r5)
 4026340:	28800415 	stw	r2,16(r5)
 4026344:	00800044 	movi	r2,1
 4026348:	28800515 	stw	r2,20(r5)
 402634c:	f800283a 	ret
 4026350:	04801004 	movi	r18,64
 4026354:	003fe006 	br	40262d8 <__flash_rwdata_start+0xffff5a14>
 4026358:	81000a17 	ldw	r4,40(r16)
 402635c:	00c100f4 	movhi	r3,1027
 4026360:	18e1f104 	addi	r3,r3,-30780
 4026364:	20ffc51e 	bne	r4,r3,402627c <__flash_rwdata_start+0xffff59b8>
 4026368:	80c0030b 	ldhu	r3,12(r16)
 402636c:	01010004 	movi	r4,1024
 4026370:	81001315 	stw	r4,76(r16)
 4026374:	1906b03a 	or	r3,r3,r4
 4026378:	80c0030d 	sth	r3,12(r16)
 402637c:	003fc206 	br	4026288 <__flash_rwdata_start+0xffff59c4>
 4026380:	0027883a 	mov	r19,zero
 4026384:	04810004 	movi	r18,1024
 4026388:	003fd606 	br	40262e4 <__flash_rwdata_start+0xffff5a20>
 402638c:	8140038f 	ldh	r5,14(r16)
 4026390:	8809883a 	mov	r4,r17
 4026394:	402a3c80 	call	402a3c8 <_isatty_r>
 4026398:	103fe026 	beq	r2,zero,402631c <__flash_rwdata_start+0xffff5a58>
 402639c:	8080030b 	ldhu	r2,12(r16)
 40263a0:	10800054 	ori	r2,r2,1
 40263a4:	8080030d 	sth	r2,12(r16)
 40263a8:	003fdc06 	br	402631c <__flash_rwdata_start+0xffff5a58>
 40263ac:	8080030b 	ldhu	r2,12(r16)
 40263b0:	10c0800c 	andi	r3,r2,512
 40263b4:	183fd91e 	bne	r3,zero,402631c <__flash_rwdata_start+0xffff5a58>
 40263b8:	10800094 	ori	r2,r2,2
 40263bc:	80c010c4 	addi	r3,r16,67
 40263c0:	8080030d 	sth	r2,12(r16)
 40263c4:	00800044 	movi	r2,1
 40263c8:	80c00015 	stw	r3,0(r16)
 40263cc:	80c00415 	stw	r3,16(r16)
 40263d0:	80800515 	stw	r2,20(r16)
 40263d4:	003fd106 	br	402631c <__flash_rwdata_start+0xffff5a58>
 40263d8:	04c00044 	movi	r19,1
 40263dc:	04810004 	movi	r18,1024
 40263e0:	003fc006 	br	40262e4 <__flash_rwdata_start+0xffff5a20>

040263e4 <_malloc_r>:
 40263e4:	defff504 	addi	sp,sp,-44
 40263e8:	dc800315 	stw	r18,12(sp)
 40263ec:	dfc00a15 	stw	ra,40(sp)
 40263f0:	df000915 	stw	fp,36(sp)
 40263f4:	ddc00815 	stw	r23,32(sp)
 40263f8:	dd800715 	stw	r22,28(sp)
 40263fc:	dd400615 	stw	r21,24(sp)
 4026400:	dd000515 	stw	r20,20(sp)
 4026404:	dcc00415 	stw	r19,16(sp)
 4026408:	dc400215 	stw	r17,8(sp)
 402640c:	dc000115 	stw	r16,4(sp)
 4026410:	288002c4 	addi	r2,r5,11
 4026414:	00c00584 	movi	r3,22
 4026418:	2025883a 	mov	r18,r4
 402641c:	18802a2e 	bgeu	r3,r2,40264c8 <_malloc_r+0xe4>
 4026420:	047ffe04 	movi	r17,-8
 4026424:	1462703a 	and	r17,r2,r17
 4026428:	88009e16 	blt	r17,zero,40266a4 <_malloc_r+0x2c0>
 402642c:	89409d36 	bltu	r17,r5,40266a4 <_malloc_r+0x2c0>
 4026430:	402e4ec0 	call	402e4ec <__malloc_lock>
 4026434:	00807dc4 	movi	r2,503
 4026438:	14402736 	bltu	r2,r17,40264d8 <_malloc_r+0xf4>
 402643c:	8806d0fa 	srli	r3,r17,3
 4026440:	04c00034 	movhi	r19,0
 4026444:	9cc1fa04 	addi	r19,r19,2024
 4026448:	18c5883a 	add	r2,r3,r3
 402644c:	1085883a 	add	r2,r2,r2
 4026450:	1085883a 	add	r2,r2,r2
 4026454:	9885883a 	add	r2,r19,r2
 4026458:	14000317 	ldw	r16,12(r2)
 402645c:	80814a26 	beq	r16,r2,4026988 <_malloc_r+0x5a4>
 4026460:	80c00117 	ldw	r3,4(r16)
 4026464:	81000317 	ldw	r4,12(r16)
 4026468:	00bfff04 	movi	r2,-4
 402646c:	1884703a 	and	r2,r3,r2
 4026470:	81400217 	ldw	r5,8(r16)
 4026474:	8085883a 	add	r2,r16,r2
 4026478:	10c00117 	ldw	r3,4(r2)
 402647c:	29000315 	stw	r4,12(r5)
 4026480:	21400215 	stw	r5,8(r4)
 4026484:	18c00054 	ori	r3,r3,1
 4026488:	10c00115 	stw	r3,4(r2)
 402648c:	9009883a 	mov	r4,r18
 4026490:	402e50c0 	call	402e50c <__malloc_unlock>
 4026494:	80800204 	addi	r2,r16,8
 4026498:	dfc00a17 	ldw	ra,40(sp)
 402649c:	df000917 	ldw	fp,36(sp)
 40264a0:	ddc00817 	ldw	r23,32(sp)
 40264a4:	dd800717 	ldw	r22,28(sp)
 40264a8:	dd400617 	ldw	r21,24(sp)
 40264ac:	dd000517 	ldw	r20,20(sp)
 40264b0:	dcc00417 	ldw	r19,16(sp)
 40264b4:	dc800317 	ldw	r18,12(sp)
 40264b8:	dc400217 	ldw	r17,8(sp)
 40264bc:	dc000117 	ldw	r16,4(sp)
 40264c0:	dec00b04 	addi	sp,sp,44
 40264c4:	f800283a 	ret
 40264c8:	04400404 	movi	r17,16
 40264cc:	89407536 	bltu	r17,r5,40266a4 <_malloc_r+0x2c0>
 40264d0:	402e4ec0 	call	402e4ec <__malloc_lock>
 40264d4:	003fd906 	br	402643c <__flash_rwdata_start+0xffff5b78>
 40264d8:	8806d27a 	srli	r3,r17,9
 40264dc:	18007526 	beq	r3,zero,40266b4 <_malloc_r+0x2d0>
 40264e0:	00800104 	movi	r2,4
 40264e4:	10c0ef36 	bltu	r2,r3,40268a4 <_malloc_r+0x4c0>
 40264e8:	8806d1ba 	srli	r3,r17,6
 40264ec:	19c00e04 	addi	r7,r3,56
 40264f0:	39cb883a 	add	r5,r7,r7
 40264f4:	04c00034 	movhi	r19,0
 40264f8:	294b883a 	add	r5,r5,r5
 40264fc:	9cc1fa04 	addi	r19,r19,2024
 4026500:	294b883a 	add	r5,r5,r5
 4026504:	994b883a 	add	r5,r19,r5
 4026508:	2c000317 	ldw	r16,12(r5)
 402650c:	2c000e26 	beq	r5,r16,4026548 <_malloc_r+0x164>
 4026510:	80800117 	ldw	r2,4(r16)
 4026514:	01bfff04 	movi	r6,-4
 4026518:	010003c4 	movi	r4,15
 402651c:	1184703a 	and	r2,r2,r6
 4026520:	1447c83a 	sub	r3,r2,r17
 4026524:	20c00716 	blt	r4,r3,4026544 <_malloc_r+0x160>
 4026528:	1800650e 	bge	r3,zero,40266c0 <_malloc_r+0x2dc>
 402652c:	84000317 	ldw	r16,12(r16)
 4026530:	2c000526 	beq	r5,r16,4026548 <_malloc_r+0x164>
 4026534:	80800117 	ldw	r2,4(r16)
 4026538:	1184703a 	and	r2,r2,r6
 402653c:	1447c83a 	sub	r3,r2,r17
 4026540:	20fff90e 	bge	r4,r3,4026528 <__flash_rwdata_start+0xffff5c64>
 4026544:	39ffffc4 	addi	r7,r7,-1
 4026548:	38c00044 	addi	r3,r7,1
 402654c:	01800034 	movhi	r6,0
 4026550:	9c000417 	ldw	r16,16(r19)
 4026554:	3181fa04 	addi	r6,r6,2024
 4026558:	32400204 	addi	r9,r6,8
 402655c:	82410326 	beq	r16,r9,402696c <_malloc_r+0x588>
 4026560:	81000117 	ldw	r4,4(r16)
 4026564:	00bfff04 	movi	r2,-4
 4026568:	208e703a 	and	r7,r4,r2
 402656c:	3c45c83a 	sub	r2,r7,r17
 4026570:	010003c4 	movi	r4,15
 4026574:	2080ee16 	blt	r4,r2,4026930 <_malloc_r+0x54c>
 4026578:	32400515 	stw	r9,20(r6)
 402657c:	32400415 	stw	r9,16(r6)
 4026580:	1000510e 	bge	r2,zero,40266c8 <_malloc_r+0x2e4>
 4026584:	00807fc4 	movi	r2,511
 4026588:	11c0ce36 	bltu	r2,r7,40268c4 <_malloc_r+0x4e0>
 402658c:	3808d0fa 	srli	r4,r7,3
 4026590:	01c00044 	movi	r7,1
 4026594:	30800117 	ldw	r2,4(r6)
 4026598:	210b883a 	add	r5,r4,r4
 402659c:	294b883a 	add	r5,r5,r5
 40265a0:	2009d0ba 	srai	r4,r4,2
 40265a4:	294b883a 	add	r5,r5,r5
 40265a8:	298b883a 	add	r5,r5,r6
 40265ac:	2a000217 	ldw	r8,8(r5)
 40265b0:	3908983a 	sll	r4,r7,r4
 40265b4:	81400315 	stw	r5,12(r16)
 40265b8:	82000215 	stw	r8,8(r16)
 40265bc:	2088b03a 	or	r4,r4,r2
 40265c0:	2c000215 	stw	r16,8(r5)
 40265c4:	31000115 	stw	r4,4(r6)
 40265c8:	44000315 	stw	r16,12(r8)
 40265cc:	1805d0ba 	srai	r2,r3,2
 40265d0:	01400044 	movi	r5,1
 40265d4:	288a983a 	sll	r5,r5,r2
 40265d8:	21404336 	bltu	r4,r5,40266e8 <_malloc_r+0x304>
 40265dc:	2144703a 	and	r2,r4,r5
 40265e0:	10000a1e 	bne	r2,zero,402660c <_malloc_r+0x228>
 40265e4:	00bfff04 	movi	r2,-4
 40265e8:	294b883a 	add	r5,r5,r5
 40265ec:	1886703a 	and	r3,r3,r2
 40265f0:	2144703a 	and	r2,r4,r5
 40265f4:	18c00104 	addi	r3,r3,4
 40265f8:	1000041e 	bne	r2,zero,402660c <_malloc_r+0x228>
 40265fc:	294b883a 	add	r5,r5,r5
 4026600:	2144703a 	and	r2,r4,r5
 4026604:	18c00104 	addi	r3,r3,4
 4026608:	103ffc26 	beq	r2,zero,40265fc <__flash_rwdata_start+0xffff5d38>
 402660c:	023fff04 	movi	r8,-4
 4026610:	01c003c4 	movi	r7,15
 4026614:	18c5883a 	add	r2,r3,r3
 4026618:	1085883a 	add	r2,r2,r2
 402661c:	1085883a 	add	r2,r2,r2
 4026620:	9895883a 	add	r10,r19,r2
 4026624:	52c00304 	addi	r11,r10,12
 4026628:	1819883a 	mov	r12,r3
 402662c:	5c000017 	ldw	r16,0(r11)
 4026630:	59bffd04 	addi	r6,r11,-12
 4026634:	8180041e 	bne	r16,r6,4026648 <_malloc_r+0x264>
 4026638:	0000ce06 	br	4026974 <_malloc_r+0x590>
 402663c:	2000d70e 	bge	r4,zero,402699c <_malloc_r+0x5b8>
 4026640:	84000317 	ldw	r16,12(r16)
 4026644:	8180cb26 	beq	r16,r6,4026974 <_malloc_r+0x590>
 4026648:	80800117 	ldw	r2,4(r16)
 402664c:	1204703a 	and	r2,r2,r8
 4026650:	1449c83a 	sub	r4,r2,r17
 4026654:	393ff90e 	bge	r7,r4,402663c <__flash_rwdata_start+0xffff5d78>
 4026658:	80800317 	ldw	r2,12(r16)
 402665c:	80c00217 	ldw	r3,8(r16)
 4026660:	89400054 	ori	r5,r17,1
 4026664:	81400115 	stw	r5,4(r16)
 4026668:	18800315 	stw	r2,12(r3)
 402666c:	10c00215 	stw	r3,8(r2)
 4026670:	8463883a 	add	r17,r16,r17
 4026674:	9c400515 	stw	r17,20(r19)
 4026678:	9c400415 	stw	r17,16(r19)
 402667c:	20800054 	ori	r2,r4,1
 4026680:	88800115 	stw	r2,4(r17)
 4026684:	8a400315 	stw	r9,12(r17)
 4026688:	8a400215 	stw	r9,8(r17)
 402668c:	8923883a 	add	r17,r17,r4
 4026690:	89000015 	stw	r4,0(r17)
 4026694:	9009883a 	mov	r4,r18
 4026698:	402e50c0 	call	402e50c <__malloc_unlock>
 402669c:	80800204 	addi	r2,r16,8
 40266a0:	003f7d06 	br	4026498 <__flash_rwdata_start+0xffff5bd4>
 40266a4:	00800304 	movi	r2,12
 40266a8:	90800015 	stw	r2,0(r18)
 40266ac:	0005883a 	mov	r2,zero
 40266b0:	003f7906 	br	4026498 <__flash_rwdata_start+0xffff5bd4>
 40266b4:	01401f84 	movi	r5,126
 40266b8:	01c00fc4 	movi	r7,63
 40266bc:	003f8d06 	br	40264f4 <__flash_rwdata_start+0xffff5c30>
 40266c0:	81000317 	ldw	r4,12(r16)
 40266c4:	003f6a06 	br	4026470 <__flash_rwdata_start+0xffff5bac>
 40266c8:	81c5883a 	add	r2,r16,r7
 40266cc:	10c00117 	ldw	r3,4(r2)
 40266d0:	9009883a 	mov	r4,r18
 40266d4:	18c00054 	ori	r3,r3,1
 40266d8:	10c00115 	stw	r3,4(r2)
 40266dc:	402e50c0 	call	402e50c <__malloc_unlock>
 40266e0:	80800204 	addi	r2,r16,8
 40266e4:	003f6c06 	br	4026498 <__flash_rwdata_start+0xffff5bd4>
 40266e8:	9c000217 	ldw	r16,8(r19)
 40266ec:	00bfff04 	movi	r2,-4
 40266f0:	85800117 	ldw	r22,4(r16)
 40266f4:	b0ac703a 	and	r22,r22,r2
 40266f8:	b4400336 	bltu	r22,r17,4026708 <_malloc_r+0x324>
 40266fc:	b445c83a 	sub	r2,r22,r17
 4026700:	00c003c4 	movi	r3,15
 4026704:	18805d16 	blt	r3,r2,402687c <_malloc_r+0x498>
 4026708:	05c00034 	movhi	r23,0
 402670c:	00800034 	movhi	r2,0
 4026710:	bdc78804 	addi	r23,r23,7712
 4026714:	10879d04 	addi	r2,r2,7796
 4026718:	15400017 	ldw	r21,0(r2)
 402671c:	b9000017 	ldw	r4,0(r23)
 4026720:	00ffffc4 	movi	r3,-1
 4026724:	858d883a 	add	r6,r16,r22
 4026728:	8d6b883a 	add	r21,r17,r21
 402672c:	20c0e426 	beq	r4,r3,4026ac0 <_malloc_r+0x6dc>
 4026730:	ad4403c4 	addi	r21,r21,4111
 4026734:	00fc0004 	movi	r3,-4096
 4026738:	a8ea703a 	and	r21,r21,r3
 402673c:	9009883a 	mov	r4,r18
 4026740:	a80b883a 	mov	r5,r21
 4026744:	d9800015 	stw	r6,0(sp)
 4026748:	40286980 	call	4028698 <_sbrk_r>
 402674c:	00ffffc4 	movi	r3,-1
 4026750:	1029883a 	mov	r20,r2
 4026754:	d9800017 	ldw	r6,0(sp)
 4026758:	10c0a426 	beq	r2,r3,40269ec <_malloc_r+0x608>
 402675c:	1180a236 	bltu	r2,r6,40269e8 <_malloc_r+0x604>
 4026760:	07000034 	movhi	fp,0
 4026764:	e707a504 	addi	fp,fp,7828
 4026768:	e0c00017 	ldw	r3,0(fp)
 402676c:	a8c7883a 	add	r3,r21,r3
 4026770:	e0c00015 	stw	r3,0(fp)
 4026774:	3500da26 	beq	r6,r20,4026ae0 <_malloc_r+0x6fc>
 4026778:	b9000017 	ldw	r4,0(r23)
 402677c:	00bfffc4 	movi	r2,-1
 4026780:	2080e426 	beq	r4,r2,4026b14 <_malloc_r+0x730>
 4026784:	a185c83a 	sub	r2,r20,r6
 4026788:	1885883a 	add	r2,r3,r2
 402678c:	e0800015 	stw	r2,0(fp)
 4026790:	a0c001cc 	andi	r3,r20,7
 4026794:	1800b526 	beq	r3,zero,4026a6c <_malloc_r+0x688>
 4026798:	a0e9c83a 	sub	r20,r20,r3
 402679c:	00840204 	movi	r2,4104
 40267a0:	a5000204 	addi	r20,r20,8
 40267a4:	10c7c83a 	sub	r3,r2,r3
 40267a8:	a545883a 	add	r2,r20,r21
 40267ac:	1083ffcc 	andi	r2,r2,4095
 40267b0:	18abc83a 	sub	r21,r3,r2
 40267b4:	9009883a 	mov	r4,r18
 40267b8:	a80b883a 	mov	r5,r21
 40267bc:	40286980 	call	4028698 <_sbrk_r>
 40267c0:	00ffffc4 	movi	r3,-1
 40267c4:	10c0d026 	beq	r2,r3,4026b08 <_malloc_r+0x724>
 40267c8:	1507c83a 	sub	r3,r2,r20
 40267cc:	a8c7883a 	add	r3,r21,r3
 40267d0:	18c00054 	ori	r3,r3,1
 40267d4:	e0800017 	ldw	r2,0(fp)
 40267d8:	9d000215 	stw	r20,8(r19)
 40267dc:	a0c00115 	stw	r3,4(r20)
 40267e0:	a887883a 	add	r3,r21,r2
 40267e4:	e0c00015 	stw	r3,0(fp)
 40267e8:	84c00e26 	beq	r16,r19,4026824 <_malloc_r+0x440>
 40267ec:	018003c4 	movi	r6,15
 40267f0:	3580a02e 	bgeu	r6,r22,4026a74 <_malloc_r+0x690>
 40267f4:	81400117 	ldw	r5,4(r16)
 40267f8:	013ffe04 	movi	r4,-8
 40267fc:	b0bffd04 	addi	r2,r22,-12
 4026800:	1104703a 	and	r2,r2,r4
 4026804:	2900004c 	andi	r4,r5,1
 4026808:	1108b03a 	or	r4,r2,r4
 402680c:	81000115 	stw	r4,4(r16)
 4026810:	01400144 	movi	r5,5
 4026814:	8089883a 	add	r4,r16,r2
 4026818:	21400115 	stw	r5,4(r4)
 402681c:	21400215 	stw	r5,8(r4)
 4026820:	3080c036 	bltu	r6,r2,4026b24 <_malloc_r+0x740>
 4026824:	00800034 	movhi	r2,0
 4026828:	10879c04 	addi	r2,r2,7792
 402682c:	11000017 	ldw	r4,0(r2)
 4026830:	20c0012e 	bgeu	r4,r3,4026838 <_malloc_r+0x454>
 4026834:	10c00015 	stw	r3,0(r2)
 4026838:	00800034 	movhi	r2,0
 402683c:	10879b04 	addi	r2,r2,7788
 4026840:	11000017 	ldw	r4,0(r2)
 4026844:	9c000217 	ldw	r16,8(r19)
 4026848:	20c0012e 	bgeu	r4,r3,4026850 <_malloc_r+0x46c>
 402684c:	10c00015 	stw	r3,0(r2)
 4026850:	80c00117 	ldw	r3,4(r16)
 4026854:	00bfff04 	movi	r2,-4
 4026858:	1886703a 	and	r3,r3,r2
 402685c:	1c45c83a 	sub	r2,r3,r17
 4026860:	1c400236 	bltu	r3,r17,402686c <_malloc_r+0x488>
 4026864:	00c003c4 	movi	r3,15
 4026868:	18800416 	blt	r3,r2,402687c <_malloc_r+0x498>
 402686c:	9009883a 	mov	r4,r18
 4026870:	402e50c0 	call	402e50c <__malloc_unlock>
 4026874:	0005883a 	mov	r2,zero
 4026878:	003f0706 	br	4026498 <__flash_rwdata_start+0xffff5bd4>
 402687c:	88c00054 	ori	r3,r17,1
 4026880:	80c00115 	stw	r3,4(r16)
 4026884:	8463883a 	add	r17,r16,r17
 4026888:	10800054 	ori	r2,r2,1
 402688c:	9c400215 	stw	r17,8(r19)
 4026890:	88800115 	stw	r2,4(r17)
 4026894:	9009883a 	mov	r4,r18
 4026898:	402e50c0 	call	402e50c <__malloc_unlock>
 402689c:	80800204 	addi	r2,r16,8
 40268a0:	003efd06 	br	4026498 <__flash_rwdata_start+0xffff5bd4>
 40268a4:	00800504 	movi	r2,20
 40268a8:	10c0482e 	bgeu	r2,r3,40269cc <_malloc_r+0x5e8>
 40268ac:	00801504 	movi	r2,84
 40268b0:	10c06836 	bltu	r2,r3,4026a54 <_malloc_r+0x670>
 40268b4:	8806d33a 	srli	r3,r17,12
 40268b8:	19c01b84 	addi	r7,r3,110
 40268bc:	39cb883a 	add	r5,r7,r7
 40268c0:	003f0c06 	br	40264f4 <__flash_rwdata_start+0xffff5c30>
 40268c4:	3804d27a 	srli	r2,r7,9
 40268c8:	01000104 	movi	r4,4
 40268cc:	2080422e 	bgeu	r4,r2,40269d8 <_malloc_r+0x5f4>
 40268d0:	01000504 	movi	r4,20
 40268d4:	20807c36 	bltu	r4,r2,4026ac8 <_malloc_r+0x6e4>
 40268d8:	110016c4 	addi	r4,r2,91
 40268dc:	210b883a 	add	r5,r4,r4
 40268e0:	294b883a 	add	r5,r5,r5
 40268e4:	294b883a 	add	r5,r5,r5
 40268e8:	994b883a 	add	r5,r19,r5
 40268ec:	28800217 	ldw	r2,8(r5)
 40268f0:	02000034 	movhi	r8,0
 40268f4:	4201fa04 	addi	r8,r8,2024
 40268f8:	11406326 	beq	r2,r5,4026a88 <_malloc_r+0x6a4>
 40268fc:	01bfff04 	movi	r6,-4
 4026900:	11000117 	ldw	r4,4(r2)
 4026904:	2188703a 	and	r4,r4,r6
 4026908:	3900022e 	bgeu	r7,r4,4026914 <_malloc_r+0x530>
 402690c:	10800217 	ldw	r2,8(r2)
 4026910:	28bffb1e 	bne	r5,r2,4026900 <__flash_rwdata_start+0xffff603c>
 4026914:	11800317 	ldw	r6,12(r2)
 4026918:	99000117 	ldw	r4,4(r19)
 402691c:	81800315 	stw	r6,12(r16)
 4026920:	80800215 	stw	r2,8(r16)
 4026924:	34000215 	stw	r16,8(r6)
 4026928:	14000315 	stw	r16,12(r2)
 402692c:	003f2706 	br	40265cc <__flash_rwdata_start+0xffff5d08>
 4026930:	88c00054 	ori	r3,r17,1
 4026934:	80c00115 	stw	r3,4(r16)
 4026938:	8463883a 	add	r17,r16,r17
 402693c:	34400515 	stw	r17,20(r6)
 4026940:	34400415 	stw	r17,16(r6)
 4026944:	10c00054 	ori	r3,r2,1
 4026948:	8a400315 	stw	r9,12(r17)
 402694c:	8a400215 	stw	r9,8(r17)
 4026950:	88c00115 	stw	r3,4(r17)
 4026954:	88a3883a 	add	r17,r17,r2
 4026958:	88800015 	stw	r2,0(r17)
 402695c:	9009883a 	mov	r4,r18
 4026960:	402e50c0 	call	402e50c <__malloc_unlock>
 4026964:	80800204 	addi	r2,r16,8
 4026968:	003ecb06 	br	4026498 <__flash_rwdata_start+0xffff5bd4>
 402696c:	31000117 	ldw	r4,4(r6)
 4026970:	003f1606 	br	40265cc <__flash_rwdata_start+0xffff5d08>
 4026974:	63000044 	addi	r12,r12,1
 4026978:	608000cc 	andi	r2,r12,3
 402697c:	5ac00204 	addi	r11,r11,8
 4026980:	103f2a1e 	bne	r2,zero,402662c <__flash_rwdata_start+0xffff5d68>
 4026984:	00002106 	br	4026a0c <_malloc_r+0x628>
 4026988:	80800204 	addi	r2,r16,8
 402698c:	84000517 	ldw	r16,20(r16)
 4026990:	143eb31e 	bne	r2,r16,4026460 <__flash_rwdata_start+0xffff5b9c>
 4026994:	18c00084 	addi	r3,r3,2
 4026998:	003eec06 	br	402654c <__flash_rwdata_start+0xffff5c88>
 402699c:	8085883a 	add	r2,r16,r2
 40269a0:	10c00117 	ldw	r3,4(r2)
 40269a4:	81000317 	ldw	r4,12(r16)
 40269a8:	81400217 	ldw	r5,8(r16)
 40269ac:	18c00054 	ori	r3,r3,1
 40269b0:	10c00115 	stw	r3,4(r2)
 40269b4:	29000315 	stw	r4,12(r5)
 40269b8:	21400215 	stw	r5,8(r4)
 40269bc:	9009883a 	mov	r4,r18
 40269c0:	402e50c0 	call	402e50c <__malloc_unlock>
 40269c4:	80800204 	addi	r2,r16,8
 40269c8:	003eb306 	br	4026498 <__flash_rwdata_start+0xffff5bd4>
 40269cc:	19c016c4 	addi	r7,r3,91
 40269d0:	39cb883a 	add	r5,r7,r7
 40269d4:	003ec706 	br	40264f4 <__flash_rwdata_start+0xffff5c30>
 40269d8:	3804d1ba 	srli	r2,r7,6
 40269dc:	11000e04 	addi	r4,r2,56
 40269e0:	210b883a 	add	r5,r4,r4
 40269e4:	003fbe06 	br	40268e0 <__flash_rwdata_start+0xffff601c>
 40269e8:	84ff5d26 	beq	r16,r19,4026760 <__flash_rwdata_start+0xffff5e9c>
 40269ec:	9c000217 	ldw	r16,8(r19)
 40269f0:	00bfff04 	movi	r2,-4
 40269f4:	80c00117 	ldw	r3,4(r16)
 40269f8:	1886703a 	and	r3,r3,r2
 40269fc:	003f9706 	br	402685c <__flash_rwdata_start+0xffff5f98>
 4026a00:	52800017 	ldw	r10,0(r10)
 4026a04:	18ffffc4 	addi	r3,r3,-1
 4026a08:	50805c1e 	bne	r10,r2,4026b7c <_malloc_r+0x798>
 4026a0c:	190000cc 	andi	r4,r3,3
 4026a10:	50bffe04 	addi	r2,r10,-8
 4026a14:	203ffa1e 	bne	r4,zero,4026a00 <__flash_rwdata_start+0xffff613c>
 4026a18:	98800117 	ldw	r2,4(r19)
 4026a1c:	0146303a 	nor	r3,zero,r5
 4026a20:	1884703a 	and	r2,r3,r2
 4026a24:	98800115 	stw	r2,4(r19)
 4026a28:	294b883a 	add	r5,r5,r5
 4026a2c:	117f2e36 	bltu	r2,r5,40266e8 <__flash_rwdata_start+0xffff5e24>
 4026a30:	283f2d26 	beq	r5,zero,40266e8 <__flash_rwdata_start+0xffff5e24>
 4026a34:	1146703a 	and	r3,r2,r5
 4026a38:	1800521e 	bne	r3,zero,4026b84 <_malloc_r+0x7a0>
 4026a3c:	6007883a 	mov	r3,r12
 4026a40:	294b883a 	add	r5,r5,r5
 4026a44:	1148703a 	and	r4,r2,r5
 4026a48:	18c00104 	addi	r3,r3,4
 4026a4c:	203ffc26 	beq	r4,zero,4026a40 <__flash_rwdata_start+0xffff617c>
 4026a50:	003ef006 	br	4026614 <__flash_rwdata_start+0xffff5d50>
 4026a54:	00805504 	movi	r2,340
 4026a58:	10c01336 	bltu	r2,r3,4026aa8 <_malloc_r+0x6c4>
 4026a5c:	8806d3fa 	srli	r3,r17,15
 4026a60:	19c01dc4 	addi	r7,r3,119
 4026a64:	39cb883a 	add	r5,r7,r7
 4026a68:	003ea206 	br	40264f4 <__flash_rwdata_start+0xffff5c30>
 4026a6c:	00c40004 	movi	r3,4096
 4026a70:	003f4d06 	br	40267a8 <__flash_rwdata_start+0xffff5ee4>
 4026a74:	00800044 	movi	r2,1
 4026a78:	a0800115 	stw	r2,4(r20)
 4026a7c:	a021883a 	mov	r16,r20
 4026a80:	0007883a 	mov	r3,zero
 4026a84:	003f7506 	br	402685c <__flash_rwdata_start+0xffff5f98>
 4026a88:	200bd0ba 	srai	r5,r4,2
 4026a8c:	01800044 	movi	r6,1
 4026a90:	41000117 	ldw	r4,4(r8)
 4026a94:	314a983a 	sll	r5,r6,r5
 4026a98:	100d883a 	mov	r6,r2
 4026a9c:	2908b03a 	or	r4,r5,r4
 4026aa0:	41000115 	stw	r4,4(r8)
 4026aa4:	003f9d06 	br	402691c <__flash_rwdata_start+0xffff6058>
 4026aa8:	00815504 	movi	r2,1364
 4026aac:	10c01336 	bltu	r2,r3,4026afc <_malloc_r+0x718>
 4026ab0:	8806d4ba 	srli	r3,r17,18
 4026ab4:	19c01f04 	addi	r7,r3,124
 4026ab8:	39cb883a 	add	r5,r7,r7
 4026abc:	003e8d06 	br	40264f4 <__flash_rwdata_start+0xffff5c30>
 4026ac0:	ad400404 	addi	r21,r21,16
 4026ac4:	003f1d06 	br	402673c <__flash_rwdata_start+0xffff5e78>
 4026ac8:	01001504 	movi	r4,84
 4026acc:	20801c36 	bltu	r4,r2,4026b40 <_malloc_r+0x75c>
 4026ad0:	3804d33a 	srli	r2,r7,12
 4026ad4:	11001b84 	addi	r4,r2,110
 4026ad8:	210b883a 	add	r5,r4,r4
 4026adc:	003f8006 	br	40268e0 <__flash_rwdata_start+0xffff601c>
 4026ae0:	3083ffcc 	andi	r2,r6,4095
 4026ae4:	103f241e 	bne	r2,zero,4026778 <__flash_rwdata_start+0xffff5eb4>
 4026ae8:	99000217 	ldw	r4,8(r19)
 4026aec:	ad85883a 	add	r2,r21,r22
 4026af0:	10800054 	ori	r2,r2,1
 4026af4:	20800115 	stw	r2,4(r4)
 4026af8:	003f4a06 	br	4026824 <__flash_rwdata_start+0xffff5f60>
 4026afc:	01403f04 	movi	r5,252
 4026b00:	01c01f84 	movi	r7,126
 4026b04:	003e7b06 	br	40264f4 <__flash_rwdata_start+0xffff5c30>
 4026b08:	00c00044 	movi	r3,1
 4026b0c:	002b883a 	mov	r21,zero
 4026b10:	003f3006 	br	40267d4 <__flash_rwdata_start+0xffff5f10>
 4026b14:	00800034 	movhi	r2,0
 4026b18:	10878804 	addi	r2,r2,7712
 4026b1c:	15000015 	stw	r20,0(r2)
 4026b20:	003f1b06 	br	4026790 <__flash_rwdata_start+0xffff5ecc>
 4026b24:	9009883a 	mov	r4,r18
 4026b28:	81400204 	addi	r5,r16,8
 4026b2c:	40258080 	call	4025808 <_free_r>
 4026b30:	00800034 	movhi	r2,0
 4026b34:	1087a504 	addi	r2,r2,7828
 4026b38:	10c00017 	ldw	r3,0(r2)
 4026b3c:	003f3906 	br	4026824 <__flash_rwdata_start+0xffff5f60>
 4026b40:	01005504 	movi	r4,340
 4026b44:	20800436 	bltu	r4,r2,4026b58 <_malloc_r+0x774>
 4026b48:	3804d3fa 	srli	r2,r7,15
 4026b4c:	11001dc4 	addi	r4,r2,119
 4026b50:	210b883a 	add	r5,r4,r4
 4026b54:	003f6206 	br	40268e0 <__flash_rwdata_start+0xffff601c>
 4026b58:	01015504 	movi	r4,1364
 4026b5c:	20800436 	bltu	r4,r2,4026b70 <_malloc_r+0x78c>
 4026b60:	3804d4ba 	srli	r2,r7,18
 4026b64:	11001f04 	addi	r4,r2,124
 4026b68:	210b883a 	add	r5,r4,r4
 4026b6c:	003f5c06 	br	40268e0 <__flash_rwdata_start+0xffff601c>
 4026b70:	01403f04 	movi	r5,252
 4026b74:	01001f84 	movi	r4,126
 4026b78:	003f5906 	br	40268e0 <__flash_rwdata_start+0xffff601c>
 4026b7c:	98800117 	ldw	r2,4(r19)
 4026b80:	003fa906 	br	4026a28 <__flash_rwdata_start+0xffff6164>
 4026b84:	6007883a 	mov	r3,r12
 4026b88:	003ea206 	br	4026614 <__flash_rwdata_start+0xffff5d50>

04026b8c <memchr>:
 4026b8c:	208000cc 	andi	r2,r4,3
 4026b90:	280f883a 	mov	r7,r5
 4026b94:	10003526 	beq	r2,zero,4026c6c <memchr+0xe0>
 4026b98:	30bfffc4 	addi	r2,r6,-1
 4026b9c:	30001b26 	beq	r6,zero,4026c0c <memchr+0x80>
 4026ba0:	21800003 	ldbu	r6,0(r4)
 4026ba4:	28c03fcc 	andi	r3,r5,255
 4026ba8:	30c01a26 	beq	r6,r3,4026c14 <memchr+0x88>
 4026bac:	180d883a 	mov	r6,r3
 4026bb0:	00000406 	br	4026bc4 <memchr+0x38>
 4026bb4:	10001526 	beq	r2,zero,4026c0c <memchr+0x80>
 4026bb8:	20c00003 	ldbu	r3,0(r4)
 4026bbc:	10bfffc4 	addi	r2,r2,-1
 4026bc0:	19801426 	beq	r3,r6,4026c14 <memchr+0x88>
 4026bc4:	21000044 	addi	r4,r4,1
 4026bc8:	20c000cc 	andi	r3,r4,3
 4026bcc:	183ff91e 	bne	r3,zero,4026bb4 <__flash_rwdata_start+0xffff62f0>
 4026bd0:	024000c4 	movi	r9,3
 4026bd4:	48801136 	bltu	r9,r2,4026c1c <memchr+0x90>
 4026bd8:	10000c26 	beq	r2,zero,4026c0c <memchr+0x80>
 4026bdc:	20c00003 	ldbu	r3,0(r4)
 4026be0:	29403fcc 	andi	r5,r5,255
 4026be4:	19400b26 	beq	r3,r5,4026c14 <memchr+0x88>
 4026be8:	20c00044 	addi	r3,r4,1
 4026bec:	2085883a 	add	r2,r4,r2
 4026bf0:	39803fcc 	andi	r6,r7,255
 4026bf4:	00000306 	br	4026c04 <memchr+0x78>
 4026bf8:	18c00044 	addi	r3,r3,1
 4026bfc:	197fffc3 	ldbu	r5,-1(r3)
 4026c00:	29800426 	beq	r5,r6,4026c14 <memchr+0x88>
 4026c04:	1809883a 	mov	r4,r3
 4026c08:	18bffb1e 	bne	r3,r2,4026bf8 <__flash_rwdata_start+0xffff6334>
 4026c0c:	0005883a 	mov	r2,zero
 4026c10:	f800283a 	ret
 4026c14:	2005883a 	mov	r2,r4
 4026c18:	f800283a 	ret
 4026c1c:	28c03fcc 	andi	r3,r5,255
 4026c20:	1810923a 	slli	r8,r3,8
 4026c24:	02ffbff4 	movhi	r11,65279
 4026c28:	02a02074 	movhi	r10,32897
 4026c2c:	40c6b03a 	or	r3,r8,r3
 4026c30:	1810943a 	slli	r8,r3,16
 4026c34:	5affbfc4 	addi	r11,r11,-257
 4026c38:	52a02004 	addi	r10,r10,-32640
 4026c3c:	40d0b03a 	or	r8,r8,r3
 4026c40:	20c00017 	ldw	r3,0(r4)
 4026c44:	40c6f03a 	xor	r3,r8,r3
 4026c48:	1acd883a 	add	r6,r3,r11
 4026c4c:	00c6303a 	nor	r3,zero,r3
 4026c50:	30c6703a 	and	r3,r6,r3
 4026c54:	1a86703a 	and	r3,r3,r10
 4026c58:	183fdf1e 	bne	r3,zero,4026bd8 <__flash_rwdata_start+0xffff6314>
 4026c5c:	10bfff04 	addi	r2,r2,-4
 4026c60:	21000104 	addi	r4,r4,4
 4026c64:	48bff636 	bltu	r9,r2,4026c40 <__flash_rwdata_start+0xffff637c>
 4026c68:	003fdb06 	br	4026bd8 <__flash_rwdata_start+0xffff6314>
 4026c6c:	3005883a 	mov	r2,r6
 4026c70:	003fd706 	br	4026bd0 <__flash_rwdata_start+0xffff630c>

04026c74 <memmove>:
 4026c74:	2005883a 	mov	r2,r4
 4026c78:	29000b2e 	bgeu	r5,r4,4026ca8 <memmove+0x34>
 4026c7c:	298f883a 	add	r7,r5,r6
 4026c80:	21c0092e 	bgeu	r4,r7,4026ca8 <memmove+0x34>
 4026c84:	2187883a 	add	r3,r4,r6
 4026c88:	198bc83a 	sub	r5,r3,r6
 4026c8c:	30004b26 	beq	r6,zero,4026dbc <memmove+0x148>
 4026c90:	39ffffc4 	addi	r7,r7,-1
 4026c94:	39000003 	ldbu	r4,0(r7)
 4026c98:	18ffffc4 	addi	r3,r3,-1
 4026c9c:	19000005 	stb	r4,0(r3)
 4026ca0:	197ffb1e 	bne	r3,r5,4026c90 <__flash_rwdata_start+0xffff63cc>
 4026ca4:	f800283a 	ret
 4026ca8:	00c003c4 	movi	r3,15
 4026cac:	1980412e 	bgeu	r3,r6,4026db4 <memmove+0x140>
 4026cb0:	1146b03a 	or	r3,r2,r5
 4026cb4:	18c000cc 	andi	r3,r3,3
 4026cb8:	1800411e 	bne	r3,zero,4026dc0 <memmove+0x14c>
 4026cbc:	33fffc04 	addi	r15,r6,-16
 4026cc0:	781ed13a 	srli	r15,r15,4
 4026cc4:	28c00104 	addi	r3,r5,4
 4026cc8:	13400104 	addi	r13,r2,4
 4026ccc:	781c913a 	slli	r14,r15,4
 4026cd0:	2b000204 	addi	r12,r5,8
 4026cd4:	12c00204 	addi	r11,r2,8
 4026cd8:	73800504 	addi	r14,r14,20
 4026cdc:	2a800304 	addi	r10,r5,12
 4026ce0:	12400304 	addi	r9,r2,12
 4026ce4:	2b9d883a 	add	r14,r5,r14
 4026ce8:	2811883a 	mov	r8,r5
 4026cec:	100f883a 	mov	r7,r2
 4026cf0:	41000017 	ldw	r4,0(r8)
 4026cf4:	39c00404 	addi	r7,r7,16
 4026cf8:	18c00404 	addi	r3,r3,16
 4026cfc:	393ffc15 	stw	r4,-16(r7)
 4026d00:	193ffc17 	ldw	r4,-16(r3)
 4026d04:	6b400404 	addi	r13,r13,16
 4026d08:	5ac00404 	addi	r11,r11,16
 4026d0c:	693ffc15 	stw	r4,-16(r13)
 4026d10:	61000017 	ldw	r4,0(r12)
 4026d14:	4a400404 	addi	r9,r9,16
 4026d18:	42000404 	addi	r8,r8,16
 4026d1c:	593ffc15 	stw	r4,-16(r11)
 4026d20:	51000017 	ldw	r4,0(r10)
 4026d24:	63000404 	addi	r12,r12,16
 4026d28:	52800404 	addi	r10,r10,16
 4026d2c:	493ffc15 	stw	r4,-16(r9)
 4026d30:	1bbfef1e 	bne	r3,r14,4026cf0 <__flash_rwdata_start+0xffff642c>
 4026d34:	79000044 	addi	r4,r15,1
 4026d38:	2008913a 	slli	r4,r4,4
 4026d3c:	328003cc 	andi	r10,r6,15
 4026d40:	02c000c4 	movi	r11,3
 4026d44:	1107883a 	add	r3,r2,r4
 4026d48:	290b883a 	add	r5,r5,r4
 4026d4c:	5a801e2e 	bgeu	r11,r10,4026dc8 <memmove+0x154>
 4026d50:	1813883a 	mov	r9,r3
 4026d54:	2811883a 	mov	r8,r5
 4026d58:	500f883a 	mov	r7,r10
 4026d5c:	41000017 	ldw	r4,0(r8)
 4026d60:	4a400104 	addi	r9,r9,4
 4026d64:	39ffff04 	addi	r7,r7,-4
 4026d68:	493fff15 	stw	r4,-4(r9)
 4026d6c:	42000104 	addi	r8,r8,4
 4026d70:	59fffa36 	bltu	r11,r7,4026d5c <__flash_rwdata_start+0xffff6498>
 4026d74:	513fff04 	addi	r4,r10,-4
 4026d78:	2008d0ba 	srli	r4,r4,2
 4026d7c:	318000cc 	andi	r6,r6,3
 4026d80:	21000044 	addi	r4,r4,1
 4026d84:	2109883a 	add	r4,r4,r4
 4026d88:	2109883a 	add	r4,r4,r4
 4026d8c:	1907883a 	add	r3,r3,r4
 4026d90:	290b883a 	add	r5,r5,r4
 4026d94:	30000926 	beq	r6,zero,4026dbc <memmove+0x148>
 4026d98:	198d883a 	add	r6,r3,r6
 4026d9c:	29c00003 	ldbu	r7,0(r5)
 4026da0:	18c00044 	addi	r3,r3,1
 4026da4:	29400044 	addi	r5,r5,1
 4026da8:	19ffffc5 	stb	r7,-1(r3)
 4026dac:	19bffb1e 	bne	r3,r6,4026d9c <__flash_rwdata_start+0xffff64d8>
 4026db0:	f800283a 	ret
 4026db4:	1007883a 	mov	r3,r2
 4026db8:	003ff606 	br	4026d94 <__flash_rwdata_start+0xffff64d0>
 4026dbc:	f800283a 	ret
 4026dc0:	1007883a 	mov	r3,r2
 4026dc4:	003ff406 	br	4026d98 <__flash_rwdata_start+0xffff64d4>
 4026dc8:	500d883a 	mov	r6,r10
 4026dcc:	003ff106 	br	4026d94 <__flash_rwdata_start+0xffff64d0>

04026dd0 <memset>:
 4026dd0:	20c000cc 	andi	r3,r4,3
 4026dd4:	2005883a 	mov	r2,r4
 4026dd8:	18004326 	beq	r3,zero,4026ee8 <memset+0x118>
 4026ddc:	31ffffc4 	addi	r7,r6,-1
 4026de0:	30004026 	beq	r6,zero,4026ee4 <memset+0x114>
 4026de4:	2813883a 	mov	r9,r5
 4026de8:	200d883a 	mov	r6,r4
 4026dec:	2007883a 	mov	r3,r4
 4026df0:	00000406 	br	4026e04 <memset+0x34>
 4026df4:	3a3fffc4 	addi	r8,r7,-1
 4026df8:	31800044 	addi	r6,r6,1
 4026dfc:	38003926 	beq	r7,zero,4026ee4 <memset+0x114>
 4026e00:	400f883a 	mov	r7,r8
 4026e04:	18c00044 	addi	r3,r3,1
 4026e08:	32400005 	stb	r9,0(r6)
 4026e0c:	1a0000cc 	andi	r8,r3,3
 4026e10:	403ff81e 	bne	r8,zero,4026df4 <__flash_rwdata_start+0xffff6530>
 4026e14:	010000c4 	movi	r4,3
 4026e18:	21c02d2e 	bgeu	r4,r7,4026ed0 <memset+0x100>
 4026e1c:	29803fcc 	andi	r6,r5,255
 4026e20:	3008923a 	slli	r4,r6,8
 4026e24:	218cb03a 	or	r6,r4,r6
 4026e28:	3008943a 	slli	r4,r6,16
 4026e2c:	218cb03a 	or	r6,r4,r6
 4026e30:	010003c4 	movi	r4,15
 4026e34:	21c0182e 	bgeu	r4,r7,4026e98 <memset+0xc8>
 4026e38:	3b3ffc04 	addi	r12,r7,-16
 4026e3c:	6018d13a 	srli	r12,r12,4
 4026e40:	1a000104 	addi	r8,r3,4
 4026e44:	1ac00204 	addi	r11,r3,8
 4026e48:	6008913a 	slli	r4,r12,4
 4026e4c:	1a800304 	addi	r10,r3,12
 4026e50:	1813883a 	mov	r9,r3
 4026e54:	21000504 	addi	r4,r4,20
 4026e58:	1909883a 	add	r4,r3,r4
 4026e5c:	49800015 	stw	r6,0(r9)
 4026e60:	41800015 	stw	r6,0(r8)
 4026e64:	59800015 	stw	r6,0(r11)
 4026e68:	51800015 	stw	r6,0(r10)
 4026e6c:	42000404 	addi	r8,r8,16
 4026e70:	4a400404 	addi	r9,r9,16
 4026e74:	5ac00404 	addi	r11,r11,16
 4026e78:	52800404 	addi	r10,r10,16
 4026e7c:	413ff71e 	bne	r8,r4,4026e5c <__flash_rwdata_start+0xffff6598>
 4026e80:	63000044 	addi	r12,r12,1
 4026e84:	6018913a 	slli	r12,r12,4
 4026e88:	39c003cc 	andi	r7,r7,15
 4026e8c:	010000c4 	movi	r4,3
 4026e90:	1b07883a 	add	r3,r3,r12
 4026e94:	21c00e2e 	bgeu	r4,r7,4026ed0 <memset+0x100>
 4026e98:	1813883a 	mov	r9,r3
 4026e9c:	3811883a 	mov	r8,r7
 4026ea0:	010000c4 	movi	r4,3
 4026ea4:	49800015 	stw	r6,0(r9)
 4026ea8:	423fff04 	addi	r8,r8,-4
 4026eac:	4a400104 	addi	r9,r9,4
 4026eb0:	223ffc36 	bltu	r4,r8,4026ea4 <__flash_rwdata_start+0xffff65e0>
 4026eb4:	393fff04 	addi	r4,r7,-4
 4026eb8:	2008d0ba 	srli	r4,r4,2
 4026ebc:	39c000cc 	andi	r7,r7,3
 4026ec0:	21000044 	addi	r4,r4,1
 4026ec4:	2109883a 	add	r4,r4,r4
 4026ec8:	2109883a 	add	r4,r4,r4
 4026ecc:	1907883a 	add	r3,r3,r4
 4026ed0:	38000426 	beq	r7,zero,4026ee4 <memset+0x114>
 4026ed4:	19cf883a 	add	r7,r3,r7
 4026ed8:	19400005 	stb	r5,0(r3)
 4026edc:	18c00044 	addi	r3,r3,1
 4026ee0:	19fffd1e 	bne	r3,r7,4026ed8 <__flash_rwdata_start+0xffff6614>
 4026ee4:	f800283a 	ret
 4026ee8:	2007883a 	mov	r3,r4
 4026eec:	300f883a 	mov	r7,r6
 4026ef0:	003fc806 	br	4026e14 <__flash_rwdata_start+0xffff6550>

04026ef4 <_Balloc>:
 4026ef4:	20801317 	ldw	r2,76(r4)
 4026ef8:	defffc04 	addi	sp,sp,-16
 4026efc:	dc400115 	stw	r17,4(sp)
 4026f00:	dc000015 	stw	r16,0(sp)
 4026f04:	dfc00315 	stw	ra,12(sp)
 4026f08:	dc800215 	stw	r18,8(sp)
 4026f0c:	2023883a 	mov	r17,r4
 4026f10:	2821883a 	mov	r16,r5
 4026f14:	10000f26 	beq	r2,zero,4026f54 <_Balloc+0x60>
 4026f18:	8407883a 	add	r3,r16,r16
 4026f1c:	18c7883a 	add	r3,r3,r3
 4026f20:	10c7883a 	add	r3,r2,r3
 4026f24:	18800017 	ldw	r2,0(r3)
 4026f28:	10001126 	beq	r2,zero,4026f70 <_Balloc+0x7c>
 4026f2c:	11000017 	ldw	r4,0(r2)
 4026f30:	19000015 	stw	r4,0(r3)
 4026f34:	10000415 	stw	zero,16(r2)
 4026f38:	10000315 	stw	zero,12(r2)
 4026f3c:	dfc00317 	ldw	ra,12(sp)
 4026f40:	dc800217 	ldw	r18,8(sp)
 4026f44:	dc400117 	ldw	r17,4(sp)
 4026f48:	dc000017 	ldw	r16,0(sp)
 4026f4c:	dec00404 	addi	sp,sp,16
 4026f50:	f800283a 	ret
 4026f54:	01400104 	movi	r5,4
 4026f58:	01800844 	movi	r6,33
 4026f5c:	4029fb40 	call	4029fb4 <_calloc_r>
 4026f60:	88801315 	stw	r2,76(r17)
 4026f64:	103fec1e 	bne	r2,zero,4026f18 <__flash_rwdata_start+0xffff6654>
 4026f68:	0005883a 	mov	r2,zero
 4026f6c:	003ff306 	br	4026f3c <__flash_rwdata_start+0xffff6678>
 4026f70:	01400044 	movi	r5,1
 4026f74:	2c24983a 	sll	r18,r5,r16
 4026f78:	8809883a 	mov	r4,r17
 4026f7c:	91800144 	addi	r6,r18,5
 4026f80:	318d883a 	add	r6,r6,r6
 4026f84:	318d883a 	add	r6,r6,r6
 4026f88:	4029fb40 	call	4029fb4 <_calloc_r>
 4026f8c:	103ff626 	beq	r2,zero,4026f68 <__flash_rwdata_start+0xffff66a4>
 4026f90:	14000115 	stw	r16,4(r2)
 4026f94:	14800215 	stw	r18,8(r2)
 4026f98:	003fe606 	br	4026f34 <__flash_rwdata_start+0xffff6670>

04026f9c <_Bfree>:
 4026f9c:	28000826 	beq	r5,zero,4026fc0 <_Bfree+0x24>
 4026fa0:	28c00117 	ldw	r3,4(r5)
 4026fa4:	20801317 	ldw	r2,76(r4)
 4026fa8:	18c7883a 	add	r3,r3,r3
 4026fac:	18c7883a 	add	r3,r3,r3
 4026fb0:	10c5883a 	add	r2,r2,r3
 4026fb4:	10c00017 	ldw	r3,0(r2)
 4026fb8:	28c00015 	stw	r3,0(r5)
 4026fbc:	11400015 	stw	r5,0(r2)
 4026fc0:	f800283a 	ret

04026fc4 <__multadd>:
 4026fc4:	defff704 	addi	sp,sp,-36
 4026fc8:	dc800215 	stw	r18,8(sp)
 4026fcc:	2c800417 	ldw	r18,16(r5)
 4026fd0:	ddc00715 	stw	r23,28(sp)
 4026fd4:	dd800615 	stw	r22,24(sp)
 4026fd8:	dd000415 	stw	r20,16(sp)
 4026fdc:	dcc00315 	stw	r19,12(sp)
 4026fe0:	dc400115 	stw	r17,4(sp)
 4026fe4:	dc000015 	stw	r16,0(sp)
 4026fe8:	dfc00815 	stw	ra,32(sp)
 4026fec:	dd400515 	stw	r21,20(sp)
 4026ff0:	2827883a 	mov	r19,r5
 4026ff4:	2029883a 	mov	r20,r4
 4026ff8:	3023883a 	mov	r17,r6
 4026ffc:	3821883a 	mov	r16,r7
 4027000:	2d800504 	addi	r22,r5,20
 4027004:	002f883a 	mov	r23,zero
 4027008:	b5400017 	ldw	r21,0(r22)
 402700c:	880b883a 	mov	r5,r17
 4027010:	bdc00044 	addi	r23,r23,1
 4027014:	a93fffcc 	andi	r4,r21,65535
 4027018:	402110c0 	call	402110c <__mulsi3>
 402701c:	1421883a 	add	r16,r2,r16
 4027020:	a808d43a 	srli	r4,r21,16
 4027024:	802ad43a 	srli	r21,r16,16
 4027028:	880b883a 	mov	r5,r17
 402702c:	402110c0 	call	402110c <__mulsi3>
 4027030:	a88f883a 	add	r7,r21,r2
 4027034:	3804943a 	slli	r2,r7,16
 4027038:	80ffffcc 	andi	r3,r16,65535
 402703c:	b5800104 	addi	r22,r22,4
 4027040:	10c7883a 	add	r3,r2,r3
 4027044:	b0ffff15 	stw	r3,-4(r22)
 4027048:	3820d43a 	srli	r16,r7,16
 402704c:	bcbfee16 	blt	r23,r18,4027008 <__flash_rwdata_start+0xffff6744>
 4027050:	80000926 	beq	r16,zero,4027078 <__multadd+0xb4>
 4027054:	98800217 	ldw	r2,8(r19)
 4027058:	9080130e 	bge	r18,r2,40270a8 <__multadd+0xe4>
 402705c:	90800144 	addi	r2,r18,5
 4027060:	1085883a 	add	r2,r2,r2
 4027064:	1085883a 	add	r2,r2,r2
 4027068:	9885883a 	add	r2,r19,r2
 402706c:	14000015 	stw	r16,0(r2)
 4027070:	94800044 	addi	r18,r18,1
 4027074:	9c800415 	stw	r18,16(r19)
 4027078:	9805883a 	mov	r2,r19
 402707c:	dfc00817 	ldw	ra,32(sp)
 4027080:	ddc00717 	ldw	r23,28(sp)
 4027084:	dd800617 	ldw	r22,24(sp)
 4027088:	dd400517 	ldw	r21,20(sp)
 402708c:	dd000417 	ldw	r20,16(sp)
 4027090:	dcc00317 	ldw	r19,12(sp)
 4027094:	dc800217 	ldw	r18,8(sp)
 4027098:	dc400117 	ldw	r17,4(sp)
 402709c:	dc000017 	ldw	r16,0(sp)
 40270a0:	dec00904 	addi	sp,sp,36
 40270a4:	f800283a 	ret
 40270a8:	99400117 	ldw	r5,4(r19)
 40270ac:	a009883a 	mov	r4,r20
 40270b0:	29400044 	addi	r5,r5,1
 40270b4:	4026ef40 	call	4026ef4 <_Balloc>
 40270b8:	99800417 	ldw	r6,16(r19)
 40270bc:	11000304 	addi	r4,r2,12
 40270c0:	99400304 	addi	r5,r19,12
 40270c4:	31800084 	addi	r6,r6,2
 40270c8:	318d883a 	add	r6,r6,r6
 40270cc:	318d883a 	add	r6,r6,r6
 40270d0:	1023883a 	mov	r17,r2
 40270d4:	40211340 	call	4021134 <memcpy>
 40270d8:	98000a26 	beq	r19,zero,4027104 <__multadd+0x140>
 40270dc:	99000117 	ldw	r4,4(r19)
 40270e0:	a0c01317 	ldw	r3,76(r20)
 40270e4:	2109883a 	add	r4,r4,r4
 40270e8:	2109883a 	add	r4,r4,r4
 40270ec:	1907883a 	add	r3,r3,r4
 40270f0:	18800017 	ldw	r2,0(r3)
 40270f4:	98800015 	stw	r2,0(r19)
 40270f8:	1cc00015 	stw	r19,0(r3)
 40270fc:	8827883a 	mov	r19,r17
 4027100:	003fd606 	br	402705c <__flash_rwdata_start+0xffff6798>
 4027104:	8827883a 	mov	r19,r17
 4027108:	003fd406 	br	402705c <__flash_rwdata_start+0xffff6798>

0402710c <__s2b>:
 402710c:	defff904 	addi	sp,sp,-28
 4027110:	dc400115 	stw	r17,4(sp)
 4027114:	dc000015 	stw	r16,0(sp)
 4027118:	2023883a 	mov	r17,r4
 402711c:	2821883a 	mov	r16,r5
 4027120:	39000204 	addi	r4,r7,8
 4027124:	01400244 	movi	r5,9
 4027128:	dcc00315 	stw	r19,12(sp)
 402712c:	dc800215 	stw	r18,8(sp)
 4027130:	dfc00615 	stw	ra,24(sp)
 4027134:	dd400515 	stw	r21,20(sp)
 4027138:	dd000415 	stw	r20,16(sp)
 402713c:	3825883a 	mov	r18,r7
 4027140:	3027883a 	mov	r19,r6
 4027144:	402104c0 	call	402104c <__divsi3>
 4027148:	00c00044 	movi	r3,1
 402714c:	000b883a 	mov	r5,zero
 4027150:	1880030e 	bge	r3,r2,4027160 <__s2b+0x54>
 4027154:	18c7883a 	add	r3,r3,r3
 4027158:	29400044 	addi	r5,r5,1
 402715c:	18bffd16 	blt	r3,r2,4027154 <__flash_rwdata_start+0xffff6890>
 4027160:	8809883a 	mov	r4,r17
 4027164:	4026ef40 	call	4026ef4 <_Balloc>
 4027168:	d8c00717 	ldw	r3,28(sp)
 402716c:	10c00515 	stw	r3,20(r2)
 4027170:	00c00044 	movi	r3,1
 4027174:	10c00415 	stw	r3,16(r2)
 4027178:	00c00244 	movi	r3,9
 402717c:	1cc0210e 	bge	r3,r19,4027204 <__s2b+0xf8>
 4027180:	80eb883a 	add	r21,r16,r3
 4027184:	a829883a 	mov	r20,r21
 4027188:	84e1883a 	add	r16,r16,r19
 402718c:	a1c00007 	ldb	r7,0(r20)
 4027190:	8809883a 	mov	r4,r17
 4027194:	a5000044 	addi	r20,r20,1
 4027198:	100b883a 	mov	r5,r2
 402719c:	01800284 	movi	r6,10
 40271a0:	39fff404 	addi	r7,r7,-48
 40271a4:	4026fc40 	call	4026fc4 <__multadd>
 40271a8:	a43ff81e 	bne	r20,r16,402718c <__flash_rwdata_start+0xffff68c8>
 40271ac:	ace1883a 	add	r16,r21,r19
 40271b0:	843ffe04 	addi	r16,r16,-8
 40271b4:	9c800a0e 	bge	r19,r18,40271e0 <__s2b+0xd4>
 40271b8:	94e5c83a 	sub	r18,r18,r19
 40271bc:	84a5883a 	add	r18,r16,r18
 40271c0:	81c00007 	ldb	r7,0(r16)
 40271c4:	8809883a 	mov	r4,r17
 40271c8:	84000044 	addi	r16,r16,1
 40271cc:	100b883a 	mov	r5,r2
 40271d0:	01800284 	movi	r6,10
 40271d4:	39fff404 	addi	r7,r7,-48
 40271d8:	4026fc40 	call	4026fc4 <__multadd>
 40271dc:	84bff81e 	bne	r16,r18,40271c0 <__flash_rwdata_start+0xffff68fc>
 40271e0:	dfc00617 	ldw	ra,24(sp)
 40271e4:	dd400517 	ldw	r21,20(sp)
 40271e8:	dd000417 	ldw	r20,16(sp)
 40271ec:	dcc00317 	ldw	r19,12(sp)
 40271f0:	dc800217 	ldw	r18,8(sp)
 40271f4:	dc400117 	ldw	r17,4(sp)
 40271f8:	dc000017 	ldw	r16,0(sp)
 40271fc:	dec00704 	addi	sp,sp,28
 4027200:	f800283a 	ret
 4027204:	84000284 	addi	r16,r16,10
 4027208:	1827883a 	mov	r19,r3
 402720c:	003fe906 	br	40271b4 <__flash_rwdata_start+0xffff68f0>

04027210 <__hi0bits>:
 4027210:	20bfffec 	andhi	r2,r4,65535
 4027214:	1000141e 	bne	r2,zero,4027268 <__hi0bits+0x58>
 4027218:	2008943a 	slli	r4,r4,16
 402721c:	00800404 	movi	r2,16
 4027220:	20ffc02c 	andhi	r3,r4,65280
 4027224:	1800021e 	bne	r3,zero,4027230 <__hi0bits+0x20>
 4027228:	2008923a 	slli	r4,r4,8
 402722c:	10800204 	addi	r2,r2,8
 4027230:	20fc002c 	andhi	r3,r4,61440
 4027234:	1800021e 	bne	r3,zero,4027240 <__hi0bits+0x30>
 4027238:	2008913a 	slli	r4,r4,4
 402723c:	10800104 	addi	r2,r2,4
 4027240:	20f0002c 	andhi	r3,r4,49152
 4027244:	1800031e 	bne	r3,zero,4027254 <__hi0bits+0x44>
 4027248:	2109883a 	add	r4,r4,r4
 402724c:	10800084 	addi	r2,r2,2
 4027250:	2109883a 	add	r4,r4,r4
 4027254:	20000316 	blt	r4,zero,4027264 <__hi0bits+0x54>
 4027258:	2110002c 	andhi	r4,r4,16384
 402725c:	2000041e 	bne	r4,zero,4027270 <__hi0bits+0x60>
 4027260:	00800804 	movi	r2,32
 4027264:	f800283a 	ret
 4027268:	0005883a 	mov	r2,zero
 402726c:	003fec06 	br	4027220 <__flash_rwdata_start+0xffff695c>
 4027270:	10800044 	addi	r2,r2,1
 4027274:	f800283a 	ret

04027278 <__lo0bits>:
 4027278:	20c00017 	ldw	r3,0(r4)
 402727c:	188001cc 	andi	r2,r3,7
 4027280:	10000826 	beq	r2,zero,40272a4 <__lo0bits+0x2c>
 4027284:	1880004c 	andi	r2,r3,1
 4027288:	1000211e 	bne	r2,zero,4027310 <__lo0bits+0x98>
 402728c:	1880008c 	andi	r2,r3,2
 4027290:	1000211e 	bne	r2,zero,4027318 <__lo0bits+0xa0>
 4027294:	1806d0ba 	srli	r3,r3,2
 4027298:	00800084 	movi	r2,2
 402729c:	20c00015 	stw	r3,0(r4)
 40272a0:	f800283a 	ret
 40272a4:	18bfffcc 	andi	r2,r3,65535
 40272a8:	10001326 	beq	r2,zero,40272f8 <__lo0bits+0x80>
 40272ac:	0005883a 	mov	r2,zero
 40272b0:	19403fcc 	andi	r5,r3,255
 40272b4:	2800021e 	bne	r5,zero,40272c0 <__lo0bits+0x48>
 40272b8:	1806d23a 	srli	r3,r3,8
 40272bc:	10800204 	addi	r2,r2,8
 40272c0:	194003cc 	andi	r5,r3,15
 40272c4:	2800021e 	bne	r5,zero,40272d0 <__lo0bits+0x58>
 40272c8:	1806d13a 	srli	r3,r3,4
 40272cc:	10800104 	addi	r2,r2,4
 40272d0:	194000cc 	andi	r5,r3,3
 40272d4:	2800021e 	bne	r5,zero,40272e0 <__lo0bits+0x68>
 40272d8:	1806d0ba 	srli	r3,r3,2
 40272dc:	10800084 	addi	r2,r2,2
 40272e0:	1940004c 	andi	r5,r3,1
 40272e4:	2800081e 	bne	r5,zero,4027308 <__lo0bits+0x90>
 40272e8:	1806d07a 	srli	r3,r3,1
 40272ec:	1800051e 	bne	r3,zero,4027304 <__lo0bits+0x8c>
 40272f0:	00800804 	movi	r2,32
 40272f4:	f800283a 	ret
 40272f8:	1806d43a 	srli	r3,r3,16
 40272fc:	00800404 	movi	r2,16
 4027300:	003feb06 	br	40272b0 <__flash_rwdata_start+0xffff69ec>
 4027304:	10800044 	addi	r2,r2,1
 4027308:	20c00015 	stw	r3,0(r4)
 402730c:	f800283a 	ret
 4027310:	0005883a 	mov	r2,zero
 4027314:	f800283a 	ret
 4027318:	1806d07a 	srli	r3,r3,1
 402731c:	00800044 	movi	r2,1
 4027320:	20c00015 	stw	r3,0(r4)
 4027324:	f800283a 	ret

04027328 <__i2b>:
 4027328:	defffd04 	addi	sp,sp,-12
 402732c:	dc000015 	stw	r16,0(sp)
 4027330:	04000044 	movi	r16,1
 4027334:	dc400115 	stw	r17,4(sp)
 4027338:	2823883a 	mov	r17,r5
 402733c:	800b883a 	mov	r5,r16
 4027340:	dfc00215 	stw	ra,8(sp)
 4027344:	4026ef40 	call	4026ef4 <_Balloc>
 4027348:	14400515 	stw	r17,20(r2)
 402734c:	14000415 	stw	r16,16(r2)
 4027350:	dfc00217 	ldw	ra,8(sp)
 4027354:	dc400117 	ldw	r17,4(sp)
 4027358:	dc000017 	ldw	r16,0(sp)
 402735c:	dec00304 	addi	sp,sp,12
 4027360:	f800283a 	ret

04027364 <__multiply>:
 4027364:	deffef04 	addi	sp,sp,-68
 4027368:	dc400815 	stw	r17,32(sp)
 402736c:	dc000715 	stw	r16,28(sp)
 4027370:	2c400417 	ldw	r17,16(r5)
 4027374:	34000417 	ldw	r16,16(r6)
 4027378:	dd800d15 	stw	r22,52(sp)
 402737c:	dc800915 	stw	r18,36(sp)
 4027380:	dfc01015 	stw	ra,64(sp)
 4027384:	df000f15 	stw	fp,60(sp)
 4027388:	ddc00e15 	stw	r23,56(sp)
 402738c:	dd400c15 	stw	r21,48(sp)
 4027390:	dd000b15 	stw	r20,44(sp)
 4027394:	dcc00a15 	stw	r19,40(sp)
 4027398:	2825883a 	mov	r18,r5
 402739c:	302d883a 	mov	r22,r6
 40273a0:	8c009116 	blt	r17,r16,40275e8 <__multiply+0x284>
 40273a4:	8005883a 	mov	r2,r16
 40273a8:	8821883a 	mov	r16,r17
 40273ac:	1023883a 	mov	r17,r2
 40273b0:	90800217 	ldw	r2,8(r18)
 40273b4:	8447883a 	add	r3,r16,r17
 40273b8:	d8c00215 	stw	r3,8(sp)
 40273bc:	91400117 	ldw	r5,4(r18)
 40273c0:	10c0010e 	bge	r2,r3,40273c8 <__multiply+0x64>
 40273c4:	29400044 	addi	r5,r5,1
 40273c8:	4026ef40 	call	4026ef4 <_Balloc>
 40273cc:	d8c00217 	ldw	r3,8(sp)
 40273d0:	d8800615 	stw	r2,24(sp)
 40273d4:	18eb883a 	add	r21,r3,r3
 40273d8:	ad6b883a 	add	r21,r21,r21
 40273dc:	10c00504 	addi	r3,r2,20
 40273e0:	1d6b883a 	add	r21,r3,r21
 40273e4:	d8c00115 	stw	r3,4(sp)
 40273e8:	dd400315 	stw	r21,12(sp)
 40273ec:	1805883a 	mov	r2,r3
 40273f0:	1d40042e 	bgeu	r3,r21,4027404 <__multiply+0xa0>
 40273f4:	d8c00317 	ldw	r3,12(sp)
 40273f8:	10000015 	stw	zero,0(r2)
 40273fc:	10800104 	addi	r2,r2,4
 4027400:	10fffc36 	bltu	r2,r3,40273f4 <__flash_rwdata_start+0xffff6b30>
 4027404:	8c63883a 	add	r17,r17,r17
 4027408:	b5800504 	addi	r22,r22,20
 402740c:	8c63883a 	add	r17,r17,r17
 4027410:	94800504 	addi	r18,r18,20
 4027414:	8421883a 	add	r16,r16,r16
 4027418:	b463883a 	add	r17,r22,r17
 402741c:	8421883a 	add	r16,r16,r16
 4027420:	dd800015 	stw	r22,0(sp)
 4027424:	dc800415 	stw	r18,16(sp)
 4027428:	dc400515 	stw	r17,20(sp)
 402742c:	9429883a 	add	r20,r18,r16
 4027430:	b4404f2e 	bgeu	r22,r17,4027570 <__multiply+0x20c>
 4027434:	d8c00017 	ldw	r3,0(sp)
 4027438:	1c800017 	ldw	r18,0(r3)
 402743c:	943fffcc 	andi	r16,r18,65535
 4027440:	80001e26 	beq	r16,zero,40274bc <__multiply+0x158>
 4027444:	dd800117 	ldw	r22,4(sp)
 4027448:	dd400417 	ldw	r21,16(sp)
 402744c:	0025883a 	mov	r18,zero
 4027450:	adc00017 	ldw	r23,0(r21)
 4027454:	b4c00017 	ldw	r19,0(r22)
 4027458:	800b883a 	mov	r5,r16
 402745c:	b93fffcc 	andi	r4,r23,65535
 4027460:	402110c0 	call	402110c <__mulsi3>
 4027464:	9c7fffcc 	andi	r17,r19,65535
 4027468:	8885883a 	add	r2,r17,r2
 402746c:	b808d43a 	srli	r4,r23,16
 4027470:	14a3883a 	add	r17,r2,r18
 4027474:	9826d43a 	srli	r19,r19,16
 4027478:	8824d43a 	srli	r18,r17,16
 402747c:	800b883a 	mov	r5,r16
 4027480:	402110c0 	call	402110c <__mulsi3>
 4027484:	9885883a 	add	r2,r19,r2
 4027488:	14a7883a 	add	r19,r2,r18
 402748c:	88ffffcc 	andi	r3,r17,65535
 4027490:	9822943a 	slli	r17,r19,16
 4027494:	ad400104 	addi	r21,r21,4
 4027498:	b005883a 	mov	r2,r22
 402749c:	88c6b03a 	or	r3,r17,r3
 40274a0:	b0c00015 	stw	r3,0(r22)
 40274a4:	9824d43a 	srli	r18,r19,16
 40274a8:	b5800104 	addi	r22,r22,4
 40274ac:	ad3fe836 	bltu	r21,r20,4027450 <__flash_rwdata_start+0xffff6b8c>
 40274b0:	d8c00017 	ldw	r3,0(sp)
 40274b4:	14800115 	stw	r18,4(r2)
 40274b8:	1c800017 	ldw	r18,0(r3)
 40274bc:	9024d43a 	srli	r18,r18,16
 40274c0:	90002226 	beq	r18,zero,402754c <__multiply+0x1e8>
 40274c4:	d8c00117 	ldw	r3,4(sp)
 40274c8:	dd800417 	ldw	r22,16(sp)
 40274cc:	002f883a 	mov	r23,zero
 40274d0:	1f000017 	ldw	fp,0(r3)
 40274d4:	1823883a 	mov	r17,r3
 40274d8:	182b883a 	mov	r21,r3
 40274dc:	e021883a 	mov	r16,fp
 40274e0:	00000106 	br	40274e8 <__multiply+0x184>
 40274e4:	982b883a 	mov	r21,r19
 40274e8:	b100000b 	ldhu	r4,0(r22)
 40274ec:	8020d43a 	srli	r16,r16,16
 40274f0:	900b883a 	mov	r5,r18
 40274f4:	402110c0 	call	402110c <__mulsi3>
 40274f8:	1405883a 	add	r2,r2,r16
 40274fc:	15ef883a 	add	r23,r2,r23
 4027500:	b804943a 	slli	r2,r23,16
 4027504:	e0ffffcc 	andi	r3,fp,65535
 4027508:	8c400104 	addi	r17,r17,4
 402750c:	10c6b03a 	or	r3,r2,r3
 4027510:	88ffff15 	stw	r3,-4(r17)
 4027514:	b5800104 	addi	r22,r22,4
 4027518:	b13fff17 	ldw	r4,-4(r22)
 402751c:	acc00104 	addi	r19,r21,4
 4027520:	900b883a 	mov	r5,r18
 4027524:	2008d43a 	srli	r4,r4,16
 4027528:	9c000017 	ldw	r16,0(r19)
 402752c:	402110c0 	call	402110c <__mulsi3>
 4027530:	b806d43a 	srli	r3,r23,16
 4027534:	813fffcc 	andi	r4,r16,65535
 4027538:	1105883a 	add	r2,r2,r4
 402753c:	10f9883a 	add	fp,r2,r3
 4027540:	e02ed43a 	srli	r23,fp,16
 4027544:	b53fe736 	bltu	r22,r20,40274e4 <__flash_rwdata_start+0xffff6c20>
 4027548:	af000115 	stw	fp,4(r21)
 402754c:	d8c00017 	ldw	r3,0(sp)
 4027550:	d9000517 	ldw	r4,20(sp)
 4027554:	18c00104 	addi	r3,r3,4
 4027558:	d8c00015 	stw	r3,0(sp)
 402755c:	d8c00117 	ldw	r3,4(sp)
 4027560:	18c00104 	addi	r3,r3,4
 4027564:	d8c00115 	stw	r3,4(sp)
 4027568:	d8c00017 	ldw	r3,0(sp)
 402756c:	193fb136 	bltu	r3,r4,4027434 <__flash_rwdata_start+0xffff6b70>
 4027570:	d8c00217 	ldw	r3,8(sp)
 4027574:	00c00c0e 	bge	zero,r3,40275a8 <__multiply+0x244>
 4027578:	d8c00317 	ldw	r3,12(sp)
 402757c:	18bfff17 	ldw	r2,-4(r3)
 4027580:	1d7fff04 	addi	r21,r3,-4
 4027584:	10000326 	beq	r2,zero,4027594 <__multiply+0x230>
 4027588:	00000706 	br	40275a8 <__multiply+0x244>
 402758c:	a8800017 	ldw	r2,0(r21)
 4027590:	1000051e 	bne	r2,zero,40275a8 <__multiply+0x244>
 4027594:	d8c00217 	ldw	r3,8(sp)
 4027598:	ad7fff04 	addi	r21,r21,-4
 402759c:	18ffffc4 	addi	r3,r3,-1
 40275a0:	d8c00215 	stw	r3,8(sp)
 40275a4:	183ff91e 	bne	r3,zero,402758c <__flash_rwdata_start+0xffff6cc8>
 40275a8:	d8c00617 	ldw	r3,24(sp)
 40275ac:	d9000217 	ldw	r4,8(sp)
 40275b0:	1805883a 	mov	r2,r3
 40275b4:	19000415 	stw	r4,16(r3)
 40275b8:	dfc01017 	ldw	ra,64(sp)
 40275bc:	df000f17 	ldw	fp,60(sp)
 40275c0:	ddc00e17 	ldw	r23,56(sp)
 40275c4:	dd800d17 	ldw	r22,52(sp)
 40275c8:	dd400c17 	ldw	r21,48(sp)
 40275cc:	dd000b17 	ldw	r20,44(sp)
 40275d0:	dcc00a17 	ldw	r19,40(sp)
 40275d4:	dc800917 	ldw	r18,36(sp)
 40275d8:	dc400817 	ldw	r17,32(sp)
 40275dc:	dc000717 	ldw	r16,28(sp)
 40275e0:	dec01104 	addi	sp,sp,68
 40275e4:	f800283a 	ret
 40275e8:	3025883a 	mov	r18,r6
 40275ec:	282d883a 	mov	r22,r5
 40275f0:	003f6f06 	br	40273b0 <__flash_rwdata_start+0xffff6aec>

040275f4 <__pow5mult>:
 40275f4:	defffa04 	addi	sp,sp,-24
 40275f8:	dcc00315 	stw	r19,12(sp)
 40275fc:	dc800215 	stw	r18,8(sp)
 4027600:	dc000015 	stw	r16,0(sp)
 4027604:	dfc00515 	stw	ra,20(sp)
 4027608:	dd000415 	stw	r20,16(sp)
 402760c:	dc400115 	stw	r17,4(sp)
 4027610:	308000cc 	andi	r2,r6,3
 4027614:	3021883a 	mov	r16,r6
 4027618:	2027883a 	mov	r19,r4
 402761c:	2825883a 	mov	r18,r5
 4027620:	10002e1e 	bne	r2,zero,40276dc <__pow5mult+0xe8>
 4027624:	8021d0ba 	srai	r16,r16,2
 4027628:	80001a26 	beq	r16,zero,4027694 <__pow5mult+0xa0>
 402762c:	9c401217 	ldw	r17,72(r19)
 4027630:	8800061e 	bne	r17,zero,402764c <__pow5mult+0x58>
 4027634:	00003406 	br	4027708 <__pow5mult+0x114>
 4027638:	8021d07a 	srai	r16,r16,1
 402763c:	80001526 	beq	r16,zero,4027694 <__pow5mult+0xa0>
 4027640:	88800017 	ldw	r2,0(r17)
 4027644:	10001c26 	beq	r2,zero,40276b8 <__pow5mult+0xc4>
 4027648:	1023883a 	mov	r17,r2
 402764c:	80c0004c 	andi	r3,r16,1
 4027650:	183ff926 	beq	r3,zero,4027638 <__flash_rwdata_start+0xffff6d74>
 4027654:	900b883a 	mov	r5,r18
 4027658:	880d883a 	mov	r6,r17
 402765c:	9809883a 	mov	r4,r19
 4027660:	40273640 	call	4027364 <__multiply>
 4027664:	90001b26 	beq	r18,zero,40276d4 <__pow5mult+0xe0>
 4027668:	91c00117 	ldw	r7,4(r18)
 402766c:	98c01317 	ldw	r3,76(r19)
 4027670:	8021d07a 	srai	r16,r16,1
 4027674:	39cf883a 	add	r7,r7,r7
 4027678:	39cf883a 	add	r7,r7,r7
 402767c:	19c7883a 	add	r3,r3,r7
 4027680:	19000017 	ldw	r4,0(r3)
 4027684:	91000015 	stw	r4,0(r18)
 4027688:	1c800015 	stw	r18,0(r3)
 402768c:	1025883a 	mov	r18,r2
 4027690:	803feb1e 	bne	r16,zero,4027640 <__flash_rwdata_start+0xffff6d7c>
 4027694:	9005883a 	mov	r2,r18
 4027698:	dfc00517 	ldw	ra,20(sp)
 402769c:	dd000417 	ldw	r20,16(sp)
 40276a0:	dcc00317 	ldw	r19,12(sp)
 40276a4:	dc800217 	ldw	r18,8(sp)
 40276a8:	dc400117 	ldw	r17,4(sp)
 40276ac:	dc000017 	ldw	r16,0(sp)
 40276b0:	dec00604 	addi	sp,sp,24
 40276b4:	f800283a 	ret
 40276b8:	9809883a 	mov	r4,r19
 40276bc:	880b883a 	mov	r5,r17
 40276c0:	880d883a 	mov	r6,r17
 40276c4:	40273640 	call	4027364 <__multiply>
 40276c8:	88800015 	stw	r2,0(r17)
 40276cc:	10000015 	stw	zero,0(r2)
 40276d0:	003fdd06 	br	4027648 <__flash_rwdata_start+0xffff6d84>
 40276d4:	1025883a 	mov	r18,r2
 40276d8:	003fd706 	br	4027638 <__flash_rwdata_start+0xffff6d74>
 40276dc:	10bfffc4 	addi	r2,r2,-1
 40276e0:	1085883a 	add	r2,r2,r2
 40276e4:	00c00034 	movhi	r3,0
 40276e8:	18c03704 	addi	r3,r3,220
 40276ec:	1085883a 	add	r2,r2,r2
 40276f0:	1885883a 	add	r2,r3,r2
 40276f4:	11800017 	ldw	r6,0(r2)
 40276f8:	000f883a 	mov	r7,zero
 40276fc:	4026fc40 	call	4026fc4 <__multadd>
 4027700:	1025883a 	mov	r18,r2
 4027704:	003fc706 	br	4027624 <__flash_rwdata_start+0xffff6d60>
 4027708:	05000044 	movi	r20,1
 402770c:	9809883a 	mov	r4,r19
 4027710:	a00b883a 	mov	r5,r20
 4027714:	4026ef40 	call	4026ef4 <_Balloc>
 4027718:	1023883a 	mov	r17,r2
 402771c:	00809c44 	movi	r2,625
 4027720:	88800515 	stw	r2,20(r17)
 4027724:	8d000415 	stw	r20,16(r17)
 4027728:	9c401215 	stw	r17,72(r19)
 402772c:	88000015 	stw	zero,0(r17)
 4027730:	003fc606 	br	402764c <__flash_rwdata_start+0xffff6d88>

04027734 <__lshift>:
 4027734:	defff904 	addi	sp,sp,-28
 4027738:	dd000415 	stw	r20,16(sp)
 402773c:	dcc00315 	stw	r19,12(sp)
 4027740:	3029d17a 	srai	r20,r6,5
 4027744:	2cc00417 	ldw	r19,16(r5)
 4027748:	28800217 	ldw	r2,8(r5)
 402774c:	dd400515 	stw	r21,20(sp)
 4027750:	a4e7883a 	add	r19,r20,r19
 4027754:	dc800215 	stw	r18,8(sp)
 4027758:	dc400115 	stw	r17,4(sp)
 402775c:	dc000015 	stw	r16,0(sp)
 4027760:	dfc00615 	stw	ra,24(sp)
 4027764:	9c000044 	addi	r16,r19,1
 4027768:	2823883a 	mov	r17,r5
 402776c:	302b883a 	mov	r21,r6
 4027770:	2025883a 	mov	r18,r4
 4027774:	29400117 	ldw	r5,4(r5)
 4027778:	1400030e 	bge	r2,r16,4027788 <__lshift+0x54>
 402777c:	1085883a 	add	r2,r2,r2
 4027780:	29400044 	addi	r5,r5,1
 4027784:	143ffd16 	blt	r2,r16,402777c <__flash_rwdata_start+0xffff6eb8>
 4027788:	9009883a 	mov	r4,r18
 402778c:	4026ef40 	call	4026ef4 <_Balloc>
 4027790:	11c00504 	addi	r7,r2,20
 4027794:	0500090e 	bge	zero,r20,40277bc <__lshift+0x88>
 4027798:	3811883a 	mov	r8,r7
 402779c:	0007883a 	mov	r3,zero
 40277a0:	40000015 	stw	zero,0(r8)
 40277a4:	18c00044 	addi	r3,r3,1
 40277a8:	42000104 	addi	r8,r8,4
 40277ac:	1d3ffc1e 	bne	r3,r20,40277a0 <__flash_rwdata_start+0xffff6edc>
 40277b0:	18c7883a 	add	r3,r3,r3
 40277b4:	18c7883a 	add	r3,r3,r3
 40277b8:	38cf883a 	add	r7,r7,r3
 40277bc:	89000417 	ldw	r4,16(r17)
 40277c0:	88c00504 	addi	r3,r17,20
 40277c4:	a98007cc 	andi	r6,r21,31
 40277c8:	2109883a 	add	r4,r4,r4
 40277cc:	2109883a 	add	r4,r4,r4
 40277d0:	1909883a 	add	r4,r3,r4
 40277d4:	30002326 	beq	r6,zero,4027864 <__lshift+0x130>
 40277d8:	01400804 	movi	r5,32
 40277dc:	298bc83a 	sub	r5,r5,r6
 40277e0:	0013883a 	mov	r9,zero
 40277e4:	1a000017 	ldw	r8,0(r3)
 40277e8:	3815883a 	mov	r10,r7
 40277ec:	39c00104 	addi	r7,r7,4
 40277f0:	4190983a 	sll	r8,r8,r6
 40277f4:	18c00104 	addi	r3,r3,4
 40277f8:	4a10b03a 	or	r8,r9,r8
 40277fc:	3a3fff15 	stw	r8,-4(r7)
 4027800:	1a3fff17 	ldw	r8,-4(r3)
 4027804:	4152d83a 	srl	r9,r8,r5
 4027808:	193ff636 	bltu	r3,r4,40277e4 <__flash_rwdata_start+0xffff6f20>
 402780c:	52400115 	stw	r9,4(r10)
 4027810:	48001a1e 	bne	r9,zero,402787c <__lshift+0x148>
 4027814:	843fffc4 	addi	r16,r16,-1
 4027818:	14000415 	stw	r16,16(r2)
 402781c:	88000826 	beq	r17,zero,4027840 <__lshift+0x10c>
 4027820:	89000117 	ldw	r4,4(r17)
 4027824:	90c01317 	ldw	r3,76(r18)
 4027828:	2109883a 	add	r4,r4,r4
 402782c:	2109883a 	add	r4,r4,r4
 4027830:	1907883a 	add	r3,r3,r4
 4027834:	19000017 	ldw	r4,0(r3)
 4027838:	89000015 	stw	r4,0(r17)
 402783c:	1c400015 	stw	r17,0(r3)
 4027840:	dfc00617 	ldw	ra,24(sp)
 4027844:	dd400517 	ldw	r21,20(sp)
 4027848:	dd000417 	ldw	r20,16(sp)
 402784c:	dcc00317 	ldw	r19,12(sp)
 4027850:	dc800217 	ldw	r18,8(sp)
 4027854:	dc400117 	ldw	r17,4(sp)
 4027858:	dc000017 	ldw	r16,0(sp)
 402785c:	dec00704 	addi	sp,sp,28
 4027860:	f800283a 	ret
 4027864:	19400017 	ldw	r5,0(r3)
 4027868:	39c00104 	addi	r7,r7,4
 402786c:	18c00104 	addi	r3,r3,4
 4027870:	397fff15 	stw	r5,-4(r7)
 4027874:	193ffb36 	bltu	r3,r4,4027864 <__flash_rwdata_start+0xffff6fa0>
 4027878:	003fe606 	br	4027814 <__flash_rwdata_start+0xffff6f50>
 402787c:	9c000084 	addi	r16,r19,2
 4027880:	003fe406 	br	4027814 <__flash_rwdata_start+0xffff6f50>

04027884 <__mcmp>:
 4027884:	20800417 	ldw	r2,16(r4)
 4027888:	28c00417 	ldw	r3,16(r5)
 402788c:	10c5c83a 	sub	r2,r2,r3
 4027890:	1000111e 	bne	r2,zero,40278d8 <__mcmp+0x54>
 4027894:	18c7883a 	add	r3,r3,r3
 4027898:	18c7883a 	add	r3,r3,r3
 402789c:	21000504 	addi	r4,r4,20
 40278a0:	29400504 	addi	r5,r5,20
 40278a4:	20c5883a 	add	r2,r4,r3
 40278a8:	28cb883a 	add	r5,r5,r3
 40278ac:	00000106 	br	40278b4 <__mcmp+0x30>
 40278b0:	20800a2e 	bgeu	r4,r2,40278dc <__mcmp+0x58>
 40278b4:	10bfff04 	addi	r2,r2,-4
 40278b8:	297fff04 	addi	r5,r5,-4
 40278bc:	11800017 	ldw	r6,0(r2)
 40278c0:	28c00017 	ldw	r3,0(r5)
 40278c4:	30fffa26 	beq	r6,r3,40278b0 <__flash_rwdata_start+0xffff6fec>
 40278c8:	30c00236 	bltu	r6,r3,40278d4 <__mcmp+0x50>
 40278cc:	00800044 	movi	r2,1
 40278d0:	f800283a 	ret
 40278d4:	00bfffc4 	movi	r2,-1
 40278d8:	f800283a 	ret
 40278dc:	0005883a 	mov	r2,zero
 40278e0:	f800283a 	ret

040278e4 <__mdiff>:
 40278e4:	defffb04 	addi	sp,sp,-20
 40278e8:	dc000015 	stw	r16,0(sp)
 40278ec:	2821883a 	mov	r16,r5
 40278f0:	dcc00315 	stw	r19,12(sp)
 40278f4:	300b883a 	mov	r5,r6
 40278f8:	2027883a 	mov	r19,r4
 40278fc:	8009883a 	mov	r4,r16
 4027900:	dc800215 	stw	r18,8(sp)
 4027904:	dfc00415 	stw	ra,16(sp)
 4027908:	dc400115 	stw	r17,4(sp)
 402790c:	3025883a 	mov	r18,r6
 4027910:	40278840 	call	4027884 <__mcmp>
 4027914:	10005226 	beq	r2,zero,4027a60 <__mdiff+0x17c>
 4027918:	10004c16 	blt	r2,zero,4027a4c <__mdiff+0x168>
 402791c:	0023883a 	mov	r17,zero
 4027920:	81400117 	ldw	r5,4(r16)
 4027924:	9809883a 	mov	r4,r19
 4027928:	4026ef40 	call	4026ef4 <_Balloc>
 402792c:	83400417 	ldw	r13,16(r16)
 4027930:	93800417 	ldw	r14,16(r18)
 4027934:	81000504 	addi	r4,r16,20
 4027938:	6b59883a 	add	r12,r13,r13
 402793c:	739d883a 	add	r14,r14,r14
 4027940:	6319883a 	add	r12,r12,r12
 4027944:	91800504 	addi	r6,r18,20
 4027948:	739d883a 	add	r14,r14,r14
 402794c:	14400315 	stw	r17,12(r2)
 4027950:	2319883a 	add	r12,r4,r12
 4027954:	339d883a 	add	r14,r6,r14
 4027958:	12400504 	addi	r9,r2,20
 402795c:	0007883a 	mov	r3,zero
 4027960:	22000017 	ldw	r8,0(r4)
 4027964:	32800017 	ldw	r10,0(r6)
 4027968:	4ac00104 	addi	r11,r9,4
 402796c:	41ffffcc 	andi	r7,r8,65535
 4027970:	38c7883a 	add	r3,r7,r3
 4027974:	51ffffcc 	andi	r7,r10,65535
 4027978:	19cfc83a 	sub	r7,r3,r7
 402797c:	4010d43a 	srli	r8,r8,16
 4027980:	5014d43a 	srli	r10,r10,16
 4027984:	3807d43a 	srai	r3,r7,16
 4027988:	39ffffcc 	andi	r7,r7,65535
 402798c:	4291c83a 	sub	r8,r8,r10
 4027990:	40c7883a 	add	r3,r8,r3
 4027994:	1810943a 	slli	r8,r3,16
 4027998:	31800104 	addi	r6,r6,4
 402799c:	21000104 	addi	r4,r4,4
 40279a0:	41ceb03a 	or	r7,r8,r7
 40279a4:	49c00015 	stw	r7,0(r9)
 40279a8:	1807d43a 	srai	r3,r3,16
 40279ac:	580b883a 	mov	r5,r11
 40279b0:	5813883a 	mov	r9,r11
 40279b4:	33bfea36 	bltu	r6,r14,4027960 <__flash_rwdata_start+0xffff709c>
 40279b8:	2011883a 	mov	r8,r4
 40279bc:	2300152e 	bgeu	r4,r12,4027a14 <__mdiff+0x130>
 40279c0:	21400017 	ldw	r5,0(r4)
 40279c4:	4a400104 	addi	r9,r9,4
 40279c8:	21000104 	addi	r4,r4,4
 40279cc:	29ffffcc 	andi	r7,r5,65535
 40279d0:	38c7883a 	add	r3,r7,r3
 40279d4:	280ad43a 	srli	r5,r5,16
 40279d8:	180dd43a 	srai	r6,r3,16
 40279dc:	19ffffcc 	andi	r7,r3,65535
 40279e0:	3147883a 	add	r3,r6,r5
 40279e4:	180a943a 	slli	r5,r3,16
 40279e8:	1807d43a 	srai	r3,r3,16
 40279ec:	29ceb03a 	or	r7,r5,r7
 40279f0:	49ffff15 	stw	r7,-4(r9)
 40279f4:	233ff236 	bltu	r4,r12,40279c0 <__flash_rwdata_start+0xffff70fc>
 40279f8:	0206303a 	nor	r3,zero,r8
 40279fc:	1b07883a 	add	r3,r3,r12
 4027a00:	1806d0ba 	srli	r3,r3,2
 4027a04:	18c00044 	addi	r3,r3,1
 4027a08:	18c7883a 	add	r3,r3,r3
 4027a0c:	18c7883a 	add	r3,r3,r3
 4027a10:	58cb883a 	add	r5,r11,r3
 4027a14:	28ffff04 	addi	r3,r5,-4
 4027a18:	3800041e 	bne	r7,zero,4027a2c <__mdiff+0x148>
 4027a1c:	18ffff04 	addi	r3,r3,-4
 4027a20:	19000017 	ldw	r4,0(r3)
 4027a24:	6b7fffc4 	addi	r13,r13,-1
 4027a28:	203ffc26 	beq	r4,zero,4027a1c <__flash_rwdata_start+0xffff7158>
 4027a2c:	13400415 	stw	r13,16(r2)
 4027a30:	dfc00417 	ldw	ra,16(sp)
 4027a34:	dcc00317 	ldw	r19,12(sp)
 4027a38:	dc800217 	ldw	r18,8(sp)
 4027a3c:	dc400117 	ldw	r17,4(sp)
 4027a40:	dc000017 	ldw	r16,0(sp)
 4027a44:	dec00504 	addi	sp,sp,20
 4027a48:	f800283a 	ret
 4027a4c:	8005883a 	mov	r2,r16
 4027a50:	04400044 	movi	r17,1
 4027a54:	9021883a 	mov	r16,r18
 4027a58:	1025883a 	mov	r18,r2
 4027a5c:	003fb006 	br	4027920 <__flash_rwdata_start+0xffff705c>
 4027a60:	9809883a 	mov	r4,r19
 4027a64:	000b883a 	mov	r5,zero
 4027a68:	4026ef40 	call	4026ef4 <_Balloc>
 4027a6c:	00c00044 	movi	r3,1
 4027a70:	10c00415 	stw	r3,16(r2)
 4027a74:	10000515 	stw	zero,20(r2)
 4027a78:	003fed06 	br	4027a30 <__flash_rwdata_start+0xffff716c>

04027a7c <__ulp>:
 4027a7c:	295ffc2c 	andhi	r5,r5,32752
 4027a80:	00bf3034 	movhi	r2,64704
 4027a84:	2887883a 	add	r3,r5,r2
 4027a88:	00c0020e 	bge	zero,r3,4027a94 <__ulp+0x18>
 4027a8c:	0005883a 	mov	r2,zero
 4027a90:	f800283a 	ret
 4027a94:	00c7c83a 	sub	r3,zero,r3
 4027a98:	180bd53a 	srai	r5,r3,20
 4027a9c:	008004c4 	movi	r2,19
 4027aa0:	11400a0e 	bge	r2,r5,4027acc <__ulp+0x50>
 4027aa4:	00800c84 	movi	r2,50
 4027aa8:	0007883a 	mov	r3,zero
 4027aac:	11400516 	blt	r2,r5,4027ac4 <__ulp+0x48>
 4027ab0:	00800cc4 	movi	r2,51
 4027ab4:	114bc83a 	sub	r5,r2,r5
 4027ab8:	00800044 	movi	r2,1
 4027abc:	1144983a 	sll	r2,r2,r5
 4027ac0:	f800283a 	ret
 4027ac4:	00800044 	movi	r2,1
 4027ac8:	f800283a 	ret
 4027acc:	00800234 	movhi	r2,8
 4027ad0:	1147d83a 	sra	r3,r2,r5
 4027ad4:	0005883a 	mov	r2,zero
 4027ad8:	f800283a 	ret

04027adc <__b2d>:
 4027adc:	defffa04 	addi	sp,sp,-24
 4027ae0:	dc000015 	stw	r16,0(sp)
 4027ae4:	24000417 	ldw	r16,16(r4)
 4027ae8:	dc400115 	stw	r17,4(sp)
 4027aec:	24400504 	addi	r17,r4,20
 4027af0:	8421883a 	add	r16,r16,r16
 4027af4:	8421883a 	add	r16,r16,r16
 4027af8:	8c21883a 	add	r16,r17,r16
 4027afc:	dc800215 	stw	r18,8(sp)
 4027b00:	84bfff17 	ldw	r18,-4(r16)
 4027b04:	dd000415 	stw	r20,16(sp)
 4027b08:	dcc00315 	stw	r19,12(sp)
 4027b0c:	9009883a 	mov	r4,r18
 4027b10:	2829883a 	mov	r20,r5
 4027b14:	dfc00515 	stw	ra,20(sp)
 4027b18:	40272100 	call	4027210 <__hi0bits>
 4027b1c:	00c00804 	movi	r3,32
 4027b20:	1887c83a 	sub	r3,r3,r2
 4027b24:	a0c00015 	stw	r3,0(r20)
 4027b28:	00c00284 	movi	r3,10
 4027b2c:	84ffff04 	addi	r19,r16,-4
 4027b30:	18801216 	blt	r3,r2,4027b7c <__b2d+0xa0>
 4027b34:	014002c4 	movi	r5,11
 4027b38:	2889c83a 	sub	r4,r5,r2
 4027b3c:	9106d83a 	srl	r3,r18,r4
 4027b40:	18cffc34 	orhi	r3,r3,16368
 4027b44:	8cc0282e 	bgeu	r17,r19,4027be8 <__b2d+0x10c>
 4027b48:	817ffe17 	ldw	r5,-8(r16)
 4027b4c:	290ad83a 	srl	r5,r5,r4
 4027b50:	10800544 	addi	r2,r2,21
 4027b54:	9084983a 	sll	r2,r18,r2
 4027b58:	2884b03a 	or	r2,r5,r2
 4027b5c:	dfc00517 	ldw	ra,20(sp)
 4027b60:	dd000417 	ldw	r20,16(sp)
 4027b64:	dcc00317 	ldw	r19,12(sp)
 4027b68:	dc800217 	ldw	r18,8(sp)
 4027b6c:	dc400117 	ldw	r17,4(sp)
 4027b70:	dc000017 	ldw	r16,0(sp)
 4027b74:	dec00604 	addi	sp,sp,24
 4027b78:	f800283a 	ret
 4027b7c:	113ffd44 	addi	r4,r2,-11
 4027b80:	8cc00f2e 	bgeu	r17,r19,4027bc0 <__b2d+0xe4>
 4027b84:	81bffe04 	addi	r6,r16,-8
 4027b88:	817ffe17 	ldw	r5,-8(r16)
 4027b8c:	20001326 	beq	r4,zero,4027bdc <__b2d+0x100>
 4027b90:	00c00ac4 	movi	r3,43
 4027b94:	1885c83a 	sub	r2,r3,r2
 4027b98:	2886d83a 	srl	r3,r5,r2
 4027b9c:	9124983a 	sll	r18,r18,r4
 4027ba0:	90e4b03a 	or	r18,r18,r3
 4027ba4:	90cffc34 	orhi	r3,r18,16368
 4027ba8:	8980112e 	bgeu	r17,r6,4027bf0 <__b2d+0x114>
 4027bac:	81bffd17 	ldw	r6,-12(r16)
 4027bb0:	308cd83a 	srl	r6,r6,r2
 4027bb4:	2904983a 	sll	r2,r5,r4
 4027bb8:	1184b03a 	or	r2,r2,r6
 4027bbc:	003fe706 	br	4027b5c <__flash_rwdata_start+0xffff7298>
 4027bc0:	20000526 	beq	r4,zero,4027bd8 <__b2d+0xfc>
 4027bc4:	9124983a 	sll	r18,r18,r4
 4027bc8:	000d883a 	mov	r6,zero
 4027bcc:	000b883a 	mov	r5,zero
 4027bd0:	90cffc34 	orhi	r3,r18,16368
 4027bd4:	003ff706 	br	4027bb4 <__flash_rwdata_start+0xffff72f0>
 4027bd8:	000b883a 	mov	r5,zero
 4027bdc:	90cffc34 	orhi	r3,r18,16368
 4027be0:	2805883a 	mov	r2,r5
 4027be4:	003fdd06 	br	4027b5c <__flash_rwdata_start+0xffff7298>
 4027be8:	000b883a 	mov	r5,zero
 4027bec:	003fd806 	br	4027b50 <__flash_rwdata_start+0xffff728c>
 4027bf0:	000d883a 	mov	r6,zero
 4027bf4:	003fef06 	br	4027bb4 <__flash_rwdata_start+0xffff72f0>

04027bf8 <__d2b>:
 4027bf8:	defff704 	addi	sp,sp,-36
 4027bfc:	dc000215 	stw	r16,8(sp)
 4027c00:	3021883a 	mov	r16,r6
 4027c04:	dc400315 	stw	r17,12(sp)
 4027c08:	8022907a 	slli	r17,r16,1
 4027c0c:	dd400715 	stw	r21,28(sp)
 4027c10:	282b883a 	mov	r21,r5
 4027c14:	01400044 	movi	r5,1
 4027c18:	dd000615 	stw	r20,24(sp)
 4027c1c:	dcc00515 	stw	r19,20(sp)
 4027c20:	dc800415 	stw	r18,16(sp)
 4027c24:	dfc00815 	stw	ra,32(sp)
 4027c28:	3829883a 	mov	r20,r7
 4027c2c:	dc800917 	ldw	r18,36(sp)
 4027c30:	8822d57a 	srli	r17,r17,21
 4027c34:	4026ef40 	call	4026ef4 <_Balloc>
 4027c38:	1027883a 	mov	r19,r2
 4027c3c:	00800434 	movhi	r2,16
 4027c40:	10bfffc4 	addi	r2,r2,-1
 4027c44:	808c703a 	and	r6,r16,r2
 4027c48:	88000126 	beq	r17,zero,4027c50 <__d2b+0x58>
 4027c4c:	31800434 	orhi	r6,r6,16
 4027c50:	d9800015 	stw	r6,0(sp)
 4027c54:	a8001f26 	beq	r21,zero,4027cd4 <__d2b+0xdc>
 4027c58:	d9000104 	addi	r4,sp,4
 4027c5c:	dd400115 	stw	r21,4(sp)
 4027c60:	40272780 	call	4027278 <__lo0bits>
 4027c64:	d8c00017 	ldw	r3,0(sp)
 4027c68:	1000291e 	bne	r2,zero,4027d10 <__d2b+0x118>
 4027c6c:	d9000117 	ldw	r4,4(sp)
 4027c70:	99000515 	stw	r4,20(r19)
 4027c74:	1820c03a 	cmpne	r16,r3,zero
 4027c78:	84000044 	addi	r16,r16,1
 4027c7c:	98c00615 	stw	r3,24(r19)
 4027c80:	9c000415 	stw	r16,16(r19)
 4027c84:	88001b1e 	bne	r17,zero,4027cf4 <__d2b+0xfc>
 4027c88:	800690ba 	slli	r3,r16,2
 4027c8c:	10bef384 	addi	r2,r2,-1074
 4027c90:	a0800015 	stw	r2,0(r20)
 4027c94:	98c5883a 	add	r2,r19,r3
 4027c98:	11000417 	ldw	r4,16(r2)
 4027c9c:	8020917a 	slli	r16,r16,5
 4027ca0:	40272100 	call	4027210 <__hi0bits>
 4027ca4:	8085c83a 	sub	r2,r16,r2
 4027ca8:	90800015 	stw	r2,0(r18)
 4027cac:	9805883a 	mov	r2,r19
 4027cb0:	dfc00817 	ldw	ra,32(sp)
 4027cb4:	dd400717 	ldw	r21,28(sp)
 4027cb8:	dd000617 	ldw	r20,24(sp)
 4027cbc:	dcc00517 	ldw	r19,20(sp)
 4027cc0:	dc800417 	ldw	r18,16(sp)
 4027cc4:	dc400317 	ldw	r17,12(sp)
 4027cc8:	dc000217 	ldw	r16,8(sp)
 4027ccc:	dec00904 	addi	sp,sp,36
 4027cd0:	f800283a 	ret
 4027cd4:	d809883a 	mov	r4,sp
 4027cd8:	40272780 	call	4027278 <__lo0bits>
 4027cdc:	d8c00017 	ldw	r3,0(sp)
 4027ce0:	04000044 	movi	r16,1
 4027ce4:	9c000415 	stw	r16,16(r19)
 4027ce8:	98c00515 	stw	r3,20(r19)
 4027cec:	10800804 	addi	r2,r2,32
 4027cf0:	883fe526 	beq	r17,zero,4027c88 <__flash_rwdata_start+0xffff73c4>
 4027cf4:	8c7ef344 	addi	r17,r17,-1075
 4027cf8:	88a3883a 	add	r17,r17,r2
 4027cfc:	00c00d44 	movi	r3,53
 4027d00:	a4400015 	stw	r17,0(r20)
 4027d04:	1885c83a 	sub	r2,r3,r2
 4027d08:	90800015 	stw	r2,0(r18)
 4027d0c:	003fe706 	br	4027cac <__flash_rwdata_start+0xffff73e8>
 4027d10:	01000804 	movi	r4,32
 4027d14:	2089c83a 	sub	r4,r4,r2
 4027d18:	1908983a 	sll	r4,r3,r4
 4027d1c:	d9400117 	ldw	r5,4(sp)
 4027d20:	1886d83a 	srl	r3,r3,r2
 4027d24:	2148b03a 	or	r4,r4,r5
 4027d28:	99000515 	stw	r4,20(r19)
 4027d2c:	d8c00015 	stw	r3,0(sp)
 4027d30:	003fd006 	br	4027c74 <__flash_rwdata_start+0xffff73b0>

04027d34 <__ratio>:
 4027d34:	defff904 	addi	sp,sp,-28
 4027d38:	dc400315 	stw	r17,12(sp)
 4027d3c:	2823883a 	mov	r17,r5
 4027d40:	d9400104 	addi	r5,sp,4
 4027d44:	dfc00615 	stw	ra,24(sp)
 4027d48:	dcc00515 	stw	r19,20(sp)
 4027d4c:	dc800415 	stw	r18,16(sp)
 4027d50:	2027883a 	mov	r19,r4
 4027d54:	dc000215 	stw	r16,8(sp)
 4027d58:	4027adc0 	call	4027adc <__b2d>
 4027d5c:	8809883a 	mov	r4,r17
 4027d60:	d80b883a 	mov	r5,sp
 4027d64:	1025883a 	mov	r18,r2
 4027d68:	1821883a 	mov	r16,r3
 4027d6c:	4027adc0 	call	4027adc <__b2d>
 4027d70:	8a400417 	ldw	r9,16(r17)
 4027d74:	9a000417 	ldw	r8,16(r19)
 4027d78:	100d883a 	mov	r6,r2
 4027d7c:	d8800017 	ldw	r2,0(sp)
 4027d80:	4251c83a 	sub	r8,r8,r9
 4027d84:	4012917a 	slli	r9,r8,5
 4027d88:	da000117 	ldw	r8,4(sp)
 4027d8c:	4091c83a 	sub	r8,r8,r2
 4027d90:	4251883a 	add	r8,r8,r9
 4027d94:	02000d0e 	bge	zero,r8,4027dcc <__ratio+0x98>
 4027d98:	4010953a 	slli	r8,r8,20
 4027d9c:	4421883a 	add	r16,r8,r16
 4027da0:	9009883a 	mov	r4,r18
 4027da4:	800b883a 	mov	r5,r16
 4027da8:	180f883a 	mov	r7,r3
 4027dac:	402bcc00 	call	402bcc0 <__divdf3>
 4027db0:	dfc00617 	ldw	ra,24(sp)
 4027db4:	dcc00517 	ldw	r19,20(sp)
 4027db8:	dc800417 	ldw	r18,16(sp)
 4027dbc:	dc400317 	ldw	r17,12(sp)
 4027dc0:	dc000217 	ldw	r16,8(sp)
 4027dc4:	dec00704 	addi	sp,sp,28
 4027dc8:	f800283a 	ret
 4027dcc:	4010953a 	slli	r8,r8,20
 4027dd0:	1a07c83a 	sub	r3,r3,r8
 4027dd4:	003ff206 	br	4027da0 <__flash_rwdata_start+0xffff74dc>

04027dd8 <_mprec_log10>:
 4027dd8:	defffe04 	addi	sp,sp,-8
 4027ddc:	dc000015 	stw	r16,0(sp)
 4027de0:	dfc00115 	stw	ra,4(sp)
 4027de4:	008005c4 	movi	r2,23
 4027de8:	2021883a 	mov	r16,r4
 4027dec:	11000d0e 	bge	r2,r4,4027e24 <_mprec_log10+0x4c>
 4027df0:	0005883a 	mov	r2,zero
 4027df4:	00cffc34 	movhi	r3,16368
 4027df8:	843fffc4 	addi	r16,r16,-1
 4027dfc:	1009883a 	mov	r4,r2
 4027e00:	180b883a 	mov	r5,r3
 4027e04:	000d883a 	mov	r6,zero
 4027e08:	01d00934 	movhi	r7,16420
 4027e0c:	402c8840 	call	402c884 <__muldf3>
 4027e10:	803ff91e 	bne	r16,zero,4027df8 <__flash_rwdata_start+0xffff7534>
 4027e14:	dfc00117 	ldw	ra,4(sp)
 4027e18:	dc000017 	ldw	r16,0(sp)
 4027e1c:	dec00204 	addi	sp,sp,8
 4027e20:	f800283a 	ret
 4027e24:	202090fa 	slli	r16,r4,3
 4027e28:	00800034 	movhi	r2,0
 4027e2c:	10804e04 	addi	r2,r2,312
 4027e30:	1421883a 	add	r16,r2,r16
 4027e34:	80800017 	ldw	r2,0(r16)
 4027e38:	80c00117 	ldw	r3,4(r16)
 4027e3c:	dfc00117 	ldw	ra,4(sp)
 4027e40:	dc000017 	ldw	r16,0(sp)
 4027e44:	dec00204 	addi	sp,sp,8
 4027e48:	f800283a 	ret

04027e4c <__copybits>:
 4027e4c:	297fffc4 	addi	r5,r5,-1
 4027e50:	280fd17a 	srai	r7,r5,5
 4027e54:	30c00417 	ldw	r3,16(r6)
 4027e58:	30800504 	addi	r2,r6,20
 4027e5c:	39c00044 	addi	r7,r7,1
 4027e60:	18c7883a 	add	r3,r3,r3
 4027e64:	39cf883a 	add	r7,r7,r7
 4027e68:	18c7883a 	add	r3,r3,r3
 4027e6c:	39cf883a 	add	r7,r7,r7
 4027e70:	10c7883a 	add	r3,r2,r3
 4027e74:	21cf883a 	add	r7,r4,r7
 4027e78:	10c00d2e 	bgeu	r2,r3,4027eb0 <__copybits+0x64>
 4027e7c:	200b883a 	mov	r5,r4
 4027e80:	12000017 	ldw	r8,0(r2)
 4027e84:	29400104 	addi	r5,r5,4
 4027e88:	10800104 	addi	r2,r2,4
 4027e8c:	2a3fff15 	stw	r8,-4(r5)
 4027e90:	10fffb36 	bltu	r2,r3,4027e80 <__flash_rwdata_start+0xffff75bc>
 4027e94:	1985c83a 	sub	r2,r3,r6
 4027e98:	10bffac4 	addi	r2,r2,-21
 4027e9c:	1004d0ba 	srli	r2,r2,2
 4027ea0:	10800044 	addi	r2,r2,1
 4027ea4:	1085883a 	add	r2,r2,r2
 4027ea8:	1085883a 	add	r2,r2,r2
 4027eac:	2089883a 	add	r4,r4,r2
 4027eb0:	21c0032e 	bgeu	r4,r7,4027ec0 <__copybits+0x74>
 4027eb4:	20000015 	stw	zero,0(r4)
 4027eb8:	21000104 	addi	r4,r4,4
 4027ebc:	21fffd36 	bltu	r4,r7,4027eb4 <__flash_rwdata_start+0xffff75f0>
 4027ec0:	f800283a 	ret

04027ec4 <__any_on>:
 4027ec4:	20c00417 	ldw	r3,16(r4)
 4027ec8:	2805d17a 	srai	r2,r5,5
 4027ecc:	21000504 	addi	r4,r4,20
 4027ed0:	18800d0e 	bge	r3,r2,4027f08 <__any_on+0x44>
 4027ed4:	18c7883a 	add	r3,r3,r3
 4027ed8:	18c7883a 	add	r3,r3,r3
 4027edc:	20c7883a 	add	r3,r4,r3
 4027ee0:	20c0192e 	bgeu	r4,r3,4027f48 <__any_on+0x84>
 4027ee4:	18bfff17 	ldw	r2,-4(r3)
 4027ee8:	18ffff04 	addi	r3,r3,-4
 4027eec:	1000041e 	bne	r2,zero,4027f00 <__any_on+0x3c>
 4027ef0:	20c0142e 	bgeu	r4,r3,4027f44 <__any_on+0x80>
 4027ef4:	18ffff04 	addi	r3,r3,-4
 4027ef8:	19400017 	ldw	r5,0(r3)
 4027efc:	283ffc26 	beq	r5,zero,4027ef0 <__flash_rwdata_start+0xffff762c>
 4027f00:	00800044 	movi	r2,1
 4027f04:	f800283a 	ret
 4027f08:	10c00a0e 	bge	r2,r3,4027f34 <__any_on+0x70>
 4027f0c:	1085883a 	add	r2,r2,r2
 4027f10:	1085883a 	add	r2,r2,r2
 4027f14:	294007cc 	andi	r5,r5,31
 4027f18:	2087883a 	add	r3,r4,r2
 4027f1c:	283ff026 	beq	r5,zero,4027ee0 <__flash_rwdata_start+0xffff761c>
 4027f20:	19800017 	ldw	r6,0(r3)
 4027f24:	3144d83a 	srl	r2,r6,r5
 4027f28:	114a983a 	sll	r5,r2,r5
 4027f2c:	29bff41e 	bne	r5,r6,4027f00 <__flash_rwdata_start+0xffff763c>
 4027f30:	003feb06 	br	4027ee0 <__flash_rwdata_start+0xffff761c>
 4027f34:	1085883a 	add	r2,r2,r2
 4027f38:	1085883a 	add	r2,r2,r2
 4027f3c:	2087883a 	add	r3,r4,r2
 4027f40:	003fe706 	br	4027ee0 <__flash_rwdata_start+0xffff761c>
 4027f44:	f800283a 	ret
 4027f48:	0005883a 	mov	r2,zero
 4027f4c:	f800283a 	ret

04027f50 <_putc_r>:
 4027f50:	defffc04 	addi	sp,sp,-16
 4027f54:	dc000215 	stw	r16,8(sp)
 4027f58:	dfc00315 	stw	ra,12(sp)
 4027f5c:	2021883a 	mov	r16,r4
 4027f60:	20000226 	beq	r4,zero,4027f6c <_putc_r+0x1c>
 4027f64:	20800e17 	ldw	r2,56(r4)
 4027f68:	10001b26 	beq	r2,zero,4027fd8 <_putc_r+0x88>
 4027f6c:	30800217 	ldw	r2,8(r6)
 4027f70:	10bfffc4 	addi	r2,r2,-1
 4027f74:	30800215 	stw	r2,8(r6)
 4027f78:	10000a16 	blt	r2,zero,4027fa4 <_putc_r+0x54>
 4027f7c:	30800017 	ldw	r2,0(r6)
 4027f80:	11400005 	stb	r5,0(r2)
 4027f84:	30800017 	ldw	r2,0(r6)
 4027f88:	10c00044 	addi	r3,r2,1
 4027f8c:	30c00015 	stw	r3,0(r6)
 4027f90:	10800003 	ldbu	r2,0(r2)
 4027f94:	dfc00317 	ldw	ra,12(sp)
 4027f98:	dc000217 	ldw	r16,8(sp)
 4027f9c:	dec00404 	addi	sp,sp,16
 4027fa0:	f800283a 	ret
 4027fa4:	30c00617 	ldw	r3,24(r6)
 4027fa8:	10c00616 	blt	r2,r3,4027fc4 <_putc_r+0x74>
 4027fac:	30800017 	ldw	r2,0(r6)
 4027fb0:	00c00284 	movi	r3,10
 4027fb4:	11400005 	stb	r5,0(r2)
 4027fb8:	30800017 	ldw	r2,0(r6)
 4027fbc:	11400003 	ldbu	r5,0(r2)
 4027fc0:	28fff11e 	bne	r5,r3,4027f88 <__flash_rwdata_start+0xffff76c4>
 4027fc4:	8009883a 	mov	r4,r16
 4027fc8:	dfc00317 	ldw	ra,12(sp)
 4027fcc:	dc000217 	ldw	r16,8(sp)
 4027fd0:	dec00404 	addi	sp,sp,16
 4027fd4:	4029db01 	jmpi	4029db0 <__swbuf_r>
 4027fd8:	d9400015 	stw	r5,0(sp)
 4027fdc:	d9800115 	stw	r6,4(sp)
 4027fe0:	40256940 	call	4025694 <__sinit>
 4027fe4:	d9800117 	ldw	r6,4(sp)
 4027fe8:	d9400017 	ldw	r5,0(sp)
 4027fec:	003fdf06 	br	4027f6c <__flash_rwdata_start+0xffff76a8>

04027ff0 <putc>:
 4027ff0:	00800034 	movhi	r2,0
 4027ff4:	defffc04 	addi	sp,sp,-16
 4027ff8:	10878604 	addi	r2,r2,7704
 4027ffc:	dc400115 	stw	r17,4(sp)
 4028000:	14400017 	ldw	r17,0(r2)
 4028004:	dc800215 	stw	r18,8(sp)
 4028008:	dc000015 	stw	r16,0(sp)
 402800c:	dfc00315 	stw	ra,12(sp)
 4028010:	2025883a 	mov	r18,r4
 4028014:	2821883a 	mov	r16,r5
 4028018:	88000226 	beq	r17,zero,4028024 <putc+0x34>
 402801c:	88800e17 	ldw	r2,56(r17)
 4028020:	10001a26 	beq	r2,zero,402808c <putc+0x9c>
 4028024:	80800217 	ldw	r2,8(r16)
 4028028:	10bfffc4 	addi	r2,r2,-1
 402802c:	80800215 	stw	r2,8(r16)
 4028030:	10000c16 	blt	r2,zero,4028064 <putc+0x74>
 4028034:	80800017 	ldw	r2,0(r16)
 4028038:	14800005 	stb	r18,0(r2)
 402803c:	80800017 	ldw	r2,0(r16)
 4028040:	10c00044 	addi	r3,r2,1
 4028044:	80c00015 	stw	r3,0(r16)
 4028048:	10800003 	ldbu	r2,0(r2)
 402804c:	dfc00317 	ldw	ra,12(sp)
 4028050:	dc800217 	ldw	r18,8(sp)
 4028054:	dc400117 	ldw	r17,4(sp)
 4028058:	dc000017 	ldw	r16,0(sp)
 402805c:	dec00404 	addi	sp,sp,16
 4028060:	f800283a 	ret
 4028064:	80c00617 	ldw	r3,24(r16)
 4028068:	10c00b16 	blt	r2,r3,4028098 <putc+0xa8>
 402806c:	80800017 	ldw	r2,0(r16)
 4028070:	00c00284 	movi	r3,10
 4028074:	14800005 	stb	r18,0(r2)
 4028078:	80800017 	ldw	r2,0(r16)
 402807c:	11400003 	ldbu	r5,0(r2)
 4028080:	28ffef1e 	bne	r5,r3,4028040 <__flash_rwdata_start+0xffff777c>
 4028084:	8809883a 	mov	r4,r17
 4028088:	00000506 	br	40280a0 <putc+0xb0>
 402808c:	8809883a 	mov	r4,r17
 4028090:	40256940 	call	4025694 <__sinit>
 4028094:	003fe306 	br	4028024 <__flash_rwdata_start+0xffff7760>
 4028098:	8809883a 	mov	r4,r17
 402809c:	900b883a 	mov	r5,r18
 40280a0:	800d883a 	mov	r6,r16
 40280a4:	dfc00317 	ldw	ra,12(sp)
 40280a8:	dc800217 	ldw	r18,8(sp)
 40280ac:	dc400117 	ldw	r17,4(sp)
 40280b0:	dc000017 	ldw	r16,0(sp)
 40280b4:	dec00404 	addi	sp,sp,16
 40280b8:	4029db01 	jmpi	4029db0 <__swbuf_r>

040280bc <_realloc_r>:
 40280bc:	defff604 	addi	sp,sp,-40
 40280c0:	dd000415 	stw	r20,16(sp)
 40280c4:	dc400115 	stw	r17,4(sp)
 40280c8:	dfc00915 	stw	ra,36(sp)
 40280cc:	df000815 	stw	fp,32(sp)
 40280d0:	ddc00715 	stw	r23,28(sp)
 40280d4:	dd800615 	stw	r22,24(sp)
 40280d8:	dd400515 	stw	r21,20(sp)
 40280dc:	dcc00315 	stw	r19,12(sp)
 40280e0:	dc800215 	stw	r18,8(sp)
 40280e4:	dc000015 	stw	r16,0(sp)
 40280e8:	2829883a 	mov	r20,r5
 40280ec:	3023883a 	mov	r17,r6
 40280f0:	2800ad26 	beq	r5,zero,40283a8 <_realloc_r+0x2ec>
 40280f4:	2025883a 	mov	r18,r4
 40280f8:	402e4ec0 	call	402e4ec <__malloc_lock>
 40280fc:	a0ffff17 	ldw	r3,-4(r20)
 4028100:	043fff04 	movi	r16,-4
 4028104:	890002c4 	addi	r4,r17,11
 4028108:	01c00584 	movi	r7,22
 402810c:	a57ffe04 	addi	r21,r20,-8
 4028110:	1c20703a 	and	r16,r3,r16
 4028114:	39001d2e 	bgeu	r7,r4,402818c <_realloc_r+0xd0>
 4028118:	05bffe04 	movi	r22,-8
 402811c:	25ac703a 	and	r22,r4,r22
 4028120:	b00f883a 	mov	r7,r22
 4028124:	b0006516 	blt	r22,zero,40282bc <_realloc_r+0x200>
 4028128:	b4406436 	bltu	r22,r17,40282bc <_realloc_r+0x200>
 402812c:	81c01a0e 	bge	r16,r7,4028198 <_realloc_r+0xdc>
 4028130:	07000034 	movhi	fp,0
 4028134:	e701fa04 	addi	fp,fp,2024
 4028138:	e1400217 	ldw	r5,8(fp)
 402813c:	ac11883a 	add	r8,r21,r16
 4028140:	2a006226 	beq	r5,r8,40282cc <_realloc_r+0x210>
 4028144:	41800117 	ldw	r6,4(r8)
 4028148:	027fff84 	movi	r9,-2
 402814c:	3252703a 	and	r9,r6,r9
 4028150:	4253883a 	add	r9,r8,r9
 4028154:	49000117 	ldw	r4,4(r9)
 4028158:	2100004c 	andi	r4,r4,1
 402815c:	2000281e 	bne	r4,zero,4028200 <_realloc_r+0x144>
 4028160:	00bfff04 	movi	r2,-4
 4028164:	3084703a 	and	r2,r6,r2
 4028168:	1409883a 	add	r4,r2,r16
 402816c:	21c05e16 	blt	r4,r7,40282e8 <_realloc_r+0x22c>
 4028170:	40800317 	ldw	r2,12(r8)
 4028174:	41400217 	ldw	r5,8(r8)
 4028178:	a023883a 	mov	r17,r20
 402817c:	2021883a 	mov	r16,r4
 4028180:	28800315 	stw	r2,12(r5)
 4028184:	11400215 	stw	r5,8(r2)
 4028188:	00000406 	br	402819c <_realloc_r+0xe0>
 402818c:	01c00404 	movi	r7,16
 4028190:	382d883a 	mov	r22,r7
 4028194:	003fe406 	br	4028128 <__flash_rwdata_start+0xffff7864>
 4028198:	a023883a 	mov	r17,r20
 402819c:	858fc83a 	sub	r7,r16,r22
 40281a0:	008003c4 	movi	r2,15
 40281a4:	18c0004c 	andi	r3,r3,1
 40281a8:	11c07236 	bltu	r2,r7,4028374 <_realloc_r+0x2b8>
 40281ac:	1c06b03a 	or	r3,r3,r16
 40281b0:	a8c00115 	stw	r3,4(r21)
 40281b4:	ac21883a 	add	r16,r21,r16
 40281b8:	80800117 	ldw	r2,4(r16)
 40281bc:	10800054 	ori	r2,r2,1
 40281c0:	80800115 	stw	r2,4(r16)
 40281c4:	9009883a 	mov	r4,r18
 40281c8:	402e50c0 	call	402e50c <__malloc_unlock>
 40281cc:	8805883a 	mov	r2,r17
 40281d0:	dfc00917 	ldw	ra,36(sp)
 40281d4:	df000817 	ldw	fp,32(sp)
 40281d8:	ddc00717 	ldw	r23,28(sp)
 40281dc:	dd800617 	ldw	r22,24(sp)
 40281e0:	dd400517 	ldw	r21,20(sp)
 40281e4:	dd000417 	ldw	r20,16(sp)
 40281e8:	dcc00317 	ldw	r19,12(sp)
 40281ec:	dc800217 	ldw	r18,8(sp)
 40281f0:	dc400117 	ldw	r17,4(sp)
 40281f4:	dc000017 	ldw	r16,0(sp)
 40281f8:	dec00a04 	addi	sp,sp,40
 40281fc:	f800283a 	ret
 4028200:	18c0004c 	andi	r3,r3,1
 4028204:	1800081e 	bne	r3,zero,4028228 <_realloc_r+0x16c>
 4028208:	a4fffe17 	ldw	r19,-8(r20)
 402820c:	00bfff04 	movi	r2,-4
 4028210:	ace7c83a 	sub	r19,r21,r19
 4028214:	98c00117 	ldw	r3,4(r19)
 4028218:	1886703a 	and	r3,r3,r2
 402821c:	98000226 	beq	r19,zero,4028228 <_realloc_r+0x16c>
 4028220:	1c2f883a 	add	r23,r3,r16
 4028224:	b9c06d0e 	bge	r23,r7,40283dc <_realloc_r+0x320>
 4028228:	880b883a 	mov	r5,r17
 402822c:	9009883a 	mov	r4,r18
 4028230:	40263e40 	call	40263e4 <_malloc_r>
 4028234:	1023883a 	mov	r17,r2
 4028238:	1000ef26 	beq	r2,zero,40285f8 <_realloc_r+0x53c>
 402823c:	a0ffff17 	ldw	r3,-4(r20)
 4028240:	113ffe04 	addi	r4,r2,-8
 4028244:	00bfff84 	movi	r2,-2
 4028248:	1884703a 	and	r2,r3,r2
 402824c:	a885883a 	add	r2,r21,r2
 4028250:	2080bf26 	beq	r4,r2,4028550 <_realloc_r+0x494>
 4028254:	81bfff04 	addi	r6,r16,-4
 4028258:	00800904 	movi	r2,36
 402825c:	11808936 	bltu	r2,r6,4028484 <_realloc_r+0x3c8>
 4028260:	00c004c4 	movi	r3,19
 4028264:	19806c2e 	bgeu	r3,r6,4028418 <_realloc_r+0x35c>
 4028268:	a0c00017 	ldw	r3,0(r20)
 402826c:	88c00015 	stw	r3,0(r17)
 4028270:	a0c00117 	ldw	r3,4(r20)
 4028274:	88c00115 	stw	r3,4(r17)
 4028278:	00c006c4 	movi	r3,27
 402827c:	1980ac36 	bltu	r3,r6,4028530 <_realloc_r+0x474>
 4028280:	88800204 	addi	r2,r17,8
 4028284:	a0c00204 	addi	r3,r20,8
 4028288:	19000017 	ldw	r4,0(r3)
 402828c:	11000015 	stw	r4,0(r2)
 4028290:	19000117 	ldw	r4,4(r3)
 4028294:	11000115 	stw	r4,4(r2)
 4028298:	18c00217 	ldw	r3,8(r3)
 402829c:	10c00215 	stw	r3,8(r2)
 40282a0:	a00b883a 	mov	r5,r20
 40282a4:	9009883a 	mov	r4,r18
 40282a8:	40258080 	call	4025808 <_free_r>
 40282ac:	9009883a 	mov	r4,r18
 40282b0:	402e50c0 	call	402e50c <__malloc_unlock>
 40282b4:	8805883a 	mov	r2,r17
 40282b8:	003fc506 	br	40281d0 <__flash_rwdata_start+0xffff790c>
 40282bc:	00800304 	movi	r2,12
 40282c0:	90800015 	stw	r2,0(r18)
 40282c4:	0005883a 	mov	r2,zero
 40282c8:	003fc106 	br	40281d0 <__flash_rwdata_start+0xffff790c>
 40282cc:	29800117 	ldw	r6,4(r5)
 40282d0:	00bfff04 	movi	r2,-4
 40282d4:	b1000404 	addi	r4,r22,16
 40282d8:	3084703a 	and	r2,r6,r2
 40282dc:	140d883a 	add	r6,r2,r16
 40282e0:	31005b0e 	bge	r6,r4,4028450 <_realloc_r+0x394>
 40282e4:	2811883a 	mov	r8,r5
 40282e8:	18c0004c 	andi	r3,r3,1
 40282ec:	183fce1e 	bne	r3,zero,4028228 <__flash_rwdata_start+0xffff7964>
 40282f0:	a4fffe17 	ldw	r19,-8(r20)
 40282f4:	00ffff04 	movi	r3,-4
 40282f8:	ace7c83a 	sub	r19,r21,r19
 40282fc:	99000117 	ldw	r4,4(r19)
 4028300:	20c6703a 	and	r3,r4,r3
 4028304:	403fc526 	beq	r8,zero,402821c <__flash_rwdata_start+0xffff7958>
 4028308:	1c2f883a 	add	r23,r3,r16
 402830c:	b8af883a 	add	r23,r23,r2
 4028310:	41406026 	beq	r8,r5,4028494 <_realloc_r+0x3d8>
 4028314:	b9ffc116 	blt	r23,r7,402821c <__flash_rwdata_start+0xffff7958>
 4028318:	40c00217 	ldw	r3,8(r8)
 402831c:	40800317 	ldw	r2,12(r8)
 4028320:	81bfff04 	addi	r6,r16,-4
 4028324:	01000904 	movi	r4,36
 4028328:	18800315 	stw	r2,12(r3)
 402832c:	10c00215 	stw	r3,8(r2)
 4028330:	99400217 	ldw	r5,8(r19)
 4028334:	98c00317 	ldw	r3,12(r19)
 4028338:	9c400204 	addi	r17,r19,8
 402833c:	28c00315 	stw	r3,12(r5)
 4028340:	19400215 	stw	r5,8(r3)
 4028344:	21802d36 	bltu	r4,r6,40283fc <_realloc_r+0x340>
 4028348:	008004c4 	movi	r2,19
 402834c:	1180352e 	bgeu	r2,r6,4028424 <_realloc_r+0x368>
 4028350:	a0800017 	ldw	r2,0(r20)
 4028354:	98800215 	stw	r2,8(r19)
 4028358:	a0800117 	ldw	r2,4(r20)
 402835c:	98800315 	stw	r2,12(r19)
 4028360:	008006c4 	movi	r2,27
 4028364:	11808036 	bltu	r2,r6,4028568 <_realloc_r+0x4ac>
 4028368:	98c00404 	addi	r3,r19,16
 402836c:	a5000204 	addi	r20,r20,8
 4028370:	00002d06 	br	4028428 <_realloc_r+0x36c>
 4028374:	1d86b03a 	or	r3,r3,r22
 4028378:	ad8b883a 	add	r5,r21,r22
 402837c:	a8c00115 	stw	r3,4(r21)
 4028380:	38800054 	ori	r2,r7,1
 4028384:	28800115 	stw	r2,4(r5)
 4028388:	29cf883a 	add	r7,r5,r7
 402838c:	38800117 	ldw	r2,4(r7)
 4028390:	9009883a 	mov	r4,r18
 4028394:	29400204 	addi	r5,r5,8
 4028398:	10800054 	ori	r2,r2,1
 402839c:	38800115 	stw	r2,4(r7)
 40283a0:	40258080 	call	4025808 <_free_r>
 40283a4:	003f8706 	br	40281c4 <__flash_rwdata_start+0xffff7900>
 40283a8:	300b883a 	mov	r5,r6
 40283ac:	dfc00917 	ldw	ra,36(sp)
 40283b0:	df000817 	ldw	fp,32(sp)
 40283b4:	ddc00717 	ldw	r23,28(sp)
 40283b8:	dd800617 	ldw	r22,24(sp)
 40283bc:	dd400517 	ldw	r21,20(sp)
 40283c0:	dd000417 	ldw	r20,16(sp)
 40283c4:	dcc00317 	ldw	r19,12(sp)
 40283c8:	dc800217 	ldw	r18,8(sp)
 40283cc:	dc400117 	ldw	r17,4(sp)
 40283d0:	dc000017 	ldw	r16,0(sp)
 40283d4:	dec00a04 	addi	sp,sp,40
 40283d8:	40263e41 	jmpi	40263e4 <_malloc_r>
 40283dc:	98800317 	ldw	r2,12(r19)
 40283e0:	98c00217 	ldw	r3,8(r19)
 40283e4:	81bfff04 	addi	r6,r16,-4
 40283e8:	01000904 	movi	r4,36
 40283ec:	18800315 	stw	r2,12(r3)
 40283f0:	10c00215 	stw	r3,8(r2)
 40283f4:	9c400204 	addi	r17,r19,8
 40283f8:	21bfd32e 	bgeu	r4,r6,4028348 <__flash_rwdata_start+0xffff7a84>
 40283fc:	8809883a 	mov	r4,r17
 4028400:	a00b883a 	mov	r5,r20
 4028404:	4026c740 	call	4026c74 <memmove>
 4028408:	98c00117 	ldw	r3,4(r19)
 402840c:	b821883a 	mov	r16,r23
 4028410:	982b883a 	mov	r21,r19
 4028414:	003f6106 	br	402819c <__flash_rwdata_start+0xffff78d8>
 4028418:	8805883a 	mov	r2,r17
 402841c:	a007883a 	mov	r3,r20
 4028420:	003f9906 	br	4028288 <__flash_rwdata_start+0xffff79c4>
 4028424:	8807883a 	mov	r3,r17
 4028428:	a0800017 	ldw	r2,0(r20)
 402842c:	b821883a 	mov	r16,r23
 4028430:	982b883a 	mov	r21,r19
 4028434:	18800015 	stw	r2,0(r3)
 4028438:	a0800117 	ldw	r2,4(r20)
 402843c:	18800115 	stw	r2,4(r3)
 4028440:	a0800217 	ldw	r2,8(r20)
 4028444:	18800215 	stw	r2,8(r3)
 4028448:	98c00117 	ldw	r3,4(r19)
 402844c:	003f5306 	br	402819c <__flash_rwdata_start+0xffff78d8>
 4028450:	adab883a 	add	r21,r21,r22
 4028454:	3585c83a 	sub	r2,r6,r22
 4028458:	e5400215 	stw	r21,8(fp)
 402845c:	10800054 	ori	r2,r2,1
 4028460:	a8800115 	stw	r2,4(r21)
 4028464:	a0bfff17 	ldw	r2,-4(r20)
 4028468:	9009883a 	mov	r4,r18
 402846c:	1080004c 	andi	r2,r2,1
 4028470:	b0acb03a 	or	r22,r22,r2
 4028474:	a5bfff15 	stw	r22,-4(r20)
 4028478:	402e50c0 	call	402e50c <__malloc_unlock>
 402847c:	a005883a 	mov	r2,r20
 4028480:	003f5306 	br	40281d0 <__flash_rwdata_start+0xffff790c>
 4028484:	8809883a 	mov	r4,r17
 4028488:	a00b883a 	mov	r5,r20
 402848c:	4026c740 	call	4026c74 <memmove>
 4028490:	003f8306 	br	40282a0 <__flash_rwdata_start+0xffff79dc>
 4028494:	b0800404 	addi	r2,r22,16
 4028498:	b8bf6016 	blt	r23,r2,402821c <__flash_rwdata_start+0xffff7958>
 402849c:	98800317 	ldw	r2,12(r19)
 40284a0:	98c00217 	ldw	r3,8(r19)
 40284a4:	81bfff04 	addi	r6,r16,-4
 40284a8:	01000904 	movi	r4,36
 40284ac:	18800315 	stw	r2,12(r3)
 40284b0:	10c00215 	stw	r3,8(r2)
 40284b4:	9c400204 	addi	r17,r19,8
 40284b8:	21804336 	bltu	r4,r6,40285c8 <_realloc_r+0x50c>
 40284bc:	008004c4 	movi	r2,19
 40284c0:	11803f2e 	bgeu	r2,r6,40285c0 <_realloc_r+0x504>
 40284c4:	a0800017 	ldw	r2,0(r20)
 40284c8:	98800215 	stw	r2,8(r19)
 40284cc:	a0800117 	ldw	r2,4(r20)
 40284d0:	98800315 	stw	r2,12(r19)
 40284d4:	008006c4 	movi	r2,27
 40284d8:	11803f36 	bltu	r2,r6,40285d8 <_realloc_r+0x51c>
 40284dc:	98800404 	addi	r2,r19,16
 40284e0:	a5000204 	addi	r20,r20,8
 40284e4:	a0c00017 	ldw	r3,0(r20)
 40284e8:	10c00015 	stw	r3,0(r2)
 40284ec:	a0c00117 	ldw	r3,4(r20)
 40284f0:	10c00115 	stw	r3,4(r2)
 40284f4:	a0c00217 	ldw	r3,8(r20)
 40284f8:	10c00215 	stw	r3,8(r2)
 40284fc:	9d87883a 	add	r3,r19,r22
 4028500:	bd85c83a 	sub	r2,r23,r22
 4028504:	e0c00215 	stw	r3,8(fp)
 4028508:	10800054 	ori	r2,r2,1
 402850c:	18800115 	stw	r2,4(r3)
 4028510:	98800117 	ldw	r2,4(r19)
 4028514:	9009883a 	mov	r4,r18
 4028518:	1080004c 	andi	r2,r2,1
 402851c:	b0acb03a 	or	r22,r22,r2
 4028520:	9d800115 	stw	r22,4(r19)
 4028524:	402e50c0 	call	402e50c <__malloc_unlock>
 4028528:	8805883a 	mov	r2,r17
 402852c:	003f2806 	br	40281d0 <__flash_rwdata_start+0xffff790c>
 4028530:	a0c00217 	ldw	r3,8(r20)
 4028534:	88c00215 	stw	r3,8(r17)
 4028538:	a0c00317 	ldw	r3,12(r20)
 402853c:	88c00315 	stw	r3,12(r17)
 4028540:	30801126 	beq	r6,r2,4028588 <_realloc_r+0x4cc>
 4028544:	88800404 	addi	r2,r17,16
 4028548:	a0c00404 	addi	r3,r20,16
 402854c:	003f4e06 	br	4028288 <__flash_rwdata_start+0xffff79c4>
 4028550:	893fff17 	ldw	r4,-4(r17)
 4028554:	00bfff04 	movi	r2,-4
 4028558:	a023883a 	mov	r17,r20
 402855c:	2084703a 	and	r2,r4,r2
 4028560:	80a1883a 	add	r16,r16,r2
 4028564:	003f0d06 	br	402819c <__flash_rwdata_start+0xffff78d8>
 4028568:	a0800217 	ldw	r2,8(r20)
 402856c:	98800415 	stw	r2,16(r19)
 4028570:	a0800317 	ldw	r2,12(r20)
 4028574:	98800515 	stw	r2,20(r19)
 4028578:	31000a26 	beq	r6,r4,40285a4 <_realloc_r+0x4e8>
 402857c:	98c00604 	addi	r3,r19,24
 4028580:	a5000404 	addi	r20,r20,16
 4028584:	003fa806 	br	4028428 <__flash_rwdata_start+0xffff7b64>
 4028588:	a1000417 	ldw	r4,16(r20)
 402858c:	88800604 	addi	r2,r17,24
 4028590:	a0c00604 	addi	r3,r20,24
 4028594:	89000415 	stw	r4,16(r17)
 4028598:	a1000517 	ldw	r4,20(r20)
 402859c:	89000515 	stw	r4,20(r17)
 40285a0:	003f3906 	br	4028288 <__flash_rwdata_start+0xffff79c4>
 40285a4:	a0800417 	ldw	r2,16(r20)
 40285a8:	a5000604 	addi	r20,r20,24
 40285ac:	98c00804 	addi	r3,r19,32
 40285b0:	98800615 	stw	r2,24(r19)
 40285b4:	a0bfff17 	ldw	r2,-4(r20)
 40285b8:	98800715 	stw	r2,28(r19)
 40285bc:	003f9a06 	br	4028428 <__flash_rwdata_start+0xffff7b64>
 40285c0:	8805883a 	mov	r2,r17
 40285c4:	003fc706 	br	40284e4 <__flash_rwdata_start+0xffff7c20>
 40285c8:	8809883a 	mov	r4,r17
 40285cc:	a00b883a 	mov	r5,r20
 40285d0:	4026c740 	call	4026c74 <memmove>
 40285d4:	003fc906 	br	40284fc <__flash_rwdata_start+0xffff7c38>
 40285d8:	a0800217 	ldw	r2,8(r20)
 40285dc:	98800415 	stw	r2,16(r19)
 40285e0:	a0800317 	ldw	r2,12(r20)
 40285e4:	98800515 	stw	r2,20(r19)
 40285e8:	31000726 	beq	r6,r4,4028608 <_realloc_r+0x54c>
 40285ec:	98800604 	addi	r2,r19,24
 40285f0:	a5000404 	addi	r20,r20,16
 40285f4:	003fbb06 	br	40284e4 <__flash_rwdata_start+0xffff7c20>
 40285f8:	9009883a 	mov	r4,r18
 40285fc:	402e50c0 	call	402e50c <__malloc_unlock>
 4028600:	0005883a 	mov	r2,zero
 4028604:	003ef206 	br	40281d0 <__flash_rwdata_start+0xffff790c>
 4028608:	a0c00417 	ldw	r3,16(r20)
 402860c:	a5000604 	addi	r20,r20,24
 4028610:	98800804 	addi	r2,r19,32
 4028614:	98c00615 	stw	r3,24(r19)
 4028618:	a0ffff17 	ldw	r3,-4(r20)
 402861c:	98c00715 	stw	r3,28(r19)
 4028620:	003fb006 	br	40284e4 <__flash_rwdata_start+0xffff7c20>

04028624 <__fpclassifyd>:
 4028624:	00a00034 	movhi	r2,32768
 4028628:	10bfffc4 	addi	r2,r2,-1
 402862c:	2884703a 	and	r2,r5,r2
 4028630:	10000726 	beq	r2,zero,4028650 <__fpclassifyd+0x2c>
 4028634:	00fffc34 	movhi	r3,65520
 4028638:	019ff834 	movhi	r6,32736
 402863c:	28c7883a 	add	r3,r5,r3
 4028640:	31bfffc4 	addi	r6,r6,-1
 4028644:	30c00536 	bltu	r6,r3,402865c <__fpclassifyd+0x38>
 4028648:	00800104 	movi	r2,4
 402864c:	f800283a 	ret
 4028650:	2000021e 	bne	r4,zero,402865c <__fpclassifyd+0x38>
 4028654:	00800084 	movi	r2,2
 4028658:	f800283a 	ret
 402865c:	00dffc34 	movhi	r3,32752
 4028660:	019ff834 	movhi	r6,32736
 4028664:	28cb883a 	add	r5,r5,r3
 4028668:	31bfffc4 	addi	r6,r6,-1
 402866c:	317ff62e 	bgeu	r6,r5,4028648 <__flash_rwdata_start+0xffff7d84>
 4028670:	01400434 	movhi	r5,16
 4028674:	297fffc4 	addi	r5,r5,-1
 4028678:	28800236 	bltu	r5,r2,4028684 <__fpclassifyd+0x60>
 402867c:	008000c4 	movi	r2,3
 4028680:	f800283a 	ret
 4028684:	10c00226 	beq	r2,r3,4028690 <__fpclassifyd+0x6c>
 4028688:	0005883a 	mov	r2,zero
 402868c:	f800283a 	ret
 4028690:	2005003a 	cmpeq	r2,r4,zero
 4028694:	f800283a 	ret

04028698 <_sbrk_r>:
 4028698:	defffd04 	addi	sp,sp,-12
 402869c:	dc000015 	stw	r16,0(sp)
 40286a0:	04000034 	movhi	r16,0
 40286a4:	dc400115 	stw	r17,4(sp)
 40286a8:	84079e04 	addi	r16,r16,7800
 40286ac:	2023883a 	mov	r17,r4
 40286b0:	2809883a 	mov	r4,r5
 40286b4:	dfc00215 	stw	ra,8(sp)
 40286b8:	80000015 	stw	zero,0(r16)
 40286bc:	402e7000 	call	402e700 <sbrk>
 40286c0:	00ffffc4 	movi	r3,-1
 40286c4:	10c00526 	beq	r2,r3,40286dc <_sbrk_r+0x44>
 40286c8:	dfc00217 	ldw	ra,8(sp)
 40286cc:	dc400117 	ldw	r17,4(sp)
 40286d0:	dc000017 	ldw	r16,0(sp)
 40286d4:	dec00304 	addi	sp,sp,12
 40286d8:	f800283a 	ret
 40286dc:	80c00017 	ldw	r3,0(r16)
 40286e0:	183ff926 	beq	r3,zero,40286c8 <__flash_rwdata_start+0xffff7e04>
 40286e4:	88c00015 	stw	r3,0(r17)
 40286e8:	003ff706 	br	40286c8 <__flash_rwdata_start+0xffff7e04>

040286ec <__sread>:
 40286ec:	defffe04 	addi	sp,sp,-8
 40286f0:	dc000015 	stw	r16,0(sp)
 40286f4:	2821883a 	mov	r16,r5
 40286f8:	2940038f 	ldh	r5,14(r5)
 40286fc:	dfc00115 	stw	ra,4(sp)
 4028700:	402a4780 	call	402a478 <_read_r>
 4028704:	10000716 	blt	r2,zero,4028724 <__sread+0x38>
 4028708:	80c01417 	ldw	r3,80(r16)
 402870c:	1887883a 	add	r3,r3,r2
 4028710:	80c01415 	stw	r3,80(r16)
 4028714:	dfc00117 	ldw	ra,4(sp)
 4028718:	dc000017 	ldw	r16,0(sp)
 402871c:	dec00204 	addi	sp,sp,8
 4028720:	f800283a 	ret
 4028724:	80c0030b 	ldhu	r3,12(r16)
 4028728:	18fbffcc 	andi	r3,r3,61439
 402872c:	80c0030d 	sth	r3,12(r16)
 4028730:	dfc00117 	ldw	ra,4(sp)
 4028734:	dc000017 	ldw	r16,0(sp)
 4028738:	dec00204 	addi	sp,sp,8
 402873c:	f800283a 	ret

04028740 <__seofread>:
 4028740:	0005883a 	mov	r2,zero
 4028744:	f800283a 	ret

04028748 <__swrite>:
 4028748:	2880030b 	ldhu	r2,12(r5)
 402874c:	defffb04 	addi	sp,sp,-20
 4028750:	dcc00315 	stw	r19,12(sp)
 4028754:	dc800215 	stw	r18,8(sp)
 4028758:	dc400115 	stw	r17,4(sp)
 402875c:	dc000015 	stw	r16,0(sp)
 4028760:	dfc00415 	stw	ra,16(sp)
 4028764:	10c0400c 	andi	r3,r2,256
 4028768:	2821883a 	mov	r16,r5
 402876c:	2027883a 	mov	r19,r4
 4028770:	3025883a 	mov	r18,r6
 4028774:	3823883a 	mov	r17,r7
 4028778:	18000526 	beq	r3,zero,4028790 <__swrite+0x48>
 402877c:	2940038f 	ldh	r5,14(r5)
 4028780:	000d883a 	mov	r6,zero
 4028784:	01c00084 	movi	r7,2
 4028788:	402a41c0 	call	402a41c <_lseek_r>
 402878c:	8080030b 	ldhu	r2,12(r16)
 4028790:	8140038f 	ldh	r5,14(r16)
 4028794:	10bbffcc 	andi	r2,r2,61439
 4028798:	9809883a 	mov	r4,r19
 402879c:	900d883a 	mov	r6,r18
 40287a0:	880f883a 	mov	r7,r17
 40287a4:	8080030d 	sth	r2,12(r16)
 40287a8:	dfc00417 	ldw	ra,16(sp)
 40287ac:	dcc00317 	ldw	r19,12(sp)
 40287b0:	dc800217 	ldw	r18,8(sp)
 40287b4:	dc400117 	ldw	r17,4(sp)
 40287b8:	dc000017 	ldw	r16,0(sp)
 40287bc:	dec00504 	addi	sp,sp,20
 40287c0:	4029f041 	jmpi	4029f04 <_write_r>

040287c4 <__sseek>:
 40287c4:	defffe04 	addi	sp,sp,-8
 40287c8:	dc000015 	stw	r16,0(sp)
 40287cc:	2821883a 	mov	r16,r5
 40287d0:	2940038f 	ldh	r5,14(r5)
 40287d4:	dfc00115 	stw	ra,4(sp)
 40287d8:	402a41c0 	call	402a41c <_lseek_r>
 40287dc:	00ffffc4 	movi	r3,-1
 40287e0:	10c00826 	beq	r2,r3,4028804 <__sseek+0x40>
 40287e4:	80c0030b 	ldhu	r3,12(r16)
 40287e8:	80801415 	stw	r2,80(r16)
 40287ec:	18c40014 	ori	r3,r3,4096
 40287f0:	80c0030d 	sth	r3,12(r16)
 40287f4:	dfc00117 	ldw	ra,4(sp)
 40287f8:	dc000017 	ldw	r16,0(sp)
 40287fc:	dec00204 	addi	sp,sp,8
 4028800:	f800283a 	ret
 4028804:	80c0030b 	ldhu	r3,12(r16)
 4028808:	18fbffcc 	andi	r3,r3,61439
 402880c:	80c0030d 	sth	r3,12(r16)
 4028810:	dfc00117 	ldw	ra,4(sp)
 4028814:	dc000017 	ldw	r16,0(sp)
 4028818:	dec00204 	addi	sp,sp,8
 402881c:	f800283a 	ret

04028820 <__sclose>:
 4028820:	2940038f 	ldh	r5,14(r5)
 4028824:	4029f601 	jmpi	4029f60 <_close_r>

04028828 <strcmp>:
 4028828:	2144b03a 	or	r2,r4,r5
 402882c:	108000cc 	andi	r2,r2,3
 4028830:	1000171e 	bne	r2,zero,4028890 <strcmp+0x68>
 4028834:	20800017 	ldw	r2,0(r4)
 4028838:	28c00017 	ldw	r3,0(r5)
 402883c:	10c0141e 	bne	r2,r3,4028890 <strcmp+0x68>
 4028840:	027fbff4 	movhi	r9,65279
 4028844:	4a7fbfc4 	addi	r9,r9,-257
 4028848:	0086303a 	nor	r3,zero,r2
 402884c:	02202074 	movhi	r8,32897
 4028850:	1245883a 	add	r2,r2,r9
 4028854:	42202004 	addi	r8,r8,-32640
 4028858:	10c4703a 	and	r2,r2,r3
 402885c:	1204703a 	and	r2,r2,r8
 4028860:	10000226 	beq	r2,zero,402886c <strcmp+0x44>
 4028864:	00001706 	br	40288c4 <strcmp+0x9c>
 4028868:	1000161e 	bne	r2,zero,40288c4 <strcmp+0x9c>
 402886c:	21000104 	addi	r4,r4,4
 4028870:	20c00017 	ldw	r3,0(r4)
 4028874:	29400104 	addi	r5,r5,4
 4028878:	29800017 	ldw	r6,0(r5)
 402887c:	1a4f883a 	add	r7,r3,r9
 4028880:	00c4303a 	nor	r2,zero,r3
 4028884:	3884703a 	and	r2,r7,r2
 4028888:	1204703a 	and	r2,r2,r8
 402888c:	19bff626 	beq	r3,r6,4028868 <__flash_rwdata_start+0xffff7fa4>
 4028890:	20800007 	ldb	r2,0(r4)
 4028894:	1000051e 	bne	r2,zero,40288ac <strcmp+0x84>
 4028898:	00000606 	br	40288b4 <strcmp+0x8c>
 402889c:	21000044 	addi	r4,r4,1
 40288a0:	20800007 	ldb	r2,0(r4)
 40288a4:	29400044 	addi	r5,r5,1
 40288a8:	10000226 	beq	r2,zero,40288b4 <strcmp+0x8c>
 40288ac:	28c00007 	ldb	r3,0(r5)
 40288b0:	10fffa26 	beq	r2,r3,402889c <__flash_rwdata_start+0xffff7fd8>
 40288b4:	20800003 	ldbu	r2,0(r4)
 40288b8:	28c00003 	ldbu	r3,0(r5)
 40288bc:	10c5c83a 	sub	r2,r2,r3
 40288c0:	f800283a 	ret
 40288c4:	0005883a 	mov	r2,zero
 40288c8:	f800283a 	ret

040288cc <__sprint_r.part.0>:
 40288cc:	28801917 	ldw	r2,100(r5)
 40288d0:	defff604 	addi	sp,sp,-40
 40288d4:	dd400515 	stw	r21,20(sp)
 40288d8:	dcc00315 	stw	r19,12(sp)
 40288dc:	dfc00915 	stw	ra,36(sp)
 40288e0:	df000815 	stw	fp,32(sp)
 40288e4:	ddc00715 	stw	r23,28(sp)
 40288e8:	dd800615 	stw	r22,24(sp)
 40288ec:	dd000415 	stw	r20,16(sp)
 40288f0:	dc800215 	stw	r18,8(sp)
 40288f4:	dc400115 	stw	r17,4(sp)
 40288f8:	dc000015 	stw	r16,0(sp)
 40288fc:	1088000c 	andi	r2,r2,8192
 4028900:	2827883a 	mov	r19,r5
 4028904:	302b883a 	mov	r21,r6
 4028908:	10002d26 	beq	r2,zero,40289c0 <__sprint_r.part.0+0xf4>
 402890c:	30800217 	ldw	r2,8(r6)
 4028910:	35800017 	ldw	r22,0(r6)
 4028914:	10002826 	beq	r2,zero,40289b8 <__sprint_r.part.0+0xec>
 4028918:	2029883a 	mov	r20,r4
 402891c:	b5c00104 	addi	r23,r22,4
 4028920:	04bfffc4 	movi	r18,-1
 4028924:	bc400017 	ldw	r17,0(r23)
 4028928:	b4000017 	ldw	r16,0(r22)
 402892c:	0039883a 	mov	fp,zero
 4028930:	8822d0ba 	srli	r17,r17,2
 4028934:	04400316 	blt	zero,r17,4028944 <__sprint_r.part.0+0x78>
 4028938:	00001806 	br	402899c <__sprint_r.part.0+0xd0>
 402893c:	84000104 	addi	r16,r16,4
 4028940:	8f001526 	beq	r17,fp,4028998 <__sprint_r.part.0+0xcc>
 4028944:	81400017 	ldw	r5,0(r16)
 4028948:	a009883a 	mov	r4,r20
 402894c:	980d883a 	mov	r6,r19
 4028950:	402a1900 	call	402a190 <_fputwc_r>
 4028954:	e7000044 	addi	fp,fp,1
 4028958:	14bff81e 	bne	r2,r18,402893c <__flash_rwdata_start+0xffff8078>
 402895c:	9005883a 	mov	r2,r18
 4028960:	a8000215 	stw	zero,8(r21)
 4028964:	a8000115 	stw	zero,4(r21)
 4028968:	dfc00917 	ldw	ra,36(sp)
 402896c:	df000817 	ldw	fp,32(sp)
 4028970:	ddc00717 	ldw	r23,28(sp)
 4028974:	dd800617 	ldw	r22,24(sp)
 4028978:	dd400517 	ldw	r21,20(sp)
 402897c:	dd000417 	ldw	r20,16(sp)
 4028980:	dcc00317 	ldw	r19,12(sp)
 4028984:	dc800217 	ldw	r18,8(sp)
 4028988:	dc400117 	ldw	r17,4(sp)
 402898c:	dc000017 	ldw	r16,0(sp)
 4028990:	dec00a04 	addi	sp,sp,40
 4028994:	f800283a 	ret
 4028998:	a8800217 	ldw	r2,8(r21)
 402899c:	8c63883a 	add	r17,r17,r17
 40289a0:	8c63883a 	add	r17,r17,r17
 40289a4:	1445c83a 	sub	r2,r2,r17
 40289a8:	a8800215 	stw	r2,8(r21)
 40289ac:	b5800204 	addi	r22,r22,8
 40289b0:	bdc00204 	addi	r23,r23,8
 40289b4:	103fdb1e 	bne	r2,zero,4028924 <__flash_rwdata_start+0xffff8060>
 40289b8:	0005883a 	mov	r2,zero
 40289bc:	003fe806 	br	4028960 <__flash_rwdata_start+0xffff809c>
 40289c0:	4025af80 	call	4025af8 <__sfvwrite_r>
 40289c4:	003fe606 	br	4028960 <__flash_rwdata_start+0xffff809c>

040289c8 <__sprint_r>:
 40289c8:	30c00217 	ldw	r3,8(r6)
 40289cc:	18000126 	beq	r3,zero,40289d4 <__sprint_r+0xc>
 40289d0:	40288cc1 	jmpi	40288cc <__sprint_r.part.0>
 40289d4:	30000115 	stw	zero,4(r6)
 40289d8:	0005883a 	mov	r2,zero
 40289dc:	f800283a 	ret

040289e0 <___vfiprintf_internal_r>:
 40289e0:	deffca04 	addi	sp,sp,-216
 40289e4:	dcc02f15 	stw	r19,188(sp)
 40289e8:	dfc03515 	stw	ra,212(sp)
 40289ec:	df003415 	stw	fp,208(sp)
 40289f0:	ddc03315 	stw	r23,204(sp)
 40289f4:	dd803215 	stw	r22,200(sp)
 40289f8:	dd403115 	stw	r21,196(sp)
 40289fc:	dd003015 	stw	r20,192(sp)
 4028a00:	dc802e15 	stw	r18,184(sp)
 4028a04:	dc402d15 	stw	r17,180(sp)
 4028a08:	dc002c15 	stw	r16,176(sp)
 4028a0c:	d9002215 	stw	r4,136(sp)
 4028a10:	d9402115 	stw	r5,132(sp)
 4028a14:	d9c02315 	stw	r7,140(sp)
 4028a18:	3027883a 	mov	r19,r6
 4028a1c:	20000226 	beq	r4,zero,4028a28 <___vfiprintf_internal_r+0x48>
 4028a20:	20800e17 	ldw	r2,56(r4)
 4028a24:	10018d26 	beq	r2,zero,402905c <___vfiprintf_internal_r+0x67c>
 4028a28:	d8c02117 	ldw	r3,132(sp)
 4028a2c:	1880030b 	ldhu	r2,12(r3)
 4028a30:	10c8000c 	andi	r3,r2,8192
 4028a34:	1800071e 	bne	r3,zero,4028a54 <___vfiprintf_internal_r+0x74>
 4028a38:	d9402117 	ldw	r5,132(sp)
 4028a3c:	00f7ffc4 	movi	r3,-8193
 4028a40:	10880014 	ori	r2,r2,8192
 4028a44:	29001917 	ldw	r4,100(r5)
 4028a48:	2880030d 	sth	r2,12(r5)
 4028a4c:	20c6703a 	and	r3,r4,r3
 4028a50:	28c01915 	stw	r3,100(r5)
 4028a54:	10c0020c 	andi	r3,r2,8
 4028a58:	18016126 	beq	r3,zero,4028fe0 <___vfiprintf_internal_r+0x600>
 4028a5c:	d9002117 	ldw	r4,132(sp)
 4028a60:	20c00417 	ldw	r3,16(r4)
 4028a64:	18015e26 	beq	r3,zero,4028fe0 <___vfiprintf_internal_r+0x600>
 4028a68:	1080068c 	andi	r2,r2,26
 4028a6c:	00c00284 	movi	r3,10
 4028a70:	10c16426 	beq	r2,r3,4029004 <___vfiprintf_internal_r+0x624>
 4028a74:	d9001a04 	addi	r4,sp,104
 4028a78:	d94019c4 	addi	r5,sp,103
 4028a7c:	04400034 	movhi	r17,0
 4028a80:	2145c83a 	sub	r2,r4,r5
 4028a84:	8c408004 	addi	r17,r17,512
 4028a88:	d9001e15 	stw	r4,120(sp)
 4028a8c:	d9401f15 	stw	r5,124(sp)
 4028a90:	dec01a15 	stw	sp,104(sp)
 4028a94:	d8001c15 	stw	zero,112(sp)
 4028a98:	d8001b15 	stw	zero,108(sp)
 4028a9c:	d8002715 	stw	zero,156(sp)
 4028aa0:	d8002515 	stw	zero,148(sp)
 4028aa4:	d8802815 	stw	r2,160(sp)
 4028aa8:	d829883a 	mov	r20,sp
 4028aac:	982d883a 	mov	r22,r19
 4028ab0:	b0800007 	ldb	r2,0(r22)
 4028ab4:	10038126 	beq	r2,zero,40298bc <___vfiprintf_internal_r+0xedc>
 4028ab8:	01000944 	movi	r4,37
 4028abc:	11037f26 	beq	r2,r4,40298bc <___vfiprintf_internal_r+0xedc>
 4028ac0:	b005883a 	mov	r2,r22
 4028ac4:	00000106 	br	4028acc <___vfiprintf_internal_r+0xec>
 4028ac8:	19000326 	beq	r3,r4,4028ad8 <___vfiprintf_internal_r+0xf8>
 4028acc:	10800044 	addi	r2,r2,1
 4028ad0:	10c00007 	ldb	r3,0(r2)
 4028ad4:	183ffc1e 	bne	r3,zero,4028ac8 <__flash_rwdata_start+0xffff8204>
 4028ad8:	15a1c83a 	sub	r16,r2,r22
 4028adc:	102b883a 	mov	r21,r2
 4028ae0:	80001026 	beq	r16,zero,4028b24 <___vfiprintf_internal_r+0x144>
 4028ae4:	d8c01c17 	ldw	r3,112(sp)
 4028ae8:	d8801b17 	ldw	r2,108(sp)
 4028aec:	a5800015 	stw	r22,0(r20)
 4028af0:	80c7883a 	add	r3,r16,r3
 4028af4:	10800044 	addi	r2,r2,1
 4028af8:	a4000115 	stw	r16,4(r20)
 4028afc:	d8c01c15 	stw	r3,112(sp)
 4028b00:	d8801b15 	stw	r2,108(sp)
 4028b04:	010001c4 	movi	r4,7
 4028b08:	2080730e 	bge	r4,r2,4028cd8 <___vfiprintf_internal_r+0x2f8>
 4028b0c:	1803781e 	bne	r3,zero,40298f0 <___vfiprintf_internal_r+0xf10>
 4028b10:	d8c02517 	ldw	r3,148(sp)
 4028b14:	d8001b15 	stw	zero,108(sp)
 4028b18:	d829883a 	mov	r20,sp
 4028b1c:	1c07883a 	add	r3,r3,r16
 4028b20:	d8c02515 	stw	r3,148(sp)
 4028b24:	a8800007 	ldb	r2,0(r21)
 4028b28:	1002a126 	beq	r2,zero,40295b0 <___vfiprintf_internal_r+0xbd0>
 4028b2c:	a8800044 	addi	r2,r21,1
 4028b30:	a9800047 	ldb	r6,1(r21)
 4028b34:	d8001d85 	stb	zero,118(sp)
 4028b38:	d8002005 	stb	zero,128(sp)
 4028b3c:	043fffc4 	movi	r16,-1
 4028b40:	d8002415 	stw	zero,144(sp)
 4028b44:	0025883a 	mov	r18,zero
 4028b48:	05401604 	movi	r21,88
 4028b4c:	04c00244 	movi	r19,9
 4028b50:	15800044 	addi	r22,r2,1
 4028b54:	30bff804 	addi	r2,r6,-32
 4028b58:	a8823d36 	bltu	r21,r2,4029450 <___vfiprintf_internal_r+0xa70>
 4028b5c:	100490ba 	slli	r2,r2,2
 4028b60:	010100f4 	movhi	r4,1027
 4028b64:	2122dd04 	addi	r4,r4,-29836
 4028b68:	1105883a 	add	r2,r2,r4
 4028b6c:	10800017 	ldw	r2,0(r2)
 4028b70:	1000683a 	jmp	r2
 4028b74:	04029290 	cmplti	r16,zero,2634
 4028b78:	04029450 	cmplti	r16,zero,2641
 4028b7c:	04029450 	cmplti	r16,zero,2641
 4028b80:	040292ac 	andhi	r16,zero,2634
 4028b84:	04029450 	cmplti	r16,zero,2641
 4028b88:	04029450 	cmplti	r16,zero,2641
 4028b8c:	04029450 	cmplti	r16,zero,2641
 4028b90:	04029450 	cmplti	r16,zero,2641
 4028b94:	04029450 	cmplti	r16,zero,2641
 4028b98:	04029450 	cmplti	r16,zero,2641
 4028b9c:	040292bc 	xorhi	r16,zero,2634
 4028ba0:	040292e4 	muli	r16,zero,2635
 4028ba4:	04029450 	cmplti	r16,zero,2641
 4028ba8:	04029064 	muli	r16,zero,2625
 4028bac:	040291e8 	cmpgeui	r16,zero,2631
 4028bb0:	04029450 	cmplti	r16,zero,2641
 4028bb4:	04029158 	cmpnei	r16,zero,2629
 4028bb8:	04029168 	cmpgeui	r16,zero,2629
 4028bbc:	04029168 	cmpgeui	r16,zero,2629
 4028bc0:	04029168 	cmpgeui	r16,zero,2629
 4028bc4:	04029168 	cmpgeui	r16,zero,2629
 4028bc8:	04029168 	cmpgeui	r16,zero,2629
 4028bcc:	04029168 	cmpgeui	r16,zero,2629
 4028bd0:	04029168 	cmpgeui	r16,zero,2629
 4028bd4:	04029168 	cmpgeui	r16,zero,2629
 4028bd8:	04029168 	cmpgeui	r16,zero,2629
 4028bdc:	04029450 	cmplti	r16,zero,2641
 4028be0:	04029450 	cmplti	r16,zero,2641
 4028be4:	04029450 	cmplti	r16,zero,2641
 4028be8:	04029450 	cmplti	r16,zero,2641
 4028bec:	04029450 	cmplti	r16,zero,2641
 4028bf0:	04029450 	cmplti	r16,zero,2641
 4028bf4:	04029450 	cmplti	r16,zero,2641
 4028bf8:	04029450 	cmplti	r16,zero,2641
 4028bfc:	04029450 	cmplti	r16,zero,2641
 4028c00:	04029450 	cmplti	r16,zero,2641
 4028c04:	040291a0 	cmpeqi	r16,zero,2630
 4028c08:	04029450 	cmplti	r16,zero,2641
 4028c0c:	04029450 	cmplti	r16,zero,2641
 4028c10:	04029450 	cmplti	r16,zero,2641
 4028c14:	04029450 	cmplti	r16,zero,2641
 4028c18:	04029450 	cmplti	r16,zero,2641
 4028c1c:	04029450 	cmplti	r16,zero,2641
 4028c20:	04029450 	cmplti	r16,zero,2641
 4028c24:	04029450 	cmplti	r16,zero,2641
 4028c28:	04029450 	cmplti	r16,zero,2641
 4028c2c:	04029450 	cmplti	r16,zero,2641
 4028c30:	04028d20 	cmpeqi	r16,zero,2612
 4028c34:	04029450 	cmplti	r16,zero,2641
 4028c38:	04029450 	cmplti	r16,zero,2641
 4028c3c:	04029450 	cmplti	r16,zero,2641
 4028c40:	04029450 	cmplti	r16,zero,2641
 4028c44:	04029450 	cmplti	r16,zero,2641
 4028c48:	04028cec 	andhi	r16,zero,2611
 4028c4c:	04029450 	cmplti	r16,zero,2641
 4028c50:	04029450 	cmplti	r16,zero,2641
 4028c54:	040290d4 	movui	r16,2627
 4028c58:	04029450 	cmplti	r16,zero,2641
 4028c5c:	04029450 	cmplti	r16,zero,2641
 4028c60:	04029450 	cmplti	r16,zero,2641
 4028c64:	04029450 	cmplti	r16,zero,2641
 4028c68:	04029450 	cmplti	r16,zero,2641
 4028c6c:	04029450 	cmplti	r16,zero,2641
 4028c70:	04029450 	cmplti	r16,zero,2641
 4028c74:	04029450 	cmplti	r16,zero,2641
 4028c78:	04029450 	cmplti	r16,zero,2641
 4028c7c:	04029450 	cmplti	r16,zero,2641
 4028c80:	0402912c 	andhi	r16,zero,2628
 4028c84:	040292f8 	rdprs	r16,zero,2635
 4028c88:	04029450 	cmplti	r16,zero,2641
 4028c8c:	04029450 	cmplti	r16,zero,2641
 4028c90:	04029450 	cmplti	r16,zero,2641
 4028c94:	040293b4 	movhi	r16,2638
 4028c98:	040292f8 	rdprs	r16,zero,2635
 4028c9c:	04029450 	cmplti	r16,zero,2641
 4028ca0:	04029450 	cmplti	r16,zero,2641
 4028ca4:	040293c4 	movi	r16,2639
 4028ca8:	04029450 	cmplti	r16,zero,2641
 4028cac:	04029238 	rdprs	r16,zero,2632
 4028cb0:	04028d24 	muli	r16,zero,2612
 4028cb4:	040293dc 	xori	r16,zero,2639
 4028cb8:	0402941c 	xori	r16,zero,2640
 4028cbc:	04029450 	cmplti	r16,zero,2641
 4028cc0:	04029330 	cmpltui	r16,zero,2636
 4028cc4:	04029450 	cmplti	r16,zero,2641
 4028cc8:	04028cf0 	cmpltui	r16,zero,2611
 4028ccc:	04029450 	cmplti	r16,zero,2641
 4028cd0:	04029450 	cmplti	r16,zero,2641
 4028cd4:	04029378 	rdprs	r16,zero,2637
 4028cd8:	a5000204 	addi	r20,r20,8
 4028cdc:	d8c02517 	ldw	r3,148(sp)
 4028ce0:	1c07883a 	add	r3,r3,r16
 4028ce4:	d8c02515 	stw	r3,148(sp)
 4028ce8:	003f8e06 	br	4028b24 <__flash_rwdata_start+0xffff8260>
 4028cec:	94800414 	ori	r18,r18,16
 4028cf0:	9080080c 	andi	r2,r18,32
 4028cf4:	1001cd1e 	bne	r2,zero,402942c <___vfiprintf_internal_r+0xa4c>
 4028cf8:	9080040c 	andi	r2,r18,16
 4028cfc:	10034e26 	beq	r2,zero,4029a38 <___vfiprintf_internal_r+0x1058>
 4028d00:	d9002317 	ldw	r4,140(sp)
 4028d04:	002f883a 	mov	r23,zero
 4028d08:	00800044 	movi	r2,1
 4028d0c:	24c00017 	ldw	r19,0(r4)
 4028d10:	21000104 	addi	r4,r4,4
 4028d14:	d9002315 	stw	r4,140(sp)
 4028d18:	9807883a 	mov	r3,r19
 4028d1c:	00000c06 	br	4028d50 <___vfiprintf_internal_r+0x370>
 4028d20:	94800414 	ori	r18,r18,16
 4028d24:	9080080c 	andi	r2,r18,32
 4028d28:	1001501e 	bne	r2,zero,402926c <___vfiprintf_internal_r+0x88c>
 4028d2c:	9080040c 	andi	r2,r18,16
 4028d30:	10033726 	beq	r2,zero,4029a10 <___vfiprintf_internal_r+0x1030>
 4028d34:	d9002317 	ldw	r4,140(sp)
 4028d38:	002f883a 	mov	r23,zero
 4028d3c:	0005883a 	mov	r2,zero
 4028d40:	24c00017 	ldw	r19,0(r4)
 4028d44:	21000104 	addi	r4,r4,4
 4028d48:	d9002315 	stw	r4,140(sp)
 4028d4c:	9807883a 	mov	r3,r19
 4028d50:	d8001d85 	stb	zero,118(sp)
 4028d54:	dc002015 	stw	r16,128(sp)
 4028d58:	0015883a 	mov	r10,zero
 4028d5c:	80000216 	blt	r16,zero,4028d68 <___vfiprintf_internal_r+0x388>
 4028d60:	013fdfc4 	movi	r4,-129
 4028d64:	9124703a 	and	r18,r18,r4
 4028d68:	1801ec1e 	bne	r3,zero,402951c <___vfiprintf_internal_r+0xb3c>
 4028d6c:	8002b826 	beq	r16,zero,4029850 <___vfiprintf_internal_r+0xe70>
 4028d70:	10803fcc 	andi	r2,r2,255
 4028d74:	00c00044 	movi	r3,1
 4028d78:	10c20726 	beq	r2,r3,4029598 <___vfiprintf_internal_r+0xbb8>
 4028d7c:	00c00084 	movi	r3,2
 4028d80:	df001a04 	addi	fp,sp,104
 4028d84:	10c0bb1e 	bne	r2,r3,4029074 <___vfiprintf_internal_r+0x694>
 4028d88:	d9002717 	ldw	r4,156(sp)
 4028d8c:	988003cc 	andi	r2,r19,15
 4028d90:	b806973a 	slli	r3,r23,28
 4028d94:	2085883a 	add	r2,r4,r2
 4028d98:	9826d13a 	srli	r19,r19,4
 4028d9c:	10800003 	ldbu	r2,0(r2)
 4028da0:	b82ed13a 	srli	r23,r23,4
 4028da4:	e73fffc4 	addi	fp,fp,-1
 4028da8:	1ce6b03a 	or	r19,r3,r19
 4028dac:	e0800005 	stb	r2,0(fp)
 4028db0:	9dc4b03a 	or	r2,r19,r23
 4028db4:	103ff51e 	bne	r2,zero,4028d8c <__flash_rwdata_start+0xffff84c8>
 4028db8:	d8c01e17 	ldw	r3,120(sp)
 4028dbc:	1f07c83a 	sub	r3,r3,fp
 4028dc0:	d8c02015 	stw	r3,128(sp)
 4028dc4:	dd402017 	ldw	r21,128(sp)
 4028dc8:	ac00010e 	bge	r21,r16,4028dd0 <___vfiprintf_internal_r+0x3f0>
 4028dcc:	802b883a 	mov	r21,r16
 4028dd0:	52803fcc 	andi	r10,r10,255
 4028dd4:	5280201c 	xori	r10,r10,128
 4028dd8:	52bfe004 	addi	r10,r10,-128
 4028ddc:	50000126 	beq	r10,zero,4028de4 <___vfiprintf_internal_r+0x404>
 4028de0:	ad400044 	addi	r21,r21,1
 4028de4:	91c0008c 	andi	r7,r18,2
 4028de8:	38000126 	beq	r7,zero,4028df0 <___vfiprintf_internal_r+0x410>
 4028dec:	ad400084 	addi	r21,r21,2
 4028df0:	95c0210c 	andi	r23,r18,132
 4028df4:	b801ad1e 	bne	r23,zero,40294ac <___vfiprintf_internal_r+0xacc>
 4028df8:	d9002417 	ldw	r4,144(sp)
 4028dfc:	2567c83a 	sub	r19,r4,r21
 4028e00:	04c1aa0e 	bge	zero,r19,40294ac <___vfiprintf_internal_r+0xacc>
 4028e04:	00c00404 	movi	r3,16
 4028e08:	d8801c17 	ldw	r2,112(sp)
 4028e0c:	1cc37f0e 	bge	r3,r19,4029c0c <___vfiprintf_internal_r+0x122c>
 4028e10:	01000034 	movhi	r4,0
 4028e14:	21008404 	addi	r4,r4,528
 4028e18:	dc002915 	stw	r16,164(sp)
 4028e1c:	d9801b17 	ldw	r6,108(sp)
 4028e20:	9821883a 	mov	r16,r19
 4028e24:	d9002615 	stw	r4,152(sp)
 4028e28:	02c001c4 	movi	r11,7
 4028e2c:	3827883a 	mov	r19,r7
 4028e30:	00000506 	br	4028e48 <___vfiprintf_internal_r+0x468>
 4028e34:	31400084 	addi	r5,r6,2
 4028e38:	a5000204 	addi	r20,r20,8
 4028e3c:	200d883a 	mov	r6,r4
 4028e40:	843ffc04 	addi	r16,r16,-16
 4028e44:	1c000f0e 	bge	r3,r16,4028e84 <___vfiprintf_internal_r+0x4a4>
 4028e48:	01400034 	movhi	r5,0
 4028e4c:	10800404 	addi	r2,r2,16
 4028e50:	31000044 	addi	r4,r6,1
 4028e54:	29408404 	addi	r5,r5,528
 4028e58:	a1400015 	stw	r5,0(r20)
 4028e5c:	a0c00115 	stw	r3,4(r20)
 4028e60:	d8801c15 	stw	r2,112(sp)
 4028e64:	d9001b15 	stw	r4,108(sp)
 4028e68:	593ff20e 	bge	r11,r4,4028e34 <__flash_rwdata_start+0xffff8570>
 4028e6c:	1001811e 	bne	r2,zero,4029474 <___vfiprintf_internal_r+0xa94>
 4028e70:	843ffc04 	addi	r16,r16,-16
 4028e74:	000d883a 	mov	r6,zero
 4028e78:	01400044 	movi	r5,1
 4028e7c:	d829883a 	mov	r20,sp
 4028e80:	1c3ff116 	blt	r3,r16,4028e48 <__flash_rwdata_start+0xffff8584>
 4028e84:	980f883a 	mov	r7,r19
 4028e88:	8027883a 	mov	r19,r16
 4028e8c:	dc002917 	ldw	r16,164(sp)
 4028e90:	d8c02617 	ldw	r3,152(sp)
 4028e94:	9885883a 	add	r2,r19,r2
 4028e98:	a4c00115 	stw	r19,4(r20)
 4028e9c:	a0c00015 	stw	r3,0(r20)
 4028ea0:	d8801c15 	stw	r2,112(sp)
 4028ea4:	d9401b15 	stw	r5,108(sp)
 4028ea8:	00c001c4 	movi	r3,7
 4028eac:	19427416 	blt	r3,r5,4029880 <___vfiprintf_internal_r+0xea0>
 4028eb0:	d8c01d87 	ldb	r3,118(sp)
 4028eb4:	a5000204 	addi	r20,r20,8
 4028eb8:	29000044 	addi	r4,r5,1
 4028ebc:	1801801e 	bne	r3,zero,40294c0 <___vfiprintf_internal_r+0xae0>
 4028ec0:	38000c26 	beq	r7,zero,4028ef4 <___vfiprintf_internal_r+0x514>
 4028ec4:	d8c01d04 	addi	r3,sp,116
 4028ec8:	10800084 	addi	r2,r2,2
 4028ecc:	a0c00015 	stw	r3,0(r20)
 4028ed0:	00c00084 	movi	r3,2
 4028ed4:	a0c00115 	stw	r3,4(r20)
 4028ed8:	d8801c15 	stw	r2,112(sp)
 4028edc:	d9001b15 	stw	r4,108(sp)
 4028ee0:	00c001c4 	movi	r3,7
 4028ee4:	19025516 	blt	r3,r4,402983c <___vfiprintf_internal_r+0xe5c>
 4028ee8:	200b883a 	mov	r5,r4
 4028eec:	a5000204 	addi	r20,r20,8
 4028ef0:	21000044 	addi	r4,r4,1
 4028ef4:	00c02004 	movi	r3,128
 4028ef8:	b8c21326 	beq	r23,r3,4029748 <___vfiprintf_internal_r+0xd68>
 4028efc:	d8c02017 	ldw	r3,128(sp)
 4028f00:	80e1c83a 	sub	r16,r16,r3
 4028f04:	0400230e 	bge	zero,r16,4028f94 <___vfiprintf_internal_r+0x5b4>
 4028f08:	04c00404 	movi	r19,16
 4028f0c:	9c03240e 	bge	r19,r16,4029ba0 <___vfiprintf_internal_r+0x11c0>
 4028f10:	00c00034 	movhi	r3,0
 4028f14:	18c08004 	addi	r3,r3,512
 4028f18:	d8c02615 	stw	r3,152(sp)
 4028f1c:	05c001c4 	movi	r23,7
 4028f20:	00000506 	br	4028f38 <___vfiprintf_internal_r+0x558>
 4028f24:	29000084 	addi	r4,r5,2
 4028f28:	a5000204 	addi	r20,r20,8
 4028f2c:	180b883a 	mov	r5,r3
 4028f30:	843ffc04 	addi	r16,r16,-16
 4028f34:	9c000d0e 	bge	r19,r16,4028f6c <___vfiprintf_internal_r+0x58c>
 4028f38:	10800404 	addi	r2,r2,16
 4028f3c:	28c00044 	addi	r3,r5,1
 4028f40:	a4400015 	stw	r17,0(r20)
 4028f44:	a4c00115 	stw	r19,4(r20)
 4028f48:	d8801c15 	stw	r2,112(sp)
 4028f4c:	d8c01b15 	stw	r3,108(sp)
 4028f50:	b8fff40e 	bge	r23,r3,4028f24 <__flash_rwdata_start+0xffff8660>
 4028f54:	1001671e 	bne	r2,zero,40294f4 <___vfiprintf_internal_r+0xb14>
 4028f58:	843ffc04 	addi	r16,r16,-16
 4028f5c:	01000044 	movi	r4,1
 4028f60:	000b883a 	mov	r5,zero
 4028f64:	d829883a 	mov	r20,sp
 4028f68:	9c3ff316 	blt	r19,r16,4028f38 <__flash_rwdata_start+0xffff8674>
 4028f6c:	d8c02617 	ldw	r3,152(sp)
 4028f70:	1405883a 	add	r2,r2,r16
 4028f74:	a4000115 	stw	r16,4(r20)
 4028f78:	a0c00015 	stw	r3,0(r20)
 4028f7c:	d8801c15 	stw	r2,112(sp)
 4028f80:	d9001b15 	stw	r4,108(sp)
 4028f84:	00c001c4 	movi	r3,7
 4028f88:	19019516 	blt	r3,r4,40295e0 <___vfiprintf_internal_r+0xc00>
 4028f8c:	a5000204 	addi	r20,r20,8
 4028f90:	21000044 	addi	r4,r4,1
 4028f94:	d8c02017 	ldw	r3,128(sp)
 4028f98:	a7000015 	stw	fp,0(r20)
 4028f9c:	d9001b15 	stw	r4,108(sp)
 4028fa0:	10c5883a 	add	r2,r2,r3
 4028fa4:	a0c00115 	stw	r3,4(r20)
 4028fa8:	d8801c15 	stw	r2,112(sp)
 4028fac:	00c001c4 	movi	r3,7
 4028fb0:	1901930e 	bge	r3,r4,4029600 <___vfiprintf_internal_r+0xc20>
 4028fb4:	1002431e 	bne	r2,zero,40298c4 <___vfiprintf_internal_r+0xee4>
 4028fb8:	d8001b15 	stw	zero,108(sp)
 4028fbc:	9480010c 	andi	r18,r18,4
 4028fc0:	9002391e 	bne	r18,zero,40298a8 <___vfiprintf_internal_r+0xec8>
 4028fc4:	d8802417 	ldw	r2,144(sp)
 4028fc8:	a880010e 	bge	r21,r2,4028fd0 <___vfiprintf_internal_r+0x5f0>
 4028fcc:	102b883a 	mov	r21,r2
 4028fd0:	d8c02517 	ldw	r3,148(sp)
 4028fd4:	1d47883a 	add	r3,r3,r21
 4028fd8:	d8c02515 	stw	r3,148(sp)
 4028fdc:	0001cd06 	br	4029714 <___vfiprintf_internal_r+0xd34>
 4028fe0:	d9002217 	ldw	r4,136(sp)
 4028fe4:	d9402117 	ldw	r5,132(sp)
 4028fe8:	40235fc0 	call	40235fc <__swsetup_r>
 4028fec:	10000e1e 	bne	r2,zero,4029028 <___vfiprintf_internal_r+0x648>
 4028ff0:	d9402117 	ldw	r5,132(sp)
 4028ff4:	00c00284 	movi	r3,10
 4028ff8:	2880030b 	ldhu	r2,12(r5)
 4028ffc:	1080068c 	andi	r2,r2,26
 4029000:	10fe9c1e 	bne	r2,r3,4028a74 <__flash_rwdata_start+0xffff81b0>
 4029004:	d8c02117 	ldw	r3,132(sp)
 4029008:	1880038f 	ldh	r2,14(r3)
 402900c:	103e9916 	blt	r2,zero,4028a74 <__flash_rwdata_start+0xffff81b0>
 4029010:	d9002217 	ldw	r4,136(sp)
 4029014:	d9c02317 	ldw	r7,140(sp)
 4029018:	180b883a 	mov	r5,r3
 402901c:	980d883a 	mov	r6,r19
 4029020:	4029cf40 	call	4029cf4 <__sbprintf>
 4029024:	00000106 	br	402902c <___vfiprintf_internal_r+0x64c>
 4029028:	00bfffc4 	movi	r2,-1
 402902c:	dfc03517 	ldw	ra,212(sp)
 4029030:	df003417 	ldw	fp,208(sp)
 4029034:	ddc03317 	ldw	r23,204(sp)
 4029038:	dd803217 	ldw	r22,200(sp)
 402903c:	dd403117 	ldw	r21,196(sp)
 4029040:	dd003017 	ldw	r20,192(sp)
 4029044:	dcc02f17 	ldw	r19,188(sp)
 4029048:	dc802e17 	ldw	r18,184(sp)
 402904c:	dc402d17 	ldw	r17,180(sp)
 4029050:	dc002c17 	ldw	r16,176(sp)
 4029054:	dec03604 	addi	sp,sp,216
 4029058:	f800283a 	ret
 402905c:	40256940 	call	4025694 <__sinit>
 4029060:	003e7106 	br	4028a28 <__flash_rwdata_start+0xffff8164>
 4029064:	b005883a 	mov	r2,r22
 4029068:	94800114 	ori	r18,r18,4
 402906c:	b1800007 	ldb	r6,0(r22)
 4029070:	003eb706 	br	4028b50 <__flash_rwdata_start+0xffff828c>
 4029074:	9806d0fa 	srli	r3,r19,3
 4029078:	b808977a 	slli	r4,r23,29
 402907c:	b82ed0fa 	srli	r23,r23,3
 4029080:	9cc001cc 	andi	r19,r19,7
 4029084:	98800c04 	addi	r2,r19,48
 4029088:	e73fffc4 	addi	fp,fp,-1
 402908c:	20e6b03a 	or	r19,r4,r3
 4029090:	e0800005 	stb	r2,0(fp)
 4029094:	9dc6b03a 	or	r3,r19,r23
 4029098:	183ff61e 	bne	r3,zero,4029074 <__flash_rwdata_start+0xffff87b0>
 402909c:	90c0004c 	andi	r3,r18,1
 40290a0:	e009883a 	mov	r4,fp
 40290a4:	183f4426 	beq	r3,zero,4028db8 <__flash_rwdata_start+0xffff84f4>
 40290a8:	10803fcc 	andi	r2,r2,255
 40290ac:	1080201c 	xori	r2,r2,128
 40290b0:	10bfe004 	addi	r2,r2,-128
 40290b4:	00c00c04 	movi	r3,48
 40290b8:	10ff3f26 	beq	r2,r3,4028db8 <__flash_rwdata_start+0xffff84f4>
 40290bc:	20ffffc5 	stb	r3,-1(r4)
 40290c0:	d8c01e17 	ldw	r3,120(sp)
 40290c4:	e73fffc4 	addi	fp,fp,-1
 40290c8:	1f07c83a 	sub	r3,r3,fp
 40290cc:	d8c02015 	stw	r3,128(sp)
 40290d0:	003f3c06 	br	4028dc4 <__flash_rwdata_start+0xffff8500>
 40290d4:	d8c02003 	ldbu	r3,128(sp)
 40290d8:	01000034 	movhi	r4,0
 40290dc:	21001a04 	addi	r4,r4,104
 40290e0:	d8c01d85 	stb	r3,118(sp)
 40290e4:	d9002715 	stw	r4,156(sp)
 40290e8:	9080080c 	andi	r2,r18,32
 40290ec:	1000a926 	beq	r2,zero,4029394 <___vfiprintf_internal_r+0x9b4>
 40290f0:	d9002317 	ldw	r4,140(sp)
 40290f4:	24c00017 	ldw	r19,0(r4)
 40290f8:	25c00117 	ldw	r23,4(r4)
 40290fc:	21000204 	addi	r4,r4,8
 4029100:	d9002315 	stw	r4,140(sp)
 4029104:	9080004c 	andi	r2,r18,1
 4029108:	1001f626 	beq	r2,zero,40298e4 <___vfiprintf_internal_r+0xf04>
 402910c:	9dc6b03a 	or	r3,r19,r23
 4029110:	18023d26 	beq	r3,zero,4029a08 <___vfiprintf_internal_r+0x1028>
 4029114:	00800c04 	movi	r2,48
 4029118:	d8801d05 	stb	r2,116(sp)
 402911c:	d9801d45 	stb	r6,117(sp)
 4029120:	94800094 	ori	r18,r18,2
 4029124:	00800084 	movi	r2,2
 4029128:	003f0906 	br	4028d50 <__flash_rwdata_start+0xffff848c>
 402912c:	d9002317 	ldw	r4,140(sp)
 4029130:	05400044 	movi	r21,1
 4029134:	d8001d85 	stb	zero,118(sp)
 4029138:	20800017 	ldw	r2,0(r4)
 402913c:	21000104 	addi	r4,r4,4
 4029140:	d9002315 	stw	r4,140(sp)
 4029144:	d8801005 	stb	r2,64(sp)
 4029148:	dd402015 	stw	r21,128(sp)
 402914c:	df001004 	addi	fp,sp,64
 4029150:	0021883a 	mov	r16,zero
 4029154:	003f2306 	br	4028de4 <__flash_rwdata_start+0xffff8520>
 4029158:	94802014 	ori	r18,r18,128
 402915c:	b005883a 	mov	r2,r22
 4029160:	b1800007 	ldb	r6,0(r22)
 4029164:	003e7a06 	br	4028b50 <__flash_rwdata_start+0xffff828c>
 4029168:	b039883a 	mov	fp,r22
 402916c:	d8002415 	stw	zero,144(sp)
 4029170:	35fff404 	addi	r23,r6,-48
 4029174:	0009883a 	mov	r4,zero
 4029178:	01400284 	movi	r5,10
 402917c:	402110c0 	call	402110c <__mulsi3>
 4029180:	e1800007 	ldb	r6,0(fp)
 4029184:	15c9883a 	add	r4,r2,r23
 4029188:	b5800044 	addi	r22,r22,1
 402918c:	35fff404 	addi	r23,r6,-48
 4029190:	b039883a 	mov	fp,r22
 4029194:	9dfff82e 	bgeu	r19,r23,4029178 <__flash_rwdata_start+0xffff88b4>
 4029198:	d9002415 	stw	r4,144(sp)
 402919c:	003e6d06 	br	4028b54 <__flash_rwdata_start+0xffff8290>
 40291a0:	d8c02003 	ldbu	r3,128(sp)
 40291a4:	94800414 	ori	r18,r18,16
 40291a8:	9080080c 	andi	r2,r18,32
 40291ac:	d8c01d85 	stb	r3,118(sp)
 40291b0:	d8c02317 	ldw	r3,140(sp)
 40291b4:	10005526 	beq	r2,zero,402930c <___vfiprintf_internal_r+0x92c>
 40291b8:	d9002317 	ldw	r4,140(sp)
 40291bc:	18800117 	ldw	r2,4(r3)
 40291c0:	1cc00017 	ldw	r19,0(r3)
 40291c4:	21000204 	addi	r4,r4,8
 40291c8:	d9002315 	stw	r4,140(sp)
 40291cc:	102f883a 	mov	r23,r2
 40291d0:	1001f716 	blt	r2,zero,40299b0 <___vfiprintf_internal_r+0xfd0>
 40291d4:	da801d83 	ldbu	r10,118(sp)
 40291d8:	dc002015 	stw	r16,128(sp)
 40291dc:	00800044 	movi	r2,1
 40291e0:	9dc6b03a 	or	r3,r19,r23
 40291e4:	003edd06 	br	4028d5c <__flash_rwdata_start+0xffff8498>
 40291e8:	b1800007 	ldb	r6,0(r22)
 40291ec:	01000a84 	movi	r4,42
 40291f0:	b0800044 	addi	r2,r22,1
 40291f4:	3102ae26 	beq	r6,r4,4029cb0 <___vfiprintf_internal_r+0x12d0>
 40291f8:	35fff404 	addi	r23,r6,-48
 40291fc:	102d883a 	mov	r22,r2
 4029200:	0021883a 	mov	r16,zero
 4029204:	9dfe5336 	bltu	r19,r23,4028b54 <__flash_rwdata_start+0xffff8290>
 4029208:	0009883a 	mov	r4,zero
 402920c:	01400284 	movi	r5,10
 4029210:	402110c0 	call	402110c <__mulsi3>
 4029214:	b1800007 	ldb	r6,0(r22)
 4029218:	b889883a 	add	r4,r23,r2
 402921c:	b5800044 	addi	r22,r22,1
 4029220:	35fff404 	addi	r23,r6,-48
 4029224:	9dfff92e 	bgeu	r19,r23,402920c <__flash_rwdata_start+0xffff8948>
 4029228:	2021883a 	mov	r16,r4
 402922c:	203e490e 	bge	r4,zero,4028b54 <__flash_rwdata_start+0xffff8290>
 4029230:	043fffc4 	movi	r16,-1
 4029234:	003e4706 	br	4028b54 <__flash_rwdata_start+0xffff8290>
 4029238:	d8c02003 	ldbu	r3,128(sp)
 402923c:	9080080c 	andi	r2,r18,32
 4029240:	d8c01d85 	stb	r3,118(sp)
 4029244:	10020e26 	beq	r2,zero,4029a80 <___vfiprintf_internal_r+0x10a0>
 4029248:	d9002317 	ldw	r4,140(sp)
 402924c:	d9402517 	ldw	r5,148(sp)
 4029250:	20800017 	ldw	r2,0(r4)
 4029254:	2807d7fa 	srai	r3,r5,31
 4029258:	21000104 	addi	r4,r4,4
 402925c:	d9002315 	stw	r4,140(sp)
 4029260:	11400015 	stw	r5,0(r2)
 4029264:	10c00115 	stw	r3,4(r2)
 4029268:	003e1106 	br	4028ab0 <__flash_rwdata_start+0xffff81ec>
 402926c:	d8802317 	ldw	r2,140(sp)
 4029270:	d8c02317 	ldw	r3,140(sp)
 4029274:	14c00017 	ldw	r19,0(r2)
 4029278:	15c00117 	ldw	r23,4(r2)
 402927c:	18c00204 	addi	r3,r3,8
 4029280:	d8c02315 	stw	r3,140(sp)
 4029284:	0005883a 	mov	r2,zero
 4029288:	9dc6b03a 	or	r3,r19,r23
 402928c:	003eb006 	br	4028d50 <__flash_rwdata_start+0xffff848c>
 4029290:	d8802007 	ldb	r2,128(sp)
 4029294:	1001d91e 	bne	r2,zero,40299fc <___vfiprintf_internal_r+0x101c>
 4029298:	00c00804 	movi	r3,32
 402929c:	d8c02005 	stb	r3,128(sp)
 40292a0:	b005883a 	mov	r2,r22
 40292a4:	b1800007 	ldb	r6,0(r22)
 40292a8:	003e2906 	br	4028b50 <__flash_rwdata_start+0xffff828c>
 40292ac:	94800054 	ori	r18,r18,1
 40292b0:	b005883a 	mov	r2,r22
 40292b4:	b1800007 	ldb	r6,0(r22)
 40292b8:	003e2506 	br	4028b50 <__flash_rwdata_start+0xffff828c>
 40292bc:	d9002317 	ldw	r4,140(sp)
 40292c0:	d9402317 	ldw	r5,140(sp)
 40292c4:	21000017 	ldw	r4,0(r4)
 40292c8:	28c00104 	addi	r3,r5,4
 40292cc:	d9002415 	stw	r4,144(sp)
 40292d0:	20023b16 	blt	r4,zero,4029bc0 <___vfiprintf_internal_r+0x11e0>
 40292d4:	d8c02315 	stw	r3,140(sp)
 40292d8:	b005883a 	mov	r2,r22
 40292dc:	b1800007 	ldb	r6,0(r22)
 40292e0:	003e1b06 	br	4028b50 <__flash_rwdata_start+0xffff828c>
 40292e4:	00c00ac4 	movi	r3,43
 40292e8:	d8c02005 	stb	r3,128(sp)
 40292ec:	b005883a 	mov	r2,r22
 40292f0:	b1800007 	ldb	r6,0(r22)
 40292f4:	003e1606 	br	4028b50 <__flash_rwdata_start+0xffff828c>
 40292f8:	d8c02003 	ldbu	r3,128(sp)
 40292fc:	9080080c 	andi	r2,r18,32
 4029300:	d8c01d85 	stb	r3,118(sp)
 4029304:	d8c02317 	ldw	r3,140(sp)
 4029308:	103fab1e 	bne	r2,zero,40291b8 <__flash_rwdata_start+0xffff88f4>
 402930c:	9080040c 	andi	r2,r18,16
 4029310:	1001e626 	beq	r2,zero,4029aac <___vfiprintf_internal_r+0x10cc>
 4029314:	1cc00017 	ldw	r19,0(r3)
 4029318:	d9402317 	ldw	r5,140(sp)
 402931c:	982fd7fa 	srai	r23,r19,31
 4029320:	29400104 	addi	r5,r5,4
 4029324:	d9402315 	stw	r5,140(sp)
 4029328:	b805883a 	mov	r2,r23
 402932c:	003fa806 	br	40291d0 <__flash_rwdata_start+0xffff890c>
 4029330:	d9402317 	ldw	r5,140(sp)
 4029334:	d8001d85 	stb	zero,118(sp)
 4029338:	2f000017 	ldw	fp,0(r5)
 402933c:	2cc00104 	addi	r19,r5,4
 4029340:	e0023826 	beq	fp,zero,4029c24 <___vfiprintf_internal_r+0x1244>
 4029344:	e009883a 	mov	r4,fp
 4029348:	80022316 	blt	r16,zero,4029bd8 <___vfiprintf_internal_r+0x11f8>
 402934c:	000b883a 	mov	r5,zero
 4029350:	800d883a 	mov	r6,r16
 4029354:	4026b8c0 	call	4026b8c <memchr>
 4029358:	10024e26 	beq	r2,zero,4029c94 <___vfiprintf_internal_r+0x12b4>
 402935c:	1705c83a 	sub	r2,r2,fp
 4029360:	d8802015 	stw	r2,128(sp)
 4029364:	8081e816 	blt	r16,r2,4029b08 <___vfiprintf_internal_r+0x1128>
 4029368:	da801d83 	ldbu	r10,118(sp)
 402936c:	dcc02315 	stw	r19,140(sp)
 4029370:	0021883a 	mov	r16,zero
 4029374:	003e9306 	br	4028dc4 <__flash_rwdata_start+0xffff8500>
 4029378:	00c00034 	movhi	r3,0
 402937c:	18c01f04 	addi	r3,r3,124
 4029380:	d8c02715 	stw	r3,156(sp)
 4029384:	d8c02003 	ldbu	r3,128(sp)
 4029388:	9080080c 	andi	r2,r18,32
 402938c:	d8c01d85 	stb	r3,118(sp)
 4029390:	103f571e 	bne	r2,zero,40290f0 <__flash_rwdata_start+0xffff882c>
 4029394:	9080040c 	andi	r2,r18,16
 4029398:	1001b126 	beq	r2,zero,4029a60 <___vfiprintf_internal_r+0x1080>
 402939c:	d9402317 	ldw	r5,140(sp)
 40293a0:	002f883a 	mov	r23,zero
 40293a4:	2cc00017 	ldw	r19,0(r5)
 40293a8:	29400104 	addi	r5,r5,4
 40293ac:	d9402315 	stw	r5,140(sp)
 40293b0:	003f5406 	br	4029104 <__flash_rwdata_start+0xffff8840>
 40293b4:	94801014 	ori	r18,r18,64
 40293b8:	b005883a 	mov	r2,r22
 40293bc:	b1800007 	ldb	r6,0(r22)
 40293c0:	003de306 	br	4028b50 <__flash_rwdata_start+0xffff828c>
 40293c4:	b1800007 	ldb	r6,0(r22)
 40293c8:	00c01b04 	movi	r3,108
 40293cc:	b005883a 	mov	r2,r22
 40293d0:	30c1f726 	beq	r6,r3,4029bb0 <___vfiprintf_internal_r+0x11d0>
 40293d4:	94800414 	ori	r18,r18,16
 40293d8:	003ddd06 	br	4028b50 <__flash_rwdata_start+0xffff828c>
 40293dc:	d8c02317 	ldw	r3,140(sp)
 40293e0:	00800c04 	movi	r2,48
 40293e4:	01000034 	movhi	r4,0
 40293e8:	1cc00017 	ldw	r19,0(r3)
 40293ec:	d8801d05 	stb	r2,116(sp)
 40293f0:	18c00104 	addi	r3,r3,4
 40293f4:	00801e04 	movi	r2,120
 40293f8:	21001f04 	addi	r4,r4,124
 40293fc:	d8801d45 	stb	r2,117(sp)
 4029400:	d8c02315 	stw	r3,140(sp)
 4029404:	002f883a 	mov	r23,zero
 4029408:	94800094 	ori	r18,r18,2
 402940c:	d9002715 	stw	r4,156(sp)
 4029410:	00800084 	movi	r2,2
 4029414:	9807883a 	mov	r3,r19
 4029418:	003e4d06 	br	4028d50 <__flash_rwdata_start+0xffff848c>
 402941c:	94800814 	ori	r18,r18,32
 4029420:	b005883a 	mov	r2,r22
 4029424:	b1800007 	ldb	r6,0(r22)
 4029428:	003dc906 	br	4028b50 <__flash_rwdata_start+0xffff828c>
 402942c:	d8802317 	ldw	r2,140(sp)
 4029430:	d8c02317 	ldw	r3,140(sp)
 4029434:	14c00017 	ldw	r19,0(r2)
 4029438:	15c00117 	ldw	r23,4(r2)
 402943c:	18c00204 	addi	r3,r3,8
 4029440:	d8c02315 	stw	r3,140(sp)
 4029444:	00800044 	movi	r2,1
 4029448:	9dc6b03a 	or	r3,r19,r23
 402944c:	003e4006 	br	4028d50 <__flash_rwdata_start+0xffff848c>
 4029450:	d8c02003 	ldbu	r3,128(sp)
 4029454:	d8c01d85 	stb	r3,118(sp)
 4029458:	30005526 	beq	r6,zero,40295b0 <___vfiprintf_internal_r+0xbd0>
 402945c:	05400044 	movi	r21,1
 4029460:	d9801005 	stb	r6,64(sp)
 4029464:	d8001d85 	stb	zero,118(sp)
 4029468:	dd402015 	stw	r21,128(sp)
 402946c:	df001004 	addi	fp,sp,64
 4029470:	003f3706 	br	4029150 <__flash_rwdata_start+0xffff888c>
 4029474:	d9002217 	ldw	r4,136(sp)
 4029478:	d9402117 	ldw	r5,132(sp)
 402947c:	d9801a04 	addi	r6,sp,104
 4029480:	d8c02a15 	stw	r3,168(sp)
 4029484:	dac02b15 	stw	r11,172(sp)
 4029488:	40288cc0 	call	40288cc <__sprint_r.part.0>
 402948c:	d8c02a17 	ldw	r3,168(sp)
 4029490:	dac02b17 	ldw	r11,172(sp)
 4029494:	10004c1e 	bne	r2,zero,40295c8 <___vfiprintf_internal_r+0xbe8>
 4029498:	d9801b17 	ldw	r6,108(sp)
 402949c:	d8801c17 	ldw	r2,112(sp)
 40294a0:	d829883a 	mov	r20,sp
 40294a4:	31400044 	addi	r5,r6,1
 40294a8:	003e6506 	br	4028e40 <__flash_rwdata_start+0xffff857c>
 40294ac:	d9401b17 	ldw	r5,108(sp)
 40294b0:	d8801c17 	ldw	r2,112(sp)
 40294b4:	29000044 	addi	r4,r5,1
 40294b8:	d8c01d87 	ldb	r3,118(sp)
 40294bc:	183e8026 	beq	r3,zero,4028ec0 <__flash_rwdata_start+0xffff85fc>
 40294c0:	00c00044 	movi	r3,1
 40294c4:	d9401d84 	addi	r5,sp,118
 40294c8:	10c5883a 	add	r2,r2,r3
 40294cc:	a1400015 	stw	r5,0(r20)
 40294d0:	a0c00115 	stw	r3,4(r20)
 40294d4:	d8801c15 	stw	r2,112(sp)
 40294d8:	d9001b15 	stw	r4,108(sp)
 40294dc:	014001c4 	movi	r5,7
 40294e0:	2900cd16 	blt	r5,r4,4029818 <___vfiprintf_internal_r+0xe38>
 40294e4:	200b883a 	mov	r5,r4
 40294e8:	a5000204 	addi	r20,r20,8
 40294ec:	21000044 	addi	r4,r4,1
 40294f0:	003e7306 	br	4028ec0 <__flash_rwdata_start+0xffff85fc>
 40294f4:	d9002217 	ldw	r4,136(sp)
 40294f8:	d9402117 	ldw	r5,132(sp)
 40294fc:	d9801a04 	addi	r6,sp,104
 4029500:	40288cc0 	call	40288cc <__sprint_r.part.0>
 4029504:	1000301e 	bne	r2,zero,40295c8 <___vfiprintf_internal_r+0xbe8>
 4029508:	d9401b17 	ldw	r5,108(sp)
 402950c:	d8801c17 	ldw	r2,112(sp)
 4029510:	d829883a 	mov	r20,sp
 4029514:	29000044 	addi	r4,r5,1
 4029518:	003e8506 	br	4028f30 <__flash_rwdata_start+0xffff866c>
 402951c:	10803fcc 	andi	r2,r2,255
 4029520:	00c00044 	movi	r3,1
 4029524:	10fe151e 	bne	r2,r3,4028d7c <__flash_rwdata_start+0xffff84b8>
 4029528:	b800021e 	bne	r23,zero,4029534 <___vfiprintf_internal_r+0xb54>
 402952c:	00800244 	movi	r2,9
 4029530:	14c0192e 	bgeu	r2,r19,4029598 <___vfiprintf_internal_r+0xbb8>
 4029534:	dd401a04 	addi	r21,sp,104
 4029538:	5039883a 	mov	fp,r10
 402953c:	9809883a 	mov	r4,r19
 4029540:	b80b883a 	mov	r5,r23
 4029544:	01800284 	movi	r6,10
 4029548:	000f883a 	mov	r7,zero
 402954c:	402ae080 	call	402ae08 <__umoddi3>
 4029550:	10800c04 	addi	r2,r2,48
 4029554:	ad7fffc4 	addi	r21,r21,-1
 4029558:	9809883a 	mov	r4,r19
 402955c:	b80b883a 	mov	r5,r23
 4029560:	01800284 	movi	r6,10
 4029564:	000f883a 	mov	r7,zero
 4029568:	a8800005 	stb	r2,0(r21)
 402956c:	402a7c80 	call	402a7c8 <__udivdi3>
 4029570:	1027883a 	mov	r19,r2
 4029574:	10c4b03a 	or	r2,r2,r3
 4029578:	182f883a 	mov	r23,r3
 402957c:	103fef1e 	bne	r2,zero,402953c <__flash_rwdata_start+0xffff8c78>
 4029580:	d8c01e17 	ldw	r3,120(sp)
 4029584:	e015883a 	mov	r10,fp
 4029588:	a839883a 	mov	fp,r21
 402958c:	1d47c83a 	sub	r3,r3,r21
 4029590:	d8c02015 	stw	r3,128(sp)
 4029594:	003e0b06 	br	4028dc4 <__flash_rwdata_start+0xffff8500>
 4029598:	d9002817 	ldw	r4,160(sp)
 402959c:	9cc00c04 	addi	r19,r19,48
 40295a0:	dcc019c5 	stb	r19,103(sp)
 40295a4:	d9002015 	stw	r4,128(sp)
 40295a8:	df0019c4 	addi	fp,sp,103
 40295ac:	003e0506 	br	4028dc4 <__flash_rwdata_start+0xffff8500>
 40295b0:	d8801c17 	ldw	r2,112(sp)
 40295b4:	10000426 	beq	r2,zero,40295c8 <___vfiprintf_internal_r+0xbe8>
 40295b8:	d9002217 	ldw	r4,136(sp)
 40295bc:	d9402117 	ldw	r5,132(sp)
 40295c0:	d9801a04 	addi	r6,sp,104
 40295c4:	40288cc0 	call	40288cc <__sprint_r.part.0>
 40295c8:	d8c02117 	ldw	r3,132(sp)
 40295cc:	1880030b 	ldhu	r2,12(r3)
 40295d0:	1080100c 	andi	r2,r2,64
 40295d4:	103e941e 	bne	r2,zero,4029028 <__flash_rwdata_start+0xffff8764>
 40295d8:	d8802517 	ldw	r2,148(sp)
 40295dc:	003e9306 	br	402902c <__flash_rwdata_start+0xffff8768>
 40295e0:	1000e91e 	bne	r2,zero,4029988 <___vfiprintf_internal_r+0xfa8>
 40295e4:	d8802017 	ldw	r2,128(sp)
 40295e8:	00c00044 	movi	r3,1
 40295ec:	df000015 	stw	fp,0(sp)
 40295f0:	d8800115 	stw	r2,4(sp)
 40295f4:	d8801c15 	stw	r2,112(sp)
 40295f8:	d8c01b15 	stw	r3,108(sp)
 40295fc:	d829883a 	mov	r20,sp
 4029600:	a2000204 	addi	r8,r20,8
 4029604:	9480010c 	andi	r18,r18,4
 4029608:	90003626 	beq	r18,zero,40296e4 <___vfiprintf_internal_r+0xd04>
 402960c:	d9002417 	ldw	r4,144(sp)
 4029610:	2565c83a 	sub	r18,r4,r21
 4029614:	0480330e 	bge	zero,r18,40296e4 <___vfiprintf_internal_r+0xd04>
 4029618:	04000404 	movi	r16,16
 402961c:	84818b0e 	bge	r16,r18,4029c4c <___vfiprintf_internal_r+0x126c>
 4029620:	00c00034 	movhi	r3,0
 4029624:	18c08404 	addi	r3,r3,528
 4029628:	d9001b17 	ldw	r4,108(sp)
 402962c:	d8c02615 	stw	r3,152(sp)
 4029630:	04c001c4 	movi	r19,7
 4029634:	dd002217 	ldw	r20,136(sp)
 4029638:	ddc02117 	ldw	r23,132(sp)
 402963c:	00000506 	br	4029654 <___vfiprintf_internal_r+0xc74>
 4029640:	21400084 	addi	r5,r4,2
 4029644:	42000204 	addi	r8,r8,8
 4029648:	1809883a 	mov	r4,r3
 402964c:	94bffc04 	addi	r18,r18,-16
 4029650:	84800f0e 	bge	r16,r18,4029690 <___vfiprintf_internal_r+0xcb0>
 4029654:	01400034 	movhi	r5,0
 4029658:	10800404 	addi	r2,r2,16
 402965c:	20c00044 	addi	r3,r4,1
 4029660:	29408404 	addi	r5,r5,528
 4029664:	41400015 	stw	r5,0(r8)
 4029668:	44000115 	stw	r16,4(r8)
 402966c:	d8801c15 	stw	r2,112(sp)
 4029670:	d8c01b15 	stw	r3,108(sp)
 4029674:	98fff20e 	bge	r19,r3,4029640 <__flash_rwdata_start+0xffff8d7c>
 4029678:	1000291e 	bne	r2,zero,4029720 <___vfiprintf_internal_r+0xd40>
 402967c:	94bffc04 	addi	r18,r18,-16
 4029680:	01400044 	movi	r5,1
 4029684:	0009883a 	mov	r4,zero
 4029688:	d811883a 	mov	r8,sp
 402968c:	84bff116 	blt	r16,r18,4029654 <__flash_rwdata_start+0xffff8d90>
 4029690:	d8c02617 	ldw	r3,152(sp)
 4029694:	1485883a 	add	r2,r2,r18
 4029698:	44800115 	stw	r18,4(r8)
 402969c:	40c00015 	stw	r3,0(r8)
 40296a0:	d8801c15 	stw	r2,112(sp)
 40296a4:	d9401b15 	stw	r5,108(sp)
 40296a8:	00c001c4 	movi	r3,7
 40296ac:	19400d0e 	bge	r3,r5,40296e4 <___vfiprintf_internal_r+0xd04>
 40296b0:	1000061e 	bne	r2,zero,40296cc <___vfiprintf_internal_r+0xcec>
 40296b4:	d9002417 	ldw	r4,144(sp)
 40296b8:	a9011116 	blt	r21,r4,4029b00 <___vfiprintf_internal_r+0x1120>
 40296bc:	d9402517 	ldw	r5,148(sp)
 40296c0:	2d4b883a 	add	r5,r5,r21
 40296c4:	d9402515 	stw	r5,148(sp)
 40296c8:	00001206 	br	4029714 <___vfiprintf_internal_r+0xd34>
 40296cc:	d9002217 	ldw	r4,136(sp)
 40296d0:	d9402117 	ldw	r5,132(sp)
 40296d4:	d9801a04 	addi	r6,sp,104
 40296d8:	40288cc0 	call	40288cc <__sprint_r.part.0>
 40296dc:	103fba1e 	bne	r2,zero,40295c8 <__flash_rwdata_start+0xffff8d04>
 40296e0:	d8801c17 	ldw	r2,112(sp)
 40296e4:	d9002417 	ldw	r4,144(sp)
 40296e8:	a900010e 	bge	r21,r4,40296f0 <___vfiprintf_internal_r+0xd10>
 40296ec:	202b883a 	mov	r21,r4
 40296f0:	d9402517 	ldw	r5,148(sp)
 40296f4:	2d4b883a 	add	r5,r5,r21
 40296f8:	d9402515 	stw	r5,148(sp)
 40296fc:	10000526 	beq	r2,zero,4029714 <___vfiprintf_internal_r+0xd34>
 4029700:	d9002217 	ldw	r4,136(sp)
 4029704:	d9402117 	ldw	r5,132(sp)
 4029708:	d9801a04 	addi	r6,sp,104
 402970c:	40288cc0 	call	40288cc <__sprint_r.part.0>
 4029710:	103fad1e 	bne	r2,zero,40295c8 <__flash_rwdata_start+0xffff8d04>
 4029714:	d8001b15 	stw	zero,108(sp)
 4029718:	d829883a 	mov	r20,sp
 402971c:	003ce406 	br	4028ab0 <__flash_rwdata_start+0xffff81ec>
 4029720:	a009883a 	mov	r4,r20
 4029724:	b80b883a 	mov	r5,r23
 4029728:	d9801a04 	addi	r6,sp,104
 402972c:	40288cc0 	call	40288cc <__sprint_r.part.0>
 4029730:	103fa51e 	bne	r2,zero,40295c8 <__flash_rwdata_start+0xffff8d04>
 4029734:	d9001b17 	ldw	r4,108(sp)
 4029738:	d8801c17 	ldw	r2,112(sp)
 402973c:	d811883a 	mov	r8,sp
 4029740:	21400044 	addi	r5,r4,1
 4029744:	003fc106 	br	402964c <__flash_rwdata_start+0xffff8d88>
 4029748:	d8c02417 	ldw	r3,144(sp)
 402974c:	1d6fc83a 	sub	r23,r3,r21
 4029750:	05fdea0e 	bge	zero,r23,4028efc <__flash_rwdata_start+0xffff8638>
 4029754:	04c00404 	movi	r19,16
 4029758:	9dc1490e 	bge	r19,r23,4029c80 <___vfiprintf_internal_r+0x12a0>
 402975c:	01000034 	movhi	r4,0
 4029760:	21008004 	addi	r4,r4,512
 4029764:	d9002615 	stw	r4,152(sp)
 4029768:	028001c4 	movi	r10,7
 402976c:	00000506 	br	4029784 <___vfiprintf_internal_r+0xda4>
 4029770:	29800084 	addi	r6,r5,2
 4029774:	a5000204 	addi	r20,r20,8
 4029778:	180b883a 	mov	r5,r3
 402977c:	bdfffc04 	addi	r23,r23,-16
 4029780:	9dc00d0e 	bge	r19,r23,40297b8 <___vfiprintf_internal_r+0xdd8>
 4029784:	10800404 	addi	r2,r2,16
 4029788:	28c00044 	addi	r3,r5,1
 402978c:	a4400015 	stw	r17,0(r20)
 4029790:	a4c00115 	stw	r19,4(r20)
 4029794:	d8801c15 	stw	r2,112(sp)
 4029798:	d8c01b15 	stw	r3,108(sp)
 402979c:	50fff40e 	bge	r10,r3,4029770 <__flash_rwdata_start+0xffff8eac>
 40297a0:	1000111e 	bne	r2,zero,40297e8 <___vfiprintf_internal_r+0xe08>
 40297a4:	bdfffc04 	addi	r23,r23,-16
 40297a8:	01800044 	movi	r6,1
 40297ac:	000b883a 	mov	r5,zero
 40297b0:	d829883a 	mov	r20,sp
 40297b4:	9dfff316 	blt	r19,r23,4029784 <__flash_rwdata_start+0xffff8ec0>
 40297b8:	d8c02617 	ldw	r3,152(sp)
 40297bc:	15c5883a 	add	r2,r2,r23
 40297c0:	a5c00115 	stw	r23,4(r20)
 40297c4:	a0c00015 	stw	r3,0(r20)
 40297c8:	d8801c15 	stw	r2,112(sp)
 40297cc:	d9801b15 	stw	r6,108(sp)
 40297d0:	00c001c4 	movi	r3,7
 40297d4:	19806716 	blt	r3,r6,4029974 <___vfiprintf_internal_r+0xf94>
 40297d8:	a5000204 	addi	r20,r20,8
 40297dc:	31000044 	addi	r4,r6,1
 40297e0:	300b883a 	mov	r5,r6
 40297e4:	003dc506 	br	4028efc <__flash_rwdata_start+0xffff8638>
 40297e8:	d9002217 	ldw	r4,136(sp)
 40297ec:	d9402117 	ldw	r5,132(sp)
 40297f0:	d9801a04 	addi	r6,sp,104
 40297f4:	da802a15 	stw	r10,168(sp)
 40297f8:	40288cc0 	call	40288cc <__sprint_r.part.0>
 40297fc:	da802a17 	ldw	r10,168(sp)
 4029800:	103f711e 	bne	r2,zero,40295c8 <__flash_rwdata_start+0xffff8d04>
 4029804:	d9401b17 	ldw	r5,108(sp)
 4029808:	d8801c17 	ldw	r2,112(sp)
 402980c:	d829883a 	mov	r20,sp
 4029810:	29800044 	addi	r6,r5,1
 4029814:	003fd906 	br	402977c <__flash_rwdata_start+0xffff8eb8>
 4029818:	1000401e 	bne	r2,zero,402991c <___vfiprintf_internal_r+0xf3c>
 402981c:	38003b26 	beq	r7,zero,402990c <___vfiprintf_internal_r+0xf2c>
 4029820:	d9001d04 	addi	r4,sp,116
 4029824:	00800084 	movi	r2,2
 4029828:	d9000015 	stw	r4,0(sp)
 402982c:	d8800115 	stw	r2,4(sp)
 4029830:	1809883a 	mov	r4,r3
 4029834:	d829883a 	mov	r20,sp
 4029838:	003dab06 	br	4028ee8 <__flash_rwdata_start+0xffff8624>
 402983c:	1000431e 	bne	r2,zero,402994c <___vfiprintf_internal_r+0xf6c>
 4029840:	01000044 	movi	r4,1
 4029844:	000b883a 	mov	r5,zero
 4029848:	d829883a 	mov	r20,sp
 402984c:	003da906 	br	4028ef4 <__flash_rwdata_start+0xffff8630>
 4029850:	10803fcc 	andi	r2,r2,255
 4029854:	1000081e 	bne	r2,zero,4029878 <___vfiprintf_internal_r+0xe98>
 4029858:	9080004c 	andi	r2,r18,1
 402985c:	10000626 	beq	r2,zero,4029878 <___vfiprintf_internal_r+0xe98>
 4029860:	d9002817 	ldw	r4,160(sp)
 4029864:	00800c04 	movi	r2,48
 4029868:	d88019c5 	stb	r2,103(sp)
 402986c:	d9002015 	stw	r4,128(sp)
 4029870:	df0019c4 	addi	fp,sp,103
 4029874:	003d5306 	br	4028dc4 <__flash_rwdata_start+0xffff8500>
 4029878:	df001a04 	addi	fp,sp,104
 402987c:	003d5106 	br	4028dc4 <__flash_rwdata_start+0xffff8500>
 4029880:	1000931e 	bne	r2,zero,4029ad0 <___vfiprintf_internal_r+0x10f0>
 4029884:	d8c01d87 	ldb	r3,118(sp)
 4029888:	18005326 	beq	r3,zero,40299d8 <___vfiprintf_internal_r+0xff8>
 402988c:	00800044 	movi	r2,1
 4029890:	d8c01d84 	addi	r3,sp,118
 4029894:	1009883a 	mov	r4,r2
 4029898:	d8c00015 	stw	r3,0(sp)
 402989c:	d8800115 	stw	r2,4(sp)
 40298a0:	d829883a 	mov	r20,sp
 40298a4:	003f0f06 	br	40294e4 <__flash_rwdata_start+0xffff8c20>
 40298a8:	d8c02417 	ldw	r3,144(sp)
 40298ac:	d811883a 	mov	r8,sp
 40298b0:	1d65c83a 	sub	r18,r3,r21
 40298b4:	04bf5816 	blt	zero,r18,4029618 <__flash_rwdata_start+0xffff8d54>
 40298b8:	003f7e06 	br	40296b4 <__flash_rwdata_start+0xffff8df0>
 40298bc:	b02b883a 	mov	r21,r22
 40298c0:	003c9806 	br	4028b24 <__flash_rwdata_start+0xffff8260>
 40298c4:	d9002217 	ldw	r4,136(sp)
 40298c8:	d9402117 	ldw	r5,132(sp)
 40298cc:	d9801a04 	addi	r6,sp,104
 40298d0:	40288cc0 	call	40288cc <__sprint_r.part.0>
 40298d4:	103f3c1e 	bne	r2,zero,40295c8 <__flash_rwdata_start+0xffff8d04>
 40298d8:	d8801c17 	ldw	r2,112(sp)
 40298dc:	d811883a 	mov	r8,sp
 40298e0:	003f4806 	br	4029604 <__flash_rwdata_start+0xffff8d40>
 40298e4:	00800084 	movi	r2,2
 40298e8:	9dc6b03a 	or	r3,r19,r23
 40298ec:	003d1806 	br	4028d50 <__flash_rwdata_start+0xffff848c>
 40298f0:	d9002217 	ldw	r4,136(sp)
 40298f4:	d9402117 	ldw	r5,132(sp)
 40298f8:	d9801a04 	addi	r6,sp,104
 40298fc:	40288cc0 	call	40288cc <__sprint_r.part.0>
 4029900:	103f311e 	bne	r2,zero,40295c8 <__flash_rwdata_start+0xffff8d04>
 4029904:	d829883a 	mov	r20,sp
 4029908:	003cf406 	br	4028cdc <__flash_rwdata_start+0xffff8418>
 402990c:	000b883a 	mov	r5,zero
 4029910:	1809883a 	mov	r4,r3
 4029914:	d829883a 	mov	r20,sp
 4029918:	003d7606 	br	4028ef4 <__flash_rwdata_start+0xffff8630>
 402991c:	d9002217 	ldw	r4,136(sp)
 4029920:	d9402117 	ldw	r5,132(sp)
 4029924:	d9801a04 	addi	r6,sp,104
 4029928:	d9c02a15 	stw	r7,168(sp)
 402992c:	40288cc0 	call	40288cc <__sprint_r.part.0>
 4029930:	d9c02a17 	ldw	r7,168(sp)
 4029934:	103f241e 	bne	r2,zero,40295c8 <__flash_rwdata_start+0xffff8d04>
 4029938:	d9401b17 	ldw	r5,108(sp)
 402993c:	d8801c17 	ldw	r2,112(sp)
 4029940:	d829883a 	mov	r20,sp
 4029944:	29000044 	addi	r4,r5,1
 4029948:	003d5d06 	br	4028ec0 <__flash_rwdata_start+0xffff85fc>
 402994c:	d9002217 	ldw	r4,136(sp)
 4029950:	d9402117 	ldw	r5,132(sp)
 4029954:	d9801a04 	addi	r6,sp,104
 4029958:	40288cc0 	call	40288cc <__sprint_r.part.0>
 402995c:	103f1a1e 	bne	r2,zero,40295c8 <__flash_rwdata_start+0xffff8d04>
 4029960:	d9401b17 	ldw	r5,108(sp)
 4029964:	d8801c17 	ldw	r2,112(sp)
 4029968:	d829883a 	mov	r20,sp
 402996c:	29000044 	addi	r4,r5,1
 4029970:	003d6006 	br	4028ef4 <__flash_rwdata_start+0xffff8630>
 4029974:	10009b1e 	bne	r2,zero,4029be4 <___vfiprintf_internal_r+0x1204>
 4029978:	01000044 	movi	r4,1
 402997c:	000b883a 	mov	r5,zero
 4029980:	d829883a 	mov	r20,sp
 4029984:	003d5d06 	br	4028efc <__flash_rwdata_start+0xffff8638>
 4029988:	d9002217 	ldw	r4,136(sp)
 402998c:	d9402117 	ldw	r5,132(sp)
 4029990:	d9801a04 	addi	r6,sp,104
 4029994:	40288cc0 	call	40288cc <__sprint_r.part.0>
 4029998:	103f0b1e 	bne	r2,zero,40295c8 <__flash_rwdata_start+0xffff8d04>
 402999c:	d9001b17 	ldw	r4,108(sp)
 40299a0:	d8801c17 	ldw	r2,112(sp)
 40299a4:	d829883a 	mov	r20,sp
 40299a8:	21000044 	addi	r4,r4,1
 40299ac:	003d7906 	br	4028f94 <__flash_rwdata_start+0xffff86d0>
 40299b0:	04e7c83a 	sub	r19,zero,r19
 40299b4:	9804c03a 	cmpne	r2,r19,zero
 40299b8:	05efc83a 	sub	r23,zero,r23
 40299bc:	b8afc83a 	sub	r23,r23,r2
 40299c0:	02800b44 	movi	r10,45
 40299c4:	da801d85 	stb	r10,118(sp)
 40299c8:	dc002015 	stw	r16,128(sp)
 40299cc:	00800044 	movi	r2,1
 40299d0:	9dc6b03a 	or	r3,r19,r23
 40299d4:	003ce106 	br	4028d5c <__flash_rwdata_start+0xffff8498>
 40299d8:	000b883a 	mov	r5,zero
 40299dc:	01000044 	movi	r4,1
 40299e0:	d829883a 	mov	r20,sp
 40299e4:	383d4326 	beq	r7,zero,4028ef4 <__flash_rwdata_start+0xffff8630>
 40299e8:	00800084 	movi	r2,2
 40299ec:	d8c01d04 	addi	r3,sp,116
 40299f0:	d8c00015 	stw	r3,0(sp)
 40299f4:	d8800115 	stw	r2,4(sp)
 40299f8:	003d3b06 	br	4028ee8 <__flash_rwdata_start+0xffff8624>
 40299fc:	b1800007 	ldb	r6,0(r22)
 4029a00:	b005883a 	mov	r2,r22
 4029a04:	003c5206 	br	4028b50 <__flash_rwdata_start+0xffff828c>
 4029a08:	00800084 	movi	r2,2
 4029a0c:	003cd006 	br	4028d50 <__flash_rwdata_start+0xffff848c>
 4029a10:	9080100c 	andi	r2,r18,64
 4029a14:	10003e26 	beq	r2,zero,4029b10 <___vfiprintf_internal_r+0x1130>
 4029a18:	d9402317 	ldw	r5,140(sp)
 4029a1c:	002f883a 	mov	r23,zero
 4029a20:	0005883a 	mov	r2,zero
 4029a24:	2cc0000b 	ldhu	r19,0(r5)
 4029a28:	29400104 	addi	r5,r5,4
 4029a2c:	d9402315 	stw	r5,140(sp)
 4029a30:	9807883a 	mov	r3,r19
 4029a34:	003cc606 	br	4028d50 <__flash_rwdata_start+0xffff848c>
 4029a38:	9080100c 	andi	r2,r18,64
 4029a3c:	10004226 	beq	r2,zero,4029b48 <___vfiprintf_internal_r+0x1168>
 4029a40:	d9402317 	ldw	r5,140(sp)
 4029a44:	002f883a 	mov	r23,zero
 4029a48:	00800044 	movi	r2,1
 4029a4c:	2cc0000b 	ldhu	r19,0(r5)
 4029a50:	29400104 	addi	r5,r5,4
 4029a54:	d9402315 	stw	r5,140(sp)
 4029a58:	9807883a 	mov	r3,r19
 4029a5c:	003cbc06 	br	4028d50 <__flash_rwdata_start+0xffff848c>
 4029a60:	9080100c 	andi	r2,r18,64
 4029a64:	10003226 	beq	r2,zero,4029b30 <___vfiprintf_internal_r+0x1150>
 4029a68:	d8802317 	ldw	r2,140(sp)
 4029a6c:	002f883a 	mov	r23,zero
 4029a70:	14c0000b 	ldhu	r19,0(r2)
 4029a74:	10800104 	addi	r2,r2,4
 4029a78:	d8802315 	stw	r2,140(sp)
 4029a7c:	003da106 	br	4029104 <__flash_rwdata_start+0xffff8840>
 4029a80:	9080040c 	andi	r2,r18,16
 4029a84:	10003f1e 	bne	r2,zero,4029b84 <___vfiprintf_internal_r+0x11a4>
 4029a88:	9480100c 	andi	r18,r18,64
 4029a8c:	90007526 	beq	r18,zero,4029c64 <___vfiprintf_internal_r+0x1284>
 4029a90:	d9402317 	ldw	r5,140(sp)
 4029a94:	d8c02517 	ldw	r3,148(sp)
 4029a98:	28800017 	ldw	r2,0(r5)
 4029a9c:	29400104 	addi	r5,r5,4
 4029aa0:	d9402315 	stw	r5,140(sp)
 4029aa4:	10c0000d 	sth	r3,0(r2)
 4029aa8:	003c0106 	br	4028ab0 <__flash_rwdata_start+0xffff81ec>
 4029aac:	9080100c 	andi	r2,r18,64
 4029ab0:	10002d26 	beq	r2,zero,4029b68 <___vfiprintf_internal_r+0x1188>
 4029ab4:	1cc0000f 	ldh	r19,0(r3)
 4029ab8:	d8802317 	ldw	r2,140(sp)
 4029abc:	982fd7fa 	srai	r23,r19,31
 4029ac0:	10800104 	addi	r2,r2,4
 4029ac4:	d8802315 	stw	r2,140(sp)
 4029ac8:	b805883a 	mov	r2,r23
 4029acc:	003dc006 	br	40291d0 <__flash_rwdata_start+0xffff890c>
 4029ad0:	d9002217 	ldw	r4,136(sp)
 4029ad4:	d9402117 	ldw	r5,132(sp)
 4029ad8:	d9801a04 	addi	r6,sp,104
 4029adc:	d9c02a15 	stw	r7,168(sp)
 4029ae0:	40288cc0 	call	40288cc <__sprint_r.part.0>
 4029ae4:	d9c02a17 	ldw	r7,168(sp)
 4029ae8:	103eb71e 	bne	r2,zero,40295c8 <__flash_rwdata_start+0xffff8d04>
 4029aec:	d9401b17 	ldw	r5,108(sp)
 4029af0:	d8801c17 	ldw	r2,112(sp)
 4029af4:	d829883a 	mov	r20,sp
 4029af8:	29000044 	addi	r4,r5,1
 4029afc:	003e6e06 	br	40294b8 <__flash_rwdata_start+0xffff8bf4>
 4029b00:	202b883a 	mov	r21,r4
 4029b04:	003eed06 	br	40296bc <__flash_rwdata_start+0xffff8df8>
 4029b08:	dc002015 	stw	r16,128(sp)
 4029b0c:	003e1606 	br	4029368 <__flash_rwdata_start+0xffff8aa4>
 4029b10:	d8802317 	ldw	r2,140(sp)
 4029b14:	002f883a 	mov	r23,zero
 4029b18:	14c00017 	ldw	r19,0(r2)
 4029b1c:	10800104 	addi	r2,r2,4
 4029b20:	d8802315 	stw	r2,140(sp)
 4029b24:	9807883a 	mov	r3,r19
 4029b28:	0005883a 	mov	r2,zero
 4029b2c:	003c8806 	br	4028d50 <__flash_rwdata_start+0xffff848c>
 4029b30:	d8c02317 	ldw	r3,140(sp)
 4029b34:	002f883a 	mov	r23,zero
 4029b38:	1cc00017 	ldw	r19,0(r3)
 4029b3c:	18c00104 	addi	r3,r3,4
 4029b40:	d8c02315 	stw	r3,140(sp)
 4029b44:	003d6f06 	br	4029104 <__flash_rwdata_start+0xffff8840>
 4029b48:	d8802317 	ldw	r2,140(sp)
 4029b4c:	002f883a 	mov	r23,zero
 4029b50:	14c00017 	ldw	r19,0(r2)
 4029b54:	10800104 	addi	r2,r2,4
 4029b58:	d8802315 	stw	r2,140(sp)
 4029b5c:	9807883a 	mov	r3,r19
 4029b60:	00800044 	movi	r2,1
 4029b64:	003c7a06 	br	4028d50 <__flash_rwdata_start+0xffff848c>
 4029b68:	1cc00017 	ldw	r19,0(r3)
 4029b6c:	d8c02317 	ldw	r3,140(sp)
 4029b70:	982fd7fa 	srai	r23,r19,31
 4029b74:	18c00104 	addi	r3,r3,4
 4029b78:	d8c02315 	stw	r3,140(sp)
 4029b7c:	b805883a 	mov	r2,r23
 4029b80:	003d9306 	br	40291d0 <__flash_rwdata_start+0xffff890c>
 4029b84:	d8c02317 	ldw	r3,140(sp)
 4029b88:	d9002517 	ldw	r4,148(sp)
 4029b8c:	18800017 	ldw	r2,0(r3)
 4029b90:	18c00104 	addi	r3,r3,4
 4029b94:	d8c02315 	stw	r3,140(sp)
 4029b98:	11000015 	stw	r4,0(r2)
 4029b9c:	003bc406 	br	4028ab0 <__flash_rwdata_start+0xffff81ec>
 4029ba0:	01400034 	movhi	r5,0
 4029ba4:	29408004 	addi	r5,r5,512
 4029ba8:	d9402615 	stw	r5,152(sp)
 4029bac:	003cef06 	br	4028f6c <__flash_rwdata_start+0xffff86a8>
 4029bb0:	b0800044 	addi	r2,r22,1
 4029bb4:	94800814 	ori	r18,r18,32
 4029bb8:	b1800047 	ldb	r6,1(r22)
 4029bbc:	003be406 	br	4028b50 <__flash_rwdata_start+0xffff828c>
 4029bc0:	d8802417 	ldw	r2,144(sp)
 4029bc4:	d8c02315 	stw	r3,140(sp)
 4029bc8:	0085c83a 	sub	r2,zero,r2
 4029bcc:	d8802415 	stw	r2,144(sp)
 4029bd0:	b005883a 	mov	r2,r22
 4029bd4:	003d2406 	br	4029068 <__flash_rwdata_start+0xffff87a4>
 4029bd8:	402142c0 	call	402142c <strlen>
 4029bdc:	d8802015 	stw	r2,128(sp)
 4029be0:	003de106 	br	4029368 <__flash_rwdata_start+0xffff8aa4>
 4029be4:	d9002217 	ldw	r4,136(sp)
 4029be8:	d9402117 	ldw	r5,132(sp)
 4029bec:	d9801a04 	addi	r6,sp,104
 4029bf0:	40288cc0 	call	40288cc <__sprint_r.part.0>
 4029bf4:	103e741e 	bne	r2,zero,40295c8 <__flash_rwdata_start+0xffff8d04>
 4029bf8:	d9401b17 	ldw	r5,108(sp)
 4029bfc:	d8801c17 	ldw	r2,112(sp)
 4029c00:	d829883a 	mov	r20,sp
 4029c04:	29000044 	addi	r4,r5,1
 4029c08:	003cbc06 	br	4028efc <__flash_rwdata_start+0xffff8638>
 4029c0c:	01400034 	movhi	r5,0
 4029c10:	29408404 	addi	r5,r5,528
 4029c14:	d9402615 	stw	r5,152(sp)
 4029c18:	d9401b17 	ldw	r5,108(sp)
 4029c1c:	29400044 	addi	r5,r5,1
 4029c20:	003c9b06 	br	4028e90 <__flash_rwdata_start+0xffff85cc>
 4029c24:	00800184 	movi	r2,6
 4029c28:	1400012e 	bgeu	r2,r16,4029c30 <___vfiprintf_internal_r+0x1250>
 4029c2c:	1021883a 	mov	r16,r2
 4029c30:	dc002015 	stw	r16,128(sp)
 4029c34:	802b883a 	mov	r21,r16
 4029c38:	80001b16 	blt	r16,zero,4029ca8 <___vfiprintf_internal_r+0x12c8>
 4029c3c:	07000034 	movhi	fp,0
 4029c40:	dcc02315 	stw	r19,140(sp)
 4029c44:	e7002404 	addi	fp,fp,144
 4029c48:	003d4106 	br	4029150 <__flash_rwdata_start+0xffff888c>
 4029c4c:	01400034 	movhi	r5,0
 4029c50:	29408404 	addi	r5,r5,528
 4029c54:	d9402615 	stw	r5,152(sp)
 4029c58:	d9401b17 	ldw	r5,108(sp)
 4029c5c:	29400044 	addi	r5,r5,1
 4029c60:	003e8b06 	br	4029690 <__flash_rwdata_start+0xffff8dcc>
 4029c64:	d9002317 	ldw	r4,140(sp)
 4029c68:	d9402517 	ldw	r5,148(sp)
 4029c6c:	20800017 	ldw	r2,0(r4)
 4029c70:	21000104 	addi	r4,r4,4
 4029c74:	d9002315 	stw	r4,140(sp)
 4029c78:	11400015 	stw	r5,0(r2)
 4029c7c:	003b8c06 	br	4028ab0 <__flash_rwdata_start+0xffff81ec>
 4029c80:	01400034 	movhi	r5,0
 4029c84:	29408004 	addi	r5,r5,512
 4029c88:	d9402615 	stw	r5,152(sp)
 4029c8c:	200d883a 	mov	r6,r4
 4029c90:	003ec906 	br	40297b8 <__flash_rwdata_start+0xffff8ef4>
 4029c94:	dc002015 	stw	r16,128(sp)
 4029c98:	da801d83 	ldbu	r10,118(sp)
 4029c9c:	dcc02315 	stw	r19,140(sp)
 4029ca0:	0021883a 	mov	r16,zero
 4029ca4:	003c4706 	br	4028dc4 <__flash_rwdata_start+0xffff8500>
 4029ca8:	002b883a 	mov	r21,zero
 4029cac:	003fe306 	br	4029c3c <__flash_rwdata_start+0xffff9378>
 4029cb0:	d9402317 	ldw	r5,140(sp)
 4029cb4:	2c000017 	ldw	r16,0(r5)
 4029cb8:	28c00104 	addi	r3,r5,4
 4029cbc:	d8c02315 	stw	r3,140(sp)
 4029cc0:	803fbd0e 	bge	r16,zero,4029bb8 <__flash_rwdata_start+0xffff92f4>
 4029cc4:	043fffc4 	movi	r16,-1
 4029cc8:	b1800047 	ldb	r6,1(r22)
 4029ccc:	003ba006 	br	4028b50 <__flash_rwdata_start+0xffff828c>

04029cd0 <__vfiprintf_internal>:
 4029cd0:	2007883a 	mov	r3,r4
 4029cd4:	01000034 	movhi	r4,0
 4029cd8:	21078604 	addi	r4,r4,7704
 4029cdc:	21000017 	ldw	r4,0(r4)
 4029ce0:	2805883a 	mov	r2,r5
 4029ce4:	300f883a 	mov	r7,r6
 4029ce8:	180b883a 	mov	r5,r3
 4029cec:	100d883a 	mov	r6,r2
 4029cf0:	40289e01 	jmpi	40289e0 <___vfiprintf_internal_r>

04029cf4 <__sbprintf>:
 4029cf4:	2880030b 	ldhu	r2,12(r5)
 4029cf8:	2ac01917 	ldw	r11,100(r5)
 4029cfc:	2a80038b 	ldhu	r10,14(r5)
 4029d00:	2a400717 	ldw	r9,28(r5)
 4029d04:	2a000917 	ldw	r8,36(r5)
 4029d08:	defee204 	addi	sp,sp,-1144
 4029d0c:	00c10004 	movi	r3,1024
 4029d10:	dc011a15 	stw	r16,1128(sp)
 4029d14:	10bfff4c 	andi	r2,r2,65533
 4029d18:	2821883a 	mov	r16,r5
 4029d1c:	d8cb883a 	add	r5,sp,r3
 4029d20:	dc811c15 	stw	r18,1136(sp)
 4029d24:	dc411b15 	stw	r17,1132(sp)
 4029d28:	dfc11d15 	stw	ra,1140(sp)
 4029d2c:	2025883a 	mov	r18,r4
 4029d30:	d881030d 	sth	r2,1036(sp)
 4029d34:	dac11915 	stw	r11,1124(sp)
 4029d38:	da81038d 	sth	r10,1038(sp)
 4029d3c:	da410715 	stw	r9,1052(sp)
 4029d40:	da010915 	stw	r8,1060(sp)
 4029d44:	dec10015 	stw	sp,1024(sp)
 4029d48:	dec10415 	stw	sp,1040(sp)
 4029d4c:	d8c10215 	stw	r3,1032(sp)
 4029d50:	d8c10515 	stw	r3,1044(sp)
 4029d54:	d8010615 	stw	zero,1048(sp)
 4029d58:	40289e00 	call	40289e0 <___vfiprintf_internal_r>
 4029d5c:	1023883a 	mov	r17,r2
 4029d60:	10000416 	blt	r2,zero,4029d74 <__sbprintf+0x80>
 4029d64:	9009883a 	mov	r4,r18
 4029d68:	d9410004 	addi	r5,sp,1024
 4029d6c:	40252a80 	call	40252a8 <_fflush_r>
 4029d70:	10000d1e 	bne	r2,zero,4029da8 <__sbprintf+0xb4>
 4029d74:	d8c1030b 	ldhu	r3,1036(sp)
 4029d78:	18c0100c 	andi	r3,r3,64
 4029d7c:	18000326 	beq	r3,zero,4029d8c <__sbprintf+0x98>
 4029d80:	8080030b 	ldhu	r2,12(r16)
 4029d84:	10801014 	ori	r2,r2,64
 4029d88:	8080030d 	sth	r2,12(r16)
 4029d8c:	8805883a 	mov	r2,r17
 4029d90:	dfc11d17 	ldw	ra,1140(sp)
 4029d94:	dc811c17 	ldw	r18,1136(sp)
 4029d98:	dc411b17 	ldw	r17,1132(sp)
 4029d9c:	dc011a17 	ldw	r16,1128(sp)
 4029da0:	dec11e04 	addi	sp,sp,1144
 4029da4:	f800283a 	ret
 4029da8:	047fffc4 	movi	r17,-1
 4029dac:	003ff106 	br	4029d74 <__flash_rwdata_start+0xffff94b0>

04029db0 <__swbuf_r>:
 4029db0:	defffc04 	addi	sp,sp,-16
 4029db4:	dc800215 	stw	r18,8(sp)
 4029db8:	dc400115 	stw	r17,4(sp)
 4029dbc:	dc000015 	stw	r16,0(sp)
 4029dc0:	dfc00315 	stw	ra,12(sp)
 4029dc4:	2025883a 	mov	r18,r4
 4029dc8:	2823883a 	mov	r17,r5
 4029dcc:	3021883a 	mov	r16,r6
 4029dd0:	20000226 	beq	r4,zero,4029ddc <__swbuf_r+0x2c>
 4029dd4:	20800e17 	ldw	r2,56(r4)
 4029dd8:	10004126 	beq	r2,zero,4029ee0 <__swbuf_r+0x130>
 4029ddc:	80c00617 	ldw	r3,24(r16)
 4029de0:	8180030b 	ldhu	r6,12(r16)
 4029de4:	80c00215 	stw	r3,8(r16)
 4029de8:	30c0020c 	andi	r3,r6,8
 4029dec:	18003526 	beq	r3,zero,4029ec4 <__swbuf_r+0x114>
 4029df0:	80c00417 	ldw	r3,16(r16)
 4029df4:	18003326 	beq	r3,zero,4029ec4 <__swbuf_r+0x114>
 4029df8:	3088000c 	andi	r2,r6,8192
 4029dfc:	8c403fcc 	andi	r17,r17,255
 4029e00:	10001726 	beq	r2,zero,4029e60 <__swbuf_r+0xb0>
 4029e04:	80800017 	ldw	r2,0(r16)
 4029e08:	81000517 	ldw	r4,20(r16)
 4029e0c:	10c7c83a 	sub	r3,r2,r3
 4029e10:	19001d0e 	bge	r3,r4,4029e88 <__swbuf_r+0xd8>
 4029e14:	18c00044 	addi	r3,r3,1
 4029e18:	81400217 	ldw	r5,8(r16)
 4029e1c:	11000044 	addi	r4,r2,1
 4029e20:	81000015 	stw	r4,0(r16)
 4029e24:	297fffc4 	addi	r5,r5,-1
 4029e28:	81400215 	stw	r5,8(r16)
 4029e2c:	14400005 	stb	r17,0(r2)
 4029e30:	80800517 	ldw	r2,20(r16)
 4029e34:	10c01d26 	beq	r2,r3,4029eac <__swbuf_r+0xfc>
 4029e38:	8080030b 	ldhu	r2,12(r16)
 4029e3c:	1080004c 	andi	r2,r2,1
 4029e40:	1000181e 	bne	r2,zero,4029ea4 <__swbuf_r+0xf4>
 4029e44:	8805883a 	mov	r2,r17
 4029e48:	dfc00317 	ldw	ra,12(sp)
 4029e4c:	dc800217 	ldw	r18,8(sp)
 4029e50:	dc400117 	ldw	r17,4(sp)
 4029e54:	dc000017 	ldw	r16,0(sp)
 4029e58:	dec00404 	addi	sp,sp,16
 4029e5c:	f800283a 	ret
 4029e60:	81001917 	ldw	r4,100(r16)
 4029e64:	00b7ffc4 	movi	r2,-8193
 4029e68:	31880014 	ori	r6,r6,8192
 4029e6c:	2084703a 	and	r2,r4,r2
 4029e70:	80801915 	stw	r2,100(r16)
 4029e74:	80800017 	ldw	r2,0(r16)
 4029e78:	81000517 	ldw	r4,20(r16)
 4029e7c:	8180030d 	sth	r6,12(r16)
 4029e80:	10c7c83a 	sub	r3,r2,r3
 4029e84:	193fe316 	blt	r3,r4,4029e14 <__flash_rwdata_start+0xffff9550>
 4029e88:	9009883a 	mov	r4,r18
 4029e8c:	800b883a 	mov	r5,r16
 4029e90:	40252a80 	call	40252a8 <_fflush_r>
 4029e94:	1000091e 	bne	r2,zero,4029ebc <__swbuf_r+0x10c>
 4029e98:	80800017 	ldw	r2,0(r16)
 4029e9c:	00c00044 	movi	r3,1
 4029ea0:	003fdd06 	br	4029e18 <__flash_rwdata_start+0xffff9554>
 4029ea4:	00800284 	movi	r2,10
 4029ea8:	88bfe61e 	bne	r17,r2,4029e44 <__flash_rwdata_start+0xffff9580>
 4029eac:	9009883a 	mov	r4,r18
 4029eb0:	800b883a 	mov	r5,r16
 4029eb4:	40252a80 	call	40252a8 <_fflush_r>
 4029eb8:	103fe226 	beq	r2,zero,4029e44 <__flash_rwdata_start+0xffff9580>
 4029ebc:	00bfffc4 	movi	r2,-1
 4029ec0:	003fe106 	br	4029e48 <__flash_rwdata_start+0xffff9584>
 4029ec4:	9009883a 	mov	r4,r18
 4029ec8:	800b883a 	mov	r5,r16
 4029ecc:	40235fc0 	call	40235fc <__swsetup_r>
 4029ed0:	103ffa1e 	bne	r2,zero,4029ebc <__flash_rwdata_start+0xffff95f8>
 4029ed4:	8180030b 	ldhu	r6,12(r16)
 4029ed8:	80c00417 	ldw	r3,16(r16)
 4029edc:	003fc606 	br	4029df8 <__flash_rwdata_start+0xffff9534>
 4029ee0:	40256940 	call	4025694 <__sinit>
 4029ee4:	003fbd06 	br	4029ddc <__flash_rwdata_start+0xffff9518>

04029ee8 <__swbuf>:
 4029ee8:	00c00034 	movhi	r3,0
 4029eec:	18c78604 	addi	r3,r3,7704
 4029ef0:	2005883a 	mov	r2,r4
 4029ef4:	19000017 	ldw	r4,0(r3)
 4029ef8:	280d883a 	mov	r6,r5
 4029efc:	100b883a 	mov	r5,r2
 4029f00:	4029db01 	jmpi	4029db0 <__swbuf_r>

04029f04 <_write_r>:
 4029f04:	defffd04 	addi	sp,sp,-12
 4029f08:	dc000015 	stw	r16,0(sp)
 4029f0c:	04000034 	movhi	r16,0
 4029f10:	dc400115 	stw	r17,4(sp)
 4029f14:	84079e04 	addi	r16,r16,7800
 4029f18:	2023883a 	mov	r17,r4
 4029f1c:	2809883a 	mov	r4,r5
 4029f20:	300b883a 	mov	r5,r6
 4029f24:	380d883a 	mov	r6,r7
 4029f28:	dfc00215 	stw	ra,8(sp)
 4029f2c:	80000015 	stw	zero,0(r16)
 4029f30:	402e9cc0 	call	402e9cc <write>
 4029f34:	00ffffc4 	movi	r3,-1
 4029f38:	10c00526 	beq	r2,r3,4029f50 <_write_r+0x4c>
 4029f3c:	dfc00217 	ldw	ra,8(sp)
 4029f40:	dc400117 	ldw	r17,4(sp)
 4029f44:	dc000017 	ldw	r16,0(sp)
 4029f48:	dec00304 	addi	sp,sp,12
 4029f4c:	f800283a 	ret
 4029f50:	80c00017 	ldw	r3,0(r16)
 4029f54:	183ff926 	beq	r3,zero,4029f3c <__flash_rwdata_start+0xffff9678>
 4029f58:	88c00015 	stw	r3,0(r17)
 4029f5c:	003ff706 	br	4029f3c <__flash_rwdata_start+0xffff9678>

04029f60 <_close_r>:
 4029f60:	defffd04 	addi	sp,sp,-12
 4029f64:	dc000015 	stw	r16,0(sp)
 4029f68:	04000034 	movhi	r16,0
 4029f6c:	dc400115 	stw	r17,4(sp)
 4029f70:	84079e04 	addi	r16,r16,7800
 4029f74:	2023883a 	mov	r17,r4
 4029f78:	2809883a 	mov	r4,r5
 4029f7c:	dfc00215 	stw	ra,8(sp)
 4029f80:	80000015 	stw	zero,0(r16)
 4029f84:	402dc700 	call	402dc70 <close>
 4029f88:	00ffffc4 	movi	r3,-1
 4029f8c:	10c00526 	beq	r2,r3,4029fa4 <_close_r+0x44>
 4029f90:	dfc00217 	ldw	ra,8(sp)
 4029f94:	dc400117 	ldw	r17,4(sp)
 4029f98:	dc000017 	ldw	r16,0(sp)
 4029f9c:	dec00304 	addi	sp,sp,12
 4029fa0:	f800283a 	ret
 4029fa4:	80c00017 	ldw	r3,0(r16)
 4029fa8:	183ff926 	beq	r3,zero,4029f90 <__flash_rwdata_start+0xffff96cc>
 4029fac:	88c00015 	stw	r3,0(r17)
 4029fb0:	003ff706 	br	4029f90 <__flash_rwdata_start+0xffff96cc>

04029fb4 <_calloc_r>:
 4029fb4:	defffe04 	addi	sp,sp,-8
 4029fb8:	dc000015 	stw	r16,0(sp)
 4029fbc:	2021883a 	mov	r16,r4
 4029fc0:	2809883a 	mov	r4,r5
 4029fc4:	300b883a 	mov	r5,r6
 4029fc8:	dfc00115 	stw	ra,4(sp)
 4029fcc:	402110c0 	call	402110c <__mulsi3>
 4029fd0:	8009883a 	mov	r4,r16
 4029fd4:	100b883a 	mov	r5,r2
 4029fd8:	40263e40 	call	40263e4 <_malloc_r>
 4029fdc:	1021883a 	mov	r16,r2
 4029fe0:	10002826 	beq	r2,zero,402a084 <_calloc_r+0xd0>
 4029fe4:	11bfff17 	ldw	r6,-4(r2)
 4029fe8:	00bfff04 	movi	r2,-4
 4029fec:	00c00904 	movi	r3,36
 4029ff0:	308c703a 	and	r6,r6,r2
 4029ff4:	308d883a 	add	r6,r6,r2
 4029ff8:	19801436 	bltu	r3,r6,402a04c <_calloc_r+0x98>
 4029ffc:	008004c4 	movi	r2,19
 402a000:	11800936 	bltu	r2,r6,402a028 <_calloc_r+0x74>
 402a004:	8005883a 	mov	r2,r16
 402a008:	10000015 	stw	zero,0(r2)
 402a00c:	10000115 	stw	zero,4(r2)
 402a010:	10000215 	stw	zero,8(r2)
 402a014:	8005883a 	mov	r2,r16
 402a018:	dfc00117 	ldw	ra,4(sp)
 402a01c:	dc000017 	ldw	r16,0(sp)
 402a020:	dec00204 	addi	sp,sp,8
 402a024:	f800283a 	ret
 402a028:	80000015 	stw	zero,0(r16)
 402a02c:	80000115 	stw	zero,4(r16)
 402a030:	008006c4 	movi	r2,27
 402a034:	11800d2e 	bgeu	r2,r6,402a06c <_calloc_r+0xb8>
 402a038:	80000215 	stw	zero,8(r16)
 402a03c:	80000315 	stw	zero,12(r16)
 402a040:	30c00c26 	beq	r6,r3,402a074 <_calloc_r+0xc0>
 402a044:	80800404 	addi	r2,r16,16
 402a048:	003fef06 	br	402a008 <__flash_rwdata_start+0xffff9744>
 402a04c:	8009883a 	mov	r4,r16
 402a050:	000b883a 	mov	r5,zero
 402a054:	4026dd00 	call	4026dd0 <memset>
 402a058:	8005883a 	mov	r2,r16
 402a05c:	dfc00117 	ldw	ra,4(sp)
 402a060:	dc000017 	ldw	r16,0(sp)
 402a064:	dec00204 	addi	sp,sp,8
 402a068:	f800283a 	ret
 402a06c:	80800204 	addi	r2,r16,8
 402a070:	003fe506 	br	402a008 <__flash_rwdata_start+0xffff9744>
 402a074:	80000415 	stw	zero,16(r16)
 402a078:	80800604 	addi	r2,r16,24
 402a07c:	80000515 	stw	zero,20(r16)
 402a080:	003fe106 	br	402a008 <__flash_rwdata_start+0xffff9744>
 402a084:	0005883a 	mov	r2,zero
 402a088:	003fe306 	br	402a018 <__flash_rwdata_start+0xffff9754>

0402a08c <_fclose_r>:
 402a08c:	28003926 	beq	r5,zero,402a174 <_fclose_r+0xe8>
 402a090:	defffc04 	addi	sp,sp,-16
 402a094:	dc400115 	stw	r17,4(sp)
 402a098:	dc000015 	stw	r16,0(sp)
 402a09c:	dfc00315 	stw	ra,12(sp)
 402a0a0:	dc800215 	stw	r18,8(sp)
 402a0a4:	2023883a 	mov	r17,r4
 402a0a8:	2821883a 	mov	r16,r5
 402a0ac:	20000226 	beq	r4,zero,402a0b8 <_fclose_r+0x2c>
 402a0b0:	20800e17 	ldw	r2,56(r4)
 402a0b4:	10002726 	beq	r2,zero,402a154 <_fclose_r+0xc8>
 402a0b8:	8080030f 	ldh	r2,12(r16)
 402a0bc:	1000071e 	bne	r2,zero,402a0dc <_fclose_r+0x50>
 402a0c0:	0005883a 	mov	r2,zero
 402a0c4:	dfc00317 	ldw	ra,12(sp)
 402a0c8:	dc800217 	ldw	r18,8(sp)
 402a0cc:	dc400117 	ldw	r17,4(sp)
 402a0d0:	dc000017 	ldw	r16,0(sp)
 402a0d4:	dec00404 	addi	sp,sp,16
 402a0d8:	f800283a 	ret
 402a0dc:	8809883a 	mov	r4,r17
 402a0e0:	800b883a 	mov	r5,r16
 402a0e4:	40250a00 	call	40250a0 <__sflush_r>
 402a0e8:	1025883a 	mov	r18,r2
 402a0ec:	80800b17 	ldw	r2,44(r16)
 402a0f0:	10000426 	beq	r2,zero,402a104 <_fclose_r+0x78>
 402a0f4:	81400717 	ldw	r5,28(r16)
 402a0f8:	8809883a 	mov	r4,r17
 402a0fc:	103ee83a 	callr	r2
 402a100:	10001616 	blt	r2,zero,402a15c <_fclose_r+0xd0>
 402a104:	8080030b 	ldhu	r2,12(r16)
 402a108:	1080200c 	andi	r2,r2,128
 402a10c:	1000151e 	bne	r2,zero,402a164 <_fclose_r+0xd8>
 402a110:	81400c17 	ldw	r5,48(r16)
 402a114:	28000526 	beq	r5,zero,402a12c <_fclose_r+0xa0>
 402a118:	80801004 	addi	r2,r16,64
 402a11c:	28800226 	beq	r5,r2,402a128 <_fclose_r+0x9c>
 402a120:	8809883a 	mov	r4,r17
 402a124:	40258080 	call	4025808 <_free_r>
 402a128:	80000c15 	stw	zero,48(r16)
 402a12c:	81401117 	ldw	r5,68(r16)
 402a130:	28000326 	beq	r5,zero,402a140 <_fclose_r+0xb4>
 402a134:	8809883a 	mov	r4,r17
 402a138:	40258080 	call	4025808 <_free_r>
 402a13c:	80001115 	stw	zero,68(r16)
 402a140:	40256a40 	call	40256a4 <__sfp_lock_acquire>
 402a144:	8000030d 	sth	zero,12(r16)
 402a148:	40256a80 	call	40256a8 <__sfp_lock_release>
 402a14c:	9005883a 	mov	r2,r18
 402a150:	003fdc06 	br	402a0c4 <__flash_rwdata_start+0xffff9800>
 402a154:	40256940 	call	4025694 <__sinit>
 402a158:	003fd706 	br	402a0b8 <__flash_rwdata_start+0xffff97f4>
 402a15c:	04bfffc4 	movi	r18,-1
 402a160:	003fe806 	br	402a104 <__flash_rwdata_start+0xffff9840>
 402a164:	81400417 	ldw	r5,16(r16)
 402a168:	8809883a 	mov	r4,r17
 402a16c:	40258080 	call	4025808 <_free_r>
 402a170:	003fe706 	br	402a110 <__flash_rwdata_start+0xffff984c>
 402a174:	0005883a 	mov	r2,zero
 402a178:	f800283a 	ret

0402a17c <fclose>:
 402a17c:	00800034 	movhi	r2,0
 402a180:	10878604 	addi	r2,r2,7704
 402a184:	200b883a 	mov	r5,r4
 402a188:	11000017 	ldw	r4,0(r2)
 402a18c:	402a08c1 	jmpi	402a08c <_fclose_r>

0402a190 <_fputwc_r>:
 402a190:	3080030b 	ldhu	r2,12(r6)
 402a194:	defff804 	addi	sp,sp,-32
 402a198:	dcc00415 	stw	r19,16(sp)
 402a19c:	dc800315 	stw	r18,12(sp)
 402a1a0:	dc000115 	stw	r16,4(sp)
 402a1a4:	dfc00715 	stw	ra,28(sp)
 402a1a8:	dd400615 	stw	r21,24(sp)
 402a1ac:	dd000515 	stw	r20,20(sp)
 402a1b0:	dc400215 	stw	r17,8(sp)
 402a1b4:	10c8000c 	andi	r3,r2,8192
 402a1b8:	3021883a 	mov	r16,r6
 402a1bc:	2027883a 	mov	r19,r4
 402a1c0:	2825883a 	mov	r18,r5
 402a1c4:	1800051e 	bne	r3,zero,402a1dc <_fputwc_r+0x4c>
 402a1c8:	30c01917 	ldw	r3,100(r6)
 402a1cc:	10880014 	ori	r2,r2,8192
 402a1d0:	3080030d 	sth	r2,12(r6)
 402a1d4:	18880014 	ori	r2,r3,8192
 402a1d8:	30801915 	stw	r2,100(r6)
 402a1dc:	40261d40 	call	40261d4 <__locale_mb_cur_max>
 402a1e0:	00c00044 	movi	r3,1
 402a1e4:	10c03e26 	beq	r2,r3,402a2e0 <_fputwc_r+0x150>
 402a1e8:	9809883a 	mov	r4,r19
 402a1ec:	d80b883a 	mov	r5,sp
 402a1f0:	900d883a 	mov	r6,r18
 402a1f4:	81c01704 	addi	r7,r16,92
 402a1f8:	402a4d40 	call	402a4d4 <_wcrtomb_r>
 402a1fc:	1029883a 	mov	r20,r2
 402a200:	00bfffc4 	movi	r2,-1
 402a204:	a0802026 	beq	r20,r2,402a288 <_fputwc_r+0xf8>
 402a208:	d9400003 	ldbu	r5,0(sp)
 402a20c:	a0001c26 	beq	r20,zero,402a280 <_fputwc_r+0xf0>
 402a210:	0023883a 	mov	r17,zero
 402a214:	05400284 	movi	r21,10
 402a218:	00000906 	br	402a240 <_fputwc_r+0xb0>
 402a21c:	80800017 	ldw	r2,0(r16)
 402a220:	11400005 	stb	r5,0(r2)
 402a224:	80c00017 	ldw	r3,0(r16)
 402a228:	18c00044 	addi	r3,r3,1
 402a22c:	80c00015 	stw	r3,0(r16)
 402a230:	8c400044 	addi	r17,r17,1
 402a234:	dc45883a 	add	r2,sp,r17
 402a238:	8d00112e 	bgeu	r17,r20,402a280 <_fputwc_r+0xf0>
 402a23c:	11400003 	ldbu	r5,0(r2)
 402a240:	80c00217 	ldw	r3,8(r16)
 402a244:	18ffffc4 	addi	r3,r3,-1
 402a248:	80c00215 	stw	r3,8(r16)
 402a24c:	183ff30e 	bge	r3,zero,402a21c <__flash_rwdata_start+0xffff9958>
 402a250:	80800617 	ldw	r2,24(r16)
 402a254:	18801916 	blt	r3,r2,402a2bc <_fputwc_r+0x12c>
 402a258:	80800017 	ldw	r2,0(r16)
 402a25c:	11400005 	stb	r5,0(r2)
 402a260:	80800017 	ldw	r2,0(r16)
 402a264:	10c00003 	ldbu	r3,0(r2)
 402a268:	10800044 	addi	r2,r2,1
 402a26c:	1d402326 	beq	r3,r21,402a2fc <_fputwc_r+0x16c>
 402a270:	80800015 	stw	r2,0(r16)
 402a274:	8c400044 	addi	r17,r17,1
 402a278:	dc45883a 	add	r2,sp,r17
 402a27c:	8d3fef36 	bltu	r17,r20,402a23c <__flash_rwdata_start+0xffff9978>
 402a280:	9005883a 	mov	r2,r18
 402a284:	00000406 	br	402a298 <_fputwc_r+0x108>
 402a288:	80c0030b 	ldhu	r3,12(r16)
 402a28c:	a005883a 	mov	r2,r20
 402a290:	18c01014 	ori	r3,r3,64
 402a294:	80c0030d 	sth	r3,12(r16)
 402a298:	dfc00717 	ldw	ra,28(sp)
 402a29c:	dd400617 	ldw	r21,24(sp)
 402a2a0:	dd000517 	ldw	r20,20(sp)
 402a2a4:	dcc00417 	ldw	r19,16(sp)
 402a2a8:	dc800317 	ldw	r18,12(sp)
 402a2ac:	dc400217 	ldw	r17,8(sp)
 402a2b0:	dc000117 	ldw	r16,4(sp)
 402a2b4:	dec00804 	addi	sp,sp,32
 402a2b8:	f800283a 	ret
 402a2bc:	9809883a 	mov	r4,r19
 402a2c0:	29403fcc 	andi	r5,r5,255
 402a2c4:	800d883a 	mov	r6,r16
 402a2c8:	4029db00 	call	4029db0 <__swbuf_r>
 402a2cc:	10bfffe0 	cmpeqi	r2,r2,-1
 402a2d0:	10803fcc 	andi	r2,r2,255
 402a2d4:	103fd626 	beq	r2,zero,402a230 <__flash_rwdata_start+0xffff996c>
 402a2d8:	00bfffc4 	movi	r2,-1
 402a2dc:	003fee06 	br	402a298 <__flash_rwdata_start+0xffff99d4>
 402a2e0:	90ffffc4 	addi	r3,r18,-1
 402a2e4:	01003f84 	movi	r4,254
 402a2e8:	20ffbf36 	bltu	r4,r3,402a1e8 <__flash_rwdata_start+0xffff9924>
 402a2ec:	900b883a 	mov	r5,r18
 402a2f0:	dc800005 	stb	r18,0(sp)
 402a2f4:	1029883a 	mov	r20,r2
 402a2f8:	003fc506 	br	402a210 <__flash_rwdata_start+0xffff994c>
 402a2fc:	9809883a 	mov	r4,r19
 402a300:	a80b883a 	mov	r5,r21
 402a304:	800d883a 	mov	r6,r16
 402a308:	4029db00 	call	4029db0 <__swbuf_r>
 402a30c:	10bfffe0 	cmpeqi	r2,r2,-1
 402a310:	003fef06 	br	402a2d0 <__flash_rwdata_start+0xffff9a0c>

0402a314 <fputwc>:
 402a314:	00800034 	movhi	r2,0
 402a318:	defffc04 	addi	sp,sp,-16
 402a31c:	10878604 	addi	r2,r2,7704
 402a320:	dc000115 	stw	r16,4(sp)
 402a324:	14000017 	ldw	r16,0(r2)
 402a328:	dc400215 	stw	r17,8(sp)
 402a32c:	dfc00315 	stw	ra,12(sp)
 402a330:	2023883a 	mov	r17,r4
 402a334:	280d883a 	mov	r6,r5
 402a338:	80000626 	beq	r16,zero,402a354 <fputwc+0x40>
 402a33c:	80800e17 	ldw	r2,56(r16)
 402a340:	1000041e 	bne	r2,zero,402a354 <fputwc+0x40>
 402a344:	8009883a 	mov	r4,r16
 402a348:	d9400015 	stw	r5,0(sp)
 402a34c:	40256940 	call	4025694 <__sinit>
 402a350:	d9800017 	ldw	r6,0(sp)
 402a354:	8009883a 	mov	r4,r16
 402a358:	880b883a 	mov	r5,r17
 402a35c:	dfc00317 	ldw	ra,12(sp)
 402a360:	dc400217 	ldw	r17,8(sp)
 402a364:	dc000117 	ldw	r16,4(sp)
 402a368:	dec00404 	addi	sp,sp,16
 402a36c:	402a1901 	jmpi	402a190 <_fputwc_r>

0402a370 <_fstat_r>:
 402a370:	defffd04 	addi	sp,sp,-12
 402a374:	dc000015 	stw	r16,0(sp)
 402a378:	04000034 	movhi	r16,0
 402a37c:	dc400115 	stw	r17,4(sp)
 402a380:	84079e04 	addi	r16,r16,7800
 402a384:	2023883a 	mov	r17,r4
 402a388:	2809883a 	mov	r4,r5
 402a38c:	300b883a 	mov	r5,r6
 402a390:	dfc00215 	stw	ra,8(sp)
 402a394:	80000015 	stw	zero,0(r16)
 402a398:	402dde00 	call	402dde0 <fstat>
 402a39c:	00ffffc4 	movi	r3,-1
 402a3a0:	10c00526 	beq	r2,r3,402a3b8 <_fstat_r+0x48>
 402a3a4:	dfc00217 	ldw	ra,8(sp)
 402a3a8:	dc400117 	ldw	r17,4(sp)
 402a3ac:	dc000017 	ldw	r16,0(sp)
 402a3b0:	dec00304 	addi	sp,sp,12
 402a3b4:	f800283a 	ret
 402a3b8:	80c00017 	ldw	r3,0(r16)
 402a3bc:	183ff926 	beq	r3,zero,402a3a4 <__flash_rwdata_start+0xffff9ae0>
 402a3c0:	88c00015 	stw	r3,0(r17)
 402a3c4:	003ff706 	br	402a3a4 <__flash_rwdata_start+0xffff9ae0>

0402a3c8 <_isatty_r>:
 402a3c8:	defffd04 	addi	sp,sp,-12
 402a3cc:	dc000015 	stw	r16,0(sp)
 402a3d0:	04000034 	movhi	r16,0
 402a3d4:	dc400115 	stw	r17,4(sp)
 402a3d8:	84079e04 	addi	r16,r16,7800
 402a3dc:	2023883a 	mov	r17,r4
 402a3e0:	2809883a 	mov	r4,r5
 402a3e4:	dfc00215 	stw	ra,8(sp)
 402a3e8:	80000015 	stw	zero,0(r16)
 402a3ec:	402e1b80 	call	402e1b8 <isatty>
 402a3f0:	00ffffc4 	movi	r3,-1
 402a3f4:	10c00526 	beq	r2,r3,402a40c <_isatty_r+0x44>
 402a3f8:	dfc00217 	ldw	ra,8(sp)
 402a3fc:	dc400117 	ldw	r17,4(sp)
 402a400:	dc000017 	ldw	r16,0(sp)
 402a404:	dec00304 	addi	sp,sp,12
 402a408:	f800283a 	ret
 402a40c:	80c00017 	ldw	r3,0(r16)
 402a410:	183ff926 	beq	r3,zero,402a3f8 <__flash_rwdata_start+0xffff9b34>
 402a414:	88c00015 	stw	r3,0(r17)
 402a418:	003ff706 	br	402a3f8 <__flash_rwdata_start+0xffff9b34>

0402a41c <_lseek_r>:
 402a41c:	defffd04 	addi	sp,sp,-12
 402a420:	dc000015 	stw	r16,0(sp)
 402a424:	04000034 	movhi	r16,0
 402a428:	dc400115 	stw	r17,4(sp)
 402a42c:	84079e04 	addi	r16,r16,7800
 402a430:	2023883a 	mov	r17,r4
 402a434:	2809883a 	mov	r4,r5
 402a438:	300b883a 	mov	r5,r6
 402a43c:	380d883a 	mov	r6,r7
 402a440:	dfc00215 	stw	ra,8(sp)
 402a444:	80000015 	stw	zero,0(r16)
 402a448:	402e3980 	call	402e398 <lseek>
 402a44c:	00ffffc4 	movi	r3,-1
 402a450:	10c00526 	beq	r2,r3,402a468 <_lseek_r+0x4c>
 402a454:	dfc00217 	ldw	ra,8(sp)
 402a458:	dc400117 	ldw	r17,4(sp)
 402a45c:	dc000017 	ldw	r16,0(sp)
 402a460:	dec00304 	addi	sp,sp,12
 402a464:	f800283a 	ret
 402a468:	80c00017 	ldw	r3,0(r16)
 402a46c:	183ff926 	beq	r3,zero,402a454 <__flash_rwdata_start+0xffff9b90>
 402a470:	88c00015 	stw	r3,0(r17)
 402a474:	003ff706 	br	402a454 <__flash_rwdata_start+0xffff9b90>

0402a478 <_read_r>:
 402a478:	defffd04 	addi	sp,sp,-12
 402a47c:	dc000015 	stw	r16,0(sp)
 402a480:	04000034 	movhi	r16,0
 402a484:	dc400115 	stw	r17,4(sp)
 402a488:	84079e04 	addi	r16,r16,7800
 402a48c:	2023883a 	mov	r17,r4
 402a490:	2809883a 	mov	r4,r5
 402a494:	300b883a 	mov	r5,r6
 402a498:	380d883a 	mov	r6,r7
 402a49c:	dfc00215 	stw	ra,8(sp)
 402a4a0:	80000015 	stw	zero,0(r16)
 402a4a4:	402e57c0 	call	402e57c <read>
 402a4a8:	00ffffc4 	movi	r3,-1
 402a4ac:	10c00526 	beq	r2,r3,402a4c4 <_read_r+0x4c>
 402a4b0:	dfc00217 	ldw	ra,8(sp)
 402a4b4:	dc400117 	ldw	r17,4(sp)
 402a4b8:	dc000017 	ldw	r16,0(sp)
 402a4bc:	dec00304 	addi	sp,sp,12
 402a4c0:	f800283a 	ret
 402a4c4:	80c00017 	ldw	r3,0(r16)
 402a4c8:	183ff926 	beq	r3,zero,402a4b0 <__flash_rwdata_start+0xffff9bec>
 402a4cc:	88c00015 	stw	r3,0(r17)
 402a4d0:	003ff706 	br	402a4b0 <__flash_rwdata_start+0xffff9bec>

0402a4d4 <_wcrtomb_r>:
 402a4d4:	defff604 	addi	sp,sp,-40
 402a4d8:	00800034 	movhi	r2,0
 402a4dc:	dc800815 	stw	r18,32(sp)
 402a4e0:	dc400715 	stw	r17,28(sp)
 402a4e4:	dc000615 	stw	r16,24(sp)
 402a4e8:	10878a04 	addi	r2,r2,7720
 402a4ec:	dfc00915 	stw	ra,36(sp)
 402a4f0:	2021883a 	mov	r16,r4
 402a4f4:	3823883a 	mov	r17,r7
 402a4f8:	14800017 	ldw	r18,0(r2)
 402a4fc:	28001426 	beq	r5,zero,402a550 <_wcrtomb_r+0x7c>
 402a500:	d9400415 	stw	r5,16(sp)
 402a504:	d9800515 	stw	r6,20(sp)
 402a508:	40261c80 	call	40261c8 <__locale_charset>
 402a50c:	d9400417 	ldw	r5,16(sp)
 402a510:	d9800517 	ldw	r6,20(sp)
 402a514:	8009883a 	mov	r4,r16
 402a518:	dc400015 	stw	r17,0(sp)
 402a51c:	100f883a 	mov	r7,r2
 402a520:	903ee83a 	callr	r18
 402a524:	00ffffc4 	movi	r3,-1
 402a528:	10c0031e 	bne	r2,r3,402a538 <_wcrtomb_r+0x64>
 402a52c:	88000015 	stw	zero,0(r17)
 402a530:	00c02284 	movi	r3,138
 402a534:	80c00015 	stw	r3,0(r16)
 402a538:	dfc00917 	ldw	ra,36(sp)
 402a53c:	dc800817 	ldw	r18,32(sp)
 402a540:	dc400717 	ldw	r17,28(sp)
 402a544:	dc000617 	ldw	r16,24(sp)
 402a548:	dec00a04 	addi	sp,sp,40
 402a54c:	f800283a 	ret
 402a550:	40261c80 	call	40261c8 <__locale_charset>
 402a554:	8009883a 	mov	r4,r16
 402a558:	dc400015 	stw	r17,0(sp)
 402a55c:	d9400104 	addi	r5,sp,4
 402a560:	000d883a 	mov	r6,zero
 402a564:	100f883a 	mov	r7,r2
 402a568:	903ee83a 	callr	r18
 402a56c:	003fed06 	br	402a524 <__flash_rwdata_start+0xffff9c60>

0402a570 <wcrtomb>:
 402a570:	defff604 	addi	sp,sp,-40
 402a574:	00800034 	movhi	r2,0
 402a578:	dc800615 	stw	r18,24(sp)
 402a57c:	dc400515 	stw	r17,20(sp)
 402a580:	dc000415 	stw	r16,16(sp)
 402a584:	10878604 	addi	r2,r2,7704
 402a588:	dfc00915 	stw	ra,36(sp)
 402a58c:	dd000815 	stw	r20,32(sp)
 402a590:	dcc00715 	stw	r19,28(sp)
 402a594:	2021883a 	mov	r16,r4
 402a598:	3025883a 	mov	r18,r6
 402a59c:	14400017 	ldw	r17,0(r2)
 402a5a0:	20001826 	beq	r4,zero,402a604 <wcrtomb+0x94>
 402a5a4:	00800034 	movhi	r2,0
 402a5a8:	10878a04 	addi	r2,r2,7720
 402a5ac:	15000017 	ldw	r20,0(r2)
 402a5b0:	2827883a 	mov	r19,r5
 402a5b4:	40261c80 	call	40261c8 <__locale_charset>
 402a5b8:	8809883a 	mov	r4,r17
 402a5bc:	dc800015 	stw	r18,0(sp)
 402a5c0:	800b883a 	mov	r5,r16
 402a5c4:	980d883a 	mov	r6,r19
 402a5c8:	100f883a 	mov	r7,r2
 402a5cc:	a03ee83a 	callr	r20
 402a5d0:	00ffffc4 	movi	r3,-1
 402a5d4:	10c0031e 	bne	r2,r3,402a5e4 <wcrtomb+0x74>
 402a5d8:	90000015 	stw	zero,0(r18)
 402a5dc:	00c02284 	movi	r3,138
 402a5e0:	88c00015 	stw	r3,0(r17)
 402a5e4:	dfc00917 	ldw	ra,36(sp)
 402a5e8:	dd000817 	ldw	r20,32(sp)
 402a5ec:	dcc00717 	ldw	r19,28(sp)
 402a5f0:	dc800617 	ldw	r18,24(sp)
 402a5f4:	dc400517 	ldw	r17,20(sp)
 402a5f8:	dc000417 	ldw	r16,16(sp)
 402a5fc:	dec00a04 	addi	sp,sp,40
 402a600:	f800283a 	ret
 402a604:	00800034 	movhi	r2,0
 402a608:	10878a04 	addi	r2,r2,7720
 402a60c:	14000017 	ldw	r16,0(r2)
 402a610:	40261c80 	call	40261c8 <__locale_charset>
 402a614:	8809883a 	mov	r4,r17
 402a618:	dc800015 	stw	r18,0(sp)
 402a61c:	d9400104 	addi	r5,sp,4
 402a620:	000d883a 	mov	r6,zero
 402a624:	100f883a 	mov	r7,r2
 402a628:	803ee83a 	callr	r16
 402a62c:	003fe806 	br	402a5d0 <__flash_rwdata_start+0xffff9d0c>

0402a630 <__ascii_wctomb>:
 402a630:	28000526 	beq	r5,zero,402a648 <__ascii_wctomb+0x18>
 402a634:	00803fc4 	movi	r2,255
 402a638:	11800536 	bltu	r2,r6,402a650 <__ascii_wctomb+0x20>
 402a63c:	29800005 	stb	r6,0(r5)
 402a640:	00800044 	movi	r2,1
 402a644:	f800283a 	ret
 402a648:	0005883a 	mov	r2,zero
 402a64c:	f800283a 	ret
 402a650:	00802284 	movi	r2,138
 402a654:	20800015 	stw	r2,0(r4)
 402a658:	00bfffc4 	movi	r2,-1
 402a65c:	f800283a 	ret

0402a660 <_wctomb_r>:
 402a660:	00800034 	movhi	r2,0
 402a664:	defff904 	addi	sp,sp,-28
 402a668:	10878a04 	addi	r2,r2,7720
 402a66c:	dfc00615 	stw	ra,24(sp)
 402a670:	dc400515 	stw	r17,20(sp)
 402a674:	dc000415 	stw	r16,16(sp)
 402a678:	3823883a 	mov	r17,r7
 402a67c:	14000017 	ldw	r16,0(r2)
 402a680:	d9000115 	stw	r4,4(sp)
 402a684:	d9400215 	stw	r5,8(sp)
 402a688:	d9800315 	stw	r6,12(sp)
 402a68c:	40261c80 	call	40261c8 <__locale_charset>
 402a690:	d9000117 	ldw	r4,4(sp)
 402a694:	d9400217 	ldw	r5,8(sp)
 402a698:	d9800317 	ldw	r6,12(sp)
 402a69c:	dc400015 	stw	r17,0(sp)
 402a6a0:	100f883a 	mov	r7,r2
 402a6a4:	803ee83a 	callr	r16
 402a6a8:	dfc00617 	ldw	ra,24(sp)
 402a6ac:	dc400517 	ldw	r17,20(sp)
 402a6b0:	dc000417 	ldw	r16,16(sp)
 402a6b4:	dec00704 	addi	sp,sp,28
 402a6b8:	f800283a 	ret

0402a6bc <__muldi3>:
 402a6bc:	defff604 	addi	sp,sp,-40
 402a6c0:	dd800615 	stw	r22,24(sp)
 402a6c4:	dd400515 	stw	r21,20(sp)
 402a6c8:	25bfffcc 	andi	r22,r4,65535
 402a6cc:	357fffcc 	andi	r21,r6,65535
 402a6d0:	dc400115 	stw	r17,4(sp)
 402a6d4:	2022d43a 	srli	r17,r4,16
 402a6d8:	dcc00315 	stw	r19,12(sp)
 402a6dc:	dc800215 	stw	r18,8(sp)
 402a6e0:	2027883a 	mov	r19,r4
 402a6e4:	2825883a 	mov	r18,r5
 402a6e8:	a809883a 	mov	r4,r21
 402a6ec:	b00b883a 	mov	r5,r22
 402a6f0:	dfc00915 	stw	ra,36(sp)
 402a6f4:	df000815 	stw	fp,32(sp)
 402a6f8:	ddc00715 	stw	r23,28(sp)
 402a6fc:	3839883a 	mov	fp,r7
 402a700:	302ed43a 	srli	r23,r6,16
 402a704:	dd000415 	stw	r20,16(sp)
 402a708:	dc000015 	stw	r16,0(sp)
 402a70c:	3029883a 	mov	r20,r6
 402a710:	402110c0 	call	402110c <__mulsi3>
 402a714:	a809883a 	mov	r4,r21
 402a718:	880b883a 	mov	r5,r17
 402a71c:	1021883a 	mov	r16,r2
 402a720:	402110c0 	call	402110c <__mulsi3>
 402a724:	880b883a 	mov	r5,r17
 402a728:	b809883a 	mov	r4,r23
 402a72c:	102b883a 	mov	r21,r2
 402a730:	402110c0 	call	402110c <__mulsi3>
 402a734:	b809883a 	mov	r4,r23
 402a738:	b00b883a 	mov	r5,r22
 402a73c:	1023883a 	mov	r17,r2
 402a740:	402110c0 	call	402110c <__mulsi3>
 402a744:	8012d43a 	srli	r9,r16,16
 402a748:	a885883a 	add	r2,r21,r2
 402a74c:	1251883a 	add	r8,r2,r9
 402a750:	4540022e 	bgeu	r8,r21,402a75c <__muldi3+0xa0>
 402a754:	00800074 	movhi	r2,1
 402a758:	88a3883a 	add	r17,r17,r2
 402a75c:	4006d43a 	srli	r3,r8,16
 402a760:	4010943a 	slli	r8,r8,16
 402a764:	9809883a 	mov	r4,r19
 402a768:	e00b883a 	mov	r5,fp
 402a76c:	843fffcc 	andi	r16,r16,65535
 402a770:	88e3883a 	add	r17,r17,r3
 402a774:	4421883a 	add	r16,r8,r16
 402a778:	402110c0 	call	402110c <__mulsi3>
 402a77c:	a009883a 	mov	r4,r20
 402a780:	900b883a 	mov	r5,r18
 402a784:	1027883a 	mov	r19,r2
 402a788:	402110c0 	call	402110c <__mulsi3>
 402a78c:	9885883a 	add	r2,r19,r2
 402a790:	1447883a 	add	r3,r2,r17
 402a794:	8005883a 	mov	r2,r16
 402a798:	dfc00917 	ldw	ra,36(sp)
 402a79c:	df000817 	ldw	fp,32(sp)
 402a7a0:	ddc00717 	ldw	r23,28(sp)
 402a7a4:	dd800617 	ldw	r22,24(sp)
 402a7a8:	dd400517 	ldw	r21,20(sp)
 402a7ac:	dd000417 	ldw	r20,16(sp)
 402a7b0:	dcc00317 	ldw	r19,12(sp)
 402a7b4:	dc800217 	ldw	r18,8(sp)
 402a7b8:	dc400117 	ldw	r17,4(sp)
 402a7bc:	dc000017 	ldw	r16,0(sp)
 402a7c0:	dec00a04 	addi	sp,sp,40
 402a7c4:	f800283a 	ret

0402a7c8 <__udivdi3>:
 402a7c8:	defff504 	addi	sp,sp,-44
 402a7cc:	dcc00415 	stw	r19,16(sp)
 402a7d0:	dc000115 	stw	r16,4(sp)
 402a7d4:	dfc00a15 	stw	ra,40(sp)
 402a7d8:	df000915 	stw	fp,36(sp)
 402a7dc:	ddc00815 	stw	r23,32(sp)
 402a7e0:	dd800715 	stw	r22,28(sp)
 402a7e4:	dd400615 	stw	r21,24(sp)
 402a7e8:	dd000515 	stw	r20,20(sp)
 402a7ec:	dc800315 	stw	r18,12(sp)
 402a7f0:	dc400215 	stw	r17,8(sp)
 402a7f4:	2027883a 	mov	r19,r4
 402a7f8:	2821883a 	mov	r16,r5
 402a7fc:	3800471e 	bne	r7,zero,402a91c <__udivdi3+0x154>
 402a800:	3025883a 	mov	r18,r6
 402a804:	2023883a 	mov	r17,r4
 402a808:	2980592e 	bgeu	r5,r6,402a970 <__udivdi3+0x1a8>
 402a80c:	00bfffd4 	movui	r2,65535
 402a810:	2829883a 	mov	r20,r5
 402a814:	1180b236 	bltu	r2,r6,402aae0 <__udivdi3+0x318>
 402a818:	00803fc4 	movi	r2,255
 402a81c:	1181622e 	bgeu	r2,r6,402ada8 <__udivdi3+0x5e0>
 402a820:	00800204 	movi	r2,8
 402a824:	1007883a 	mov	r3,r2
 402a828:	3084d83a 	srl	r2,r6,r2
 402a82c:	01000034 	movhi	r4,0
 402a830:	21008804 	addi	r4,r4,544
 402a834:	2085883a 	add	r2,r4,r2
 402a838:	11000003 	ldbu	r4,0(r2)
 402a83c:	20c9883a 	add	r4,r4,r3
 402a840:	00c00804 	movi	r3,32
 402a844:	1907c83a 	sub	r3,r3,r4
 402a848:	18000526 	beq	r3,zero,402a860 <__udivdi3+0x98>
 402a84c:	80e0983a 	sll	r16,r16,r3
 402a850:	9908d83a 	srl	r4,r19,r4
 402a854:	30e4983a 	sll	r18,r6,r3
 402a858:	98e2983a 	sll	r17,r19,r3
 402a85c:	8128b03a 	or	r20,r16,r4
 402a860:	902ad43a 	srli	r21,r18,16
 402a864:	a009883a 	mov	r4,r20
 402a868:	95bfffcc 	andi	r22,r18,65535
 402a86c:	a80b883a 	mov	r5,r21
 402a870:	40211040 	call	4021104 <__umodsi3>
 402a874:	a009883a 	mov	r4,r20
 402a878:	a80b883a 	mov	r5,r21
 402a87c:	102f883a 	mov	r23,r2
 402a880:	40210fc0 	call	40210fc <__udivsi3>
 402a884:	1009883a 	mov	r4,r2
 402a888:	b00b883a 	mov	r5,r22
 402a88c:	1021883a 	mov	r16,r2
 402a890:	402110c0 	call	402110c <__mulsi3>
 402a894:	b82e943a 	slli	r23,r23,16
 402a898:	8808d43a 	srli	r4,r17,16
 402a89c:	b906b03a 	or	r3,r23,r4
 402a8a0:	1880052e 	bgeu	r3,r2,402a8b8 <__udivdi3+0xf0>
 402a8a4:	1c87883a 	add	r3,r3,r18
 402a8a8:	813fffc4 	addi	r4,r16,-1
 402a8ac:	1c800136 	bltu	r3,r18,402a8b4 <__udivdi3+0xec>
 402a8b0:	18815236 	bltu	r3,r2,402adfc <__udivdi3+0x634>
 402a8b4:	2021883a 	mov	r16,r4
 402a8b8:	18a7c83a 	sub	r19,r3,r2
 402a8bc:	9809883a 	mov	r4,r19
 402a8c0:	a80b883a 	mov	r5,r21
 402a8c4:	40211040 	call	4021104 <__umodsi3>
 402a8c8:	1029883a 	mov	r20,r2
 402a8cc:	9809883a 	mov	r4,r19
 402a8d0:	a80b883a 	mov	r5,r21
 402a8d4:	a028943a 	slli	r20,r20,16
 402a8d8:	40210fc0 	call	40210fc <__udivsi3>
 402a8dc:	1009883a 	mov	r4,r2
 402a8e0:	b00b883a 	mov	r5,r22
 402a8e4:	8c7fffcc 	andi	r17,r17,65535
 402a8e8:	1027883a 	mov	r19,r2
 402a8ec:	a462b03a 	or	r17,r20,r17
 402a8f0:	402110c0 	call	402110c <__mulsi3>
 402a8f4:	8880052e 	bgeu	r17,r2,402a90c <__udivdi3+0x144>
 402a8f8:	8ca3883a 	add	r17,r17,r18
 402a8fc:	98ffffc4 	addi	r3,r19,-1
 402a900:	8c811036 	bltu	r17,r18,402ad44 <__udivdi3+0x57c>
 402a904:	88810f2e 	bgeu	r17,r2,402ad44 <__udivdi3+0x57c>
 402a908:	9cffff84 	addi	r19,r19,-2
 402a90c:	8020943a 	slli	r16,r16,16
 402a910:	0007883a 	mov	r3,zero
 402a914:	9c04b03a 	or	r2,r19,r16
 402a918:	00006006 	br	402aa9c <__udivdi3+0x2d4>
 402a91c:	29c05d36 	bltu	r5,r7,402aa94 <__udivdi3+0x2cc>
 402a920:	00bfffd4 	movui	r2,65535
 402a924:	11c0692e 	bgeu	r2,r7,402aacc <__udivdi3+0x304>
 402a928:	00804034 	movhi	r2,256
 402a92c:	10bfffc4 	addi	r2,r2,-1
 402a930:	11c10e2e 	bgeu	r2,r7,402ad6c <__udivdi3+0x5a4>
 402a934:	01400604 	movi	r5,24
 402a938:	2811883a 	mov	r8,r5
 402a93c:	394ad83a 	srl	r5,r7,r5
 402a940:	00800034 	movhi	r2,0
 402a944:	10808804 	addi	r2,r2,544
 402a948:	114b883a 	add	r5,r2,r5
 402a94c:	29400003 	ldbu	r5,0(r5)
 402a950:	00c00804 	movi	r3,32
 402a954:	2a0b883a 	add	r5,r5,r8
 402a958:	196fc83a 	sub	r23,r3,r5
 402a95c:	b8006b1e 	bne	r23,zero,402ab0c <__udivdi3+0x344>
 402a960:	3c011436 	bltu	r7,r16,402adb4 <__udivdi3+0x5ec>
 402a964:	9985403a 	cmpgeu	r2,r19,r6
 402a968:	0007883a 	mov	r3,zero
 402a96c:	00004b06 	br	402aa9c <__udivdi3+0x2d4>
 402a970:	3000041e 	bne	r6,zero,402a984 <__udivdi3+0x1bc>
 402a974:	01000044 	movi	r4,1
 402a978:	000b883a 	mov	r5,zero
 402a97c:	40210fc0 	call	40210fc <__udivsi3>
 402a980:	1025883a 	mov	r18,r2
 402a984:	00bfffd4 	movui	r2,65535
 402a988:	14805b2e 	bgeu	r2,r18,402aaf8 <__udivdi3+0x330>
 402a98c:	00804034 	movhi	r2,256
 402a990:	10bfffc4 	addi	r2,r2,-1
 402a994:	1480fe2e 	bgeu	r2,r18,402ad90 <__udivdi3+0x5c8>
 402a998:	00800604 	movi	r2,24
 402a99c:	1007883a 	mov	r3,r2
 402a9a0:	9084d83a 	srl	r2,r18,r2
 402a9a4:	01000034 	movhi	r4,0
 402a9a8:	21008804 	addi	r4,r4,544
 402a9ac:	2085883a 	add	r2,r4,r2
 402a9b0:	11800003 	ldbu	r6,0(r2)
 402a9b4:	01c00804 	movi	r7,32
 402a9b8:	30c7883a 	add	r3,r6,r3
 402a9bc:	38cfc83a 	sub	r7,r7,r3
 402a9c0:	3800a71e 	bne	r7,zero,402ac60 <__udivdi3+0x498>
 402a9c4:	9028d43a 	srli	r20,r18,16
 402a9c8:	84a1c83a 	sub	r16,r16,r18
 402a9cc:	957fffcc 	andi	r21,r18,65535
 402a9d0:	00c00044 	movi	r3,1
 402a9d4:	8009883a 	mov	r4,r16
 402a9d8:	a00b883a 	mov	r5,r20
 402a9dc:	d8c00015 	stw	r3,0(sp)
 402a9e0:	40211040 	call	4021104 <__umodsi3>
 402a9e4:	8009883a 	mov	r4,r16
 402a9e8:	a00b883a 	mov	r5,r20
 402a9ec:	102d883a 	mov	r22,r2
 402a9f0:	40210fc0 	call	40210fc <__udivsi3>
 402a9f4:	1009883a 	mov	r4,r2
 402a9f8:	a80b883a 	mov	r5,r21
 402a9fc:	1021883a 	mov	r16,r2
 402aa00:	402110c0 	call	402110c <__mulsi3>
 402aa04:	b02c943a 	slli	r22,r22,16
 402aa08:	880ed43a 	srli	r7,r17,16
 402aa0c:	d8c00017 	ldw	r3,0(sp)
 402aa10:	b1ccb03a 	or	r6,r22,r7
 402aa14:	3080052e 	bgeu	r6,r2,402aa2c <__udivdi3+0x264>
 402aa18:	348d883a 	add	r6,r6,r18
 402aa1c:	813fffc4 	addi	r4,r16,-1
 402aa20:	34800136 	bltu	r6,r18,402aa28 <__udivdi3+0x260>
 402aa24:	3080f236 	bltu	r6,r2,402adf0 <__udivdi3+0x628>
 402aa28:	2021883a 	mov	r16,r4
 402aa2c:	30a7c83a 	sub	r19,r6,r2
 402aa30:	9809883a 	mov	r4,r19
 402aa34:	a00b883a 	mov	r5,r20
 402aa38:	d8c00015 	stw	r3,0(sp)
 402aa3c:	40211040 	call	4021104 <__umodsi3>
 402aa40:	102d883a 	mov	r22,r2
 402aa44:	9809883a 	mov	r4,r19
 402aa48:	a00b883a 	mov	r5,r20
 402aa4c:	b02c943a 	slli	r22,r22,16
 402aa50:	40210fc0 	call	40210fc <__udivsi3>
 402aa54:	1009883a 	mov	r4,r2
 402aa58:	a80b883a 	mov	r5,r21
 402aa5c:	8c7fffcc 	andi	r17,r17,65535
 402aa60:	1027883a 	mov	r19,r2
 402aa64:	b462b03a 	or	r17,r22,r17
 402aa68:	402110c0 	call	402110c <__mulsi3>
 402aa6c:	d8c00017 	ldw	r3,0(sp)
 402aa70:	8880052e 	bgeu	r17,r2,402aa88 <__udivdi3+0x2c0>
 402aa74:	8ca3883a 	add	r17,r17,r18
 402aa78:	993fffc4 	addi	r4,r19,-1
 402aa7c:	8c80af36 	bltu	r17,r18,402ad3c <__udivdi3+0x574>
 402aa80:	8880ae2e 	bgeu	r17,r2,402ad3c <__udivdi3+0x574>
 402aa84:	9cffff84 	addi	r19,r19,-2
 402aa88:	8020943a 	slli	r16,r16,16
 402aa8c:	9c04b03a 	or	r2,r19,r16
 402aa90:	00000206 	br	402aa9c <__udivdi3+0x2d4>
 402aa94:	0007883a 	mov	r3,zero
 402aa98:	0005883a 	mov	r2,zero
 402aa9c:	dfc00a17 	ldw	ra,40(sp)
 402aaa0:	df000917 	ldw	fp,36(sp)
 402aaa4:	ddc00817 	ldw	r23,32(sp)
 402aaa8:	dd800717 	ldw	r22,28(sp)
 402aaac:	dd400617 	ldw	r21,24(sp)
 402aab0:	dd000517 	ldw	r20,20(sp)
 402aab4:	dcc00417 	ldw	r19,16(sp)
 402aab8:	dc800317 	ldw	r18,12(sp)
 402aabc:	dc400217 	ldw	r17,8(sp)
 402aac0:	dc000117 	ldw	r16,4(sp)
 402aac4:	dec00b04 	addi	sp,sp,44
 402aac8:	f800283a 	ret
 402aacc:	00803fc4 	movi	r2,255
 402aad0:	11c0a92e 	bgeu	r2,r7,402ad78 <__udivdi3+0x5b0>
 402aad4:	01400204 	movi	r5,8
 402aad8:	2811883a 	mov	r8,r5
 402aadc:	003f9706 	br	402a93c <__flash_rwdata_start+0xffffa078>
 402aae0:	00804034 	movhi	r2,256
 402aae4:	10bfffc4 	addi	r2,r2,-1
 402aae8:	1180a62e 	bgeu	r2,r6,402ad84 <__udivdi3+0x5bc>
 402aaec:	00800604 	movi	r2,24
 402aaf0:	1007883a 	mov	r3,r2
 402aaf4:	003f4c06 	br	402a828 <__flash_rwdata_start+0xffff9f64>
 402aaf8:	00803fc4 	movi	r2,255
 402aafc:	1480a72e 	bgeu	r2,r18,402ad9c <__udivdi3+0x5d4>
 402ab00:	00800204 	movi	r2,8
 402ab04:	1007883a 	mov	r3,r2
 402ab08:	003fa506 	br	402a9a0 <__flash_rwdata_start+0xffffa0dc>
 402ab0c:	3178d83a 	srl	fp,r6,r5
 402ab10:	3dce983a 	sll	r7,r7,r23
 402ab14:	8168d83a 	srl	r20,r16,r5
 402ab18:	9950d83a 	srl	r8,r19,r5
 402ab1c:	3f38b03a 	or	fp,r7,fp
 402ab20:	e024d43a 	srli	r18,fp,16
 402ab24:	85e0983a 	sll	r16,r16,r23
 402ab28:	a009883a 	mov	r4,r20
 402ab2c:	900b883a 	mov	r5,r18
 402ab30:	8220b03a 	or	r16,r16,r8
 402ab34:	35ea983a 	sll	r21,r6,r23
 402ab38:	40211040 	call	4021104 <__umodsi3>
 402ab3c:	a009883a 	mov	r4,r20
 402ab40:	900b883a 	mov	r5,r18
 402ab44:	1023883a 	mov	r17,r2
 402ab48:	e5bfffcc 	andi	r22,fp,65535
 402ab4c:	40210fc0 	call	40210fc <__udivsi3>
 402ab50:	1009883a 	mov	r4,r2
 402ab54:	b00b883a 	mov	r5,r22
 402ab58:	1029883a 	mov	r20,r2
 402ab5c:	402110c0 	call	402110c <__mulsi3>
 402ab60:	8806943a 	slli	r3,r17,16
 402ab64:	8014d43a 	srli	r10,r16,16
 402ab68:	1a92b03a 	or	r9,r3,r10
 402ab6c:	4880042e 	bgeu	r9,r2,402ab80 <__udivdi3+0x3b8>
 402ab70:	4f13883a 	add	r9,r9,fp
 402ab74:	a0ffffc4 	addi	r3,r20,-1
 402ab78:	4f00952e 	bgeu	r9,fp,402add0 <__udivdi3+0x608>
 402ab7c:	1829883a 	mov	r20,r3
 402ab80:	48a3c83a 	sub	r17,r9,r2
 402ab84:	8809883a 	mov	r4,r17
 402ab88:	900b883a 	mov	r5,r18
 402ab8c:	40211040 	call	4021104 <__umodsi3>
 402ab90:	8809883a 	mov	r4,r17
 402ab94:	900b883a 	mov	r5,r18
 402ab98:	d8800015 	stw	r2,0(sp)
 402ab9c:	40210fc0 	call	40210fc <__udivsi3>
 402aba0:	1009883a 	mov	r4,r2
 402aba4:	b00b883a 	mov	r5,r22
 402aba8:	1023883a 	mov	r17,r2
 402abac:	402110c0 	call	402110c <__mulsi3>
 402abb0:	d8c00017 	ldw	r3,0(sp)
 402abb4:	823fffcc 	andi	r8,r16,65535
 402abb8:	1806943a 	slli	r3,r3,16
 402abbc:	1a20b03a 	or	r16,r3,r8
 402abc0:	8080042e 	bgeu	r16,r2,402abd4 <__udivdi3+0x40c>
 402abc4:	8721883a 	add	r16,r16,fp
 402abc8:	88ffffc4 	addi	r3,r17,-1
 402abcc:	87007c2e 	bgeu	r16,fp,402adc0 <__udivdi3+0x5f8>
 402abd0:	1823883a 	mov	r17,r3
 402abd4:	a028943a 	slli	r20,r20,16
 402abd8:	acbfffcc 	andi	r18,r21,65535
 402abdc:	900b883a 	mov	r5,r18
 402abe0:	8d28b03a 	or	r20,r17,r20
 402abe4:	a022d43a 	srli	r17,r20,16
 402abe8:	a5bfffcc 	andi	r22,r20,65535
 402abec:	b009883a 	mov	r4,r22
 402abf0:	a82ad43a 	srli	r21,r21,16
 402abf4:	80a1c83a 	sub	r16,r16,r2
 402abf8:	402110c0 	call	402110c <__mulsi3>
 402abfc:	8809883a 	mov	r4,r17
 402ac00:	900b883a 	mov	r5,r18
 402ac04:	1039883a 	mov	fp,r2
 402ac08:	402110c0 	call	402110c <__mulsi3>
 402ac0c:	8809883a 	mov	r4,r17
 402ac10:	a80b883a 	mov	r5,r21
 402ac14:	1025883a 	mov	r18,r2
 402ac18:	402110c0 	call	402110c <__mulsi3>
 402ac1c:	b009883a 	mov	r4,r22
 402ac20:	a80b883a 	mov	r5,r21
 402ac24:	1023883a 	mov	r17,r2
 402ac28:	402110c0 	call	402110c <__mulsi3>
 402ac2c:	e006d43a 	srli	r3,fp,16
 402ac30:	9085883a 	add	r2,r18,r2
 402ac34:	10c7883a 	add	r3,r2,r3
 402ac38:	1c80022e 	bgeu	r3,r18,402ac44 <__udivdi3+0x47c>
 402ac3c:	00800074 	movhi	r2,1
 402ac40:	88a3883a 	add	r17,r17,r2
 402ac44:	1808d43a 	srli	r4,r3,16
 402ac48:	8909883a 	add	r4,r17,r4
 402ac4c:	81004436 	bltu	r16,r4,402ad60 <__udivdi3+0x598>
 402ac50:	81003e26 	beq	r16,r4,402ad4c <__udivdi3+0x584>
 402ac54:	a005883a 	mov	r2,r20
 402ac58:	0007883a 	mov	r3,zero
 402ac5c:	003f8f06 	br	402aa9c <__flash_rwdata_start+0xffffa1d8>
 402ac60:	91e4983a 	sll	r18,r18,r7
 402ac64:	80eed83a 	srl	r23,r16,r3
 402ac68:	81cc983a 	sll	r6,r16,r7
 402ac6c:	9028d43a 	srli	r20,r18,16
 402ac70:	98c6d83a 	srl	r3,r19,r3
 402ac74:	b809883a 	mov	r4,r23
 402ac78:	a00b883a 	mov	r5,r20
 402ac7c:	30ecb03a 	or	r22,r6,r3
 402ac80:	99e2983a 	sll	r17,r19,r7
 402ac84:	40211040 	call	4021104 <__umodsi3>
 402ac88:	b809883a 	mov	r4,r23
 402ac8c:	a00b883a 	mov	r5,r20
 402ac90:	1021883a 	mov	r16,r2
 402ac94:	957fffcc 	andi	r21,r18,65535
 402ac98:	40210fc0 	call	40210fc <__udivsi3>
 402ac9c:	a80b883a 	mov	r5,r21
 402aca0:	1009883a 	mov	r4,r2
 402aca4:	102f883a 	mov	r23,r2
 402aca8:	402110c0 	call	402110c <__mulsi3>
 402acac:	8020943a 	slli	r16,r16,16
 402acb0:	b00ad43a 	srli	r5,r22,16
 402acb4:	814cb03a 	or	r6,r16,r5
 402acb8:	3080062e 	bgeu	r6,r2,402acd4 <__udivdi3+0x50c>
 402acbc:	348d883a 	add	r6,r6,r18
 402acc0:	b8ffffc4 	addi	r3,r23,-1
 402acc4:	34804836 	bltu	r6,r18,402ade8 <__udivdi3+0x620>
 402acc8:	3080472e 	bgeu	r6,r2,402ade8 <__udivdi3+0x620>
 402accc:	bdffff84 	addi	r23,r23,-2
 402acd0:	348d883a 	add	r6,r6,r18
 402acd4:	30a7c83a 	sub	r19,r6,r2
 402acd8:	9809883a 	mov	r4,r19
 402acdc:	a00b883a 	mov	r5,r20
 402ace0:	40211040 	call	4021104 <__umodsi3>
 402ace4:	9809883a 	mov	r4,r19
 402ace8:	a00b883a 	mov	r5,r20
 402acec:	1039883a 	mov	fp,r2
 402acf0:	40210fc0 	call	40210fc <__udivsi3>
 402acf4:	1009883a 	mov	r4,r2
 402acf8:	a80b883a 	mov	r5,r21
 402acfc:	e038943a 	slli	fp,fp,16
 402ad00:	1027883a 	mov	r19,r2
 402ad04:	402110c0 	call	402110c <__mulsi3>
 402ad08:	b1bfffcc 	andi	r6,r22,65535
 402ad0c:	e18cb03a 	or	r6,fp,r6
 402ad10:	3080062e 	bgeu	r6,r2,402ad2c <__udivdi3+0x564>
 402ad14:	348d883a 	add	r6,r6,r18
 402ad18:	98ffffc4 	addi	r3,r19,-1
 402ad1c:	34803036 	bltu	r6,r18,402ade0 <__udivdi3+0x618>
 402ad20:	30802f2e 	bgeu	r6,r2,402ade0 <__udivdi3+0x618>
 402ad24:	9cffff84 	addi	r19,r19,-2
 402ad28:	348d883a 	add	r6,r6,r18
 402ad2c:	b82e943a 	slli	r23,r23,16
 402ad30:	30a1c83a 	sub	r16,r6,r2
 402ad34:	9dc6b03a 	or	r3,r19,r23
 402ad38:	003f2606 	br	402a9d4 <__flash_rwdata_start+0xffffa110>
 402ad3c:	2027883a 	mov	r19,r4
 402ad40:	003f5106 	br	402aa88 <__flash_rwdata_start+0xffffa1c4>
 402ad44:	1827883a 	mov	r19,r3
 402ad48:	003ef006 	br	402a90c <__flash_rwdata_start+0xffffa048>
 402ad4c:	1808943a 	slli	r4,r3,16
 402ad50:	9dc6983a 	sll	r3,r19,r23
 402ad54:	e73fffcc 	andi	fp,fp,65535
 402ad58:	2709883a 	add	r4,r4,fp
 402ad5c:	193fbd2e 	bgeu	r3,r4,402ac54 <__flash_rwdata_start+0xffffa390>
 402ad60:	a0bfffc4 	addi	r2,r20,-1
 402ad64:	0007883a 	mov	r3,zero
 402ad68:	003f4c06 	br	402aa9c <__flash_rwdata_start+0xffffa1d8>
 402ad6c:	01400404 	movi	r5,16
 402ad70:	2811883a 	mov	r8,r5
 402ad74:	003ef106 	br	402a93c <__flash_rwdata_start+0xffffa078>
 402ad78:	000b883a 	mov	r5,zero
 402ad7c:	0011883a 	mov	r8,zero
 402ad80:	003eee06 	br	402a93c <__flash_rwdata_start+0xffffa078>
 402ad84:	00800404 	movi	r2,16
 402ad88:	1007883a 	mov	r3,r2
 402ad8c:	003ea606 	br	402a828 <__flash_rwdata_start+0xffff9f64>
 402ad90:	00800404 	movi	r2,16
 402ad94:	1007883a 	mov	r3,r2
 402ad98:	003f0106 	br	402a9a0 <__flash_rwdata_start+0xffffa0dc>
 402ad9c:	0005883a 	mov	r2,zero
 402ada0:	0007883a 	mov	r3,zero
 402ada4:	003efe06 	br	402a9a0 <__flash_rwdata_start+0xffffa0dc>
 402ada8:	0005883a 	mov	r2,zero
 402adac:	0007883a 	mov	r3,zero
 402adb0:	003e9d06 	br	402a828 <__flash_rwdata_start+0xffff9f64>
 402adb4:	0007883a 	mov	r3,zero
 402adb8:	00800044 	movi	r2,1
 402adbc:	003f3706 	br	402aa9c <__flash_rwdata_start+0xffffa1d8>
 402adc0:	80bf832e 	bgeu	r16,r2,402abd0 <__flash_rwdata_start+0xffffa30c>
 402adc4:	8c7fff84 	addi	r17,r17,-2
 402adc8:	8721883a 	add	r16,r16,fp
 402adcc:	003f8106 	br	402abd4 <__flash_rwdata_start+0xffffa310>
 402add0:	48bf6a2e 	bgeu	r9,r2,402ab7c <__flash_rwdata_start+0xffffa2b8>
 402add4:	a53fff84 	addi	r20,r20,-2
 402add8:	4f13883a 	add	r9,r9,fp
 402addc:	003f6806 	br	402ab80 <__flash_rwdata_start+0xffffa2bc>
 402ade0:	1827883a 	mov	r19,r3
 402ade4:	003fd106 	br	402ad2c <__flash_rwdata_start+0xffffa468>
 402ade8:	182f883a 	mov	r23,r3
 402adec:	003fb906 	br	402acd4 <__flash_rwdata_start+0xffffa410>
 402adf0:	843fff84 	addi	r16,r16,-2
 402adf4:	348d883a 	add	r6,r6,r18
 402adf8:	003f0c06 	br	402aa2c <__flash_rwdata_start+0xffffa168>
 402adfc:	843fff84 	addi	r16,r16,-2
 402ae00:	1c87883a 	add	r3,r3,r18
 402ae04:	003eac06 	br	402a8b8 <__flash_rwdata_start+0xffff9ff4>

0402ae08 <__umoddi3>:
 402ae08:	defff404 	addi	sp,sp,-48
 402ae0c:	dd800815 	stw	r22,32(sp)
 402ae10:	dc400315 	stw	r17,12(sp)
 402ae14:	dc000215 	stw	r16,8(sp)
 402ae18:	dfc00b15 	stw	ra,44(sp)
 402ae1c:	df000a15 	stw	fp,40(sp)
 402ae20:	ddc00915 	stw	r23,36(sp)
 402ae24:	dd400715 	stw	r21,28(sp)
 402ae28:	dd000615 	stw	r20,24(sp)
 402ae2c:	dcc00515 	stw	r19,20(sp)
 402ae30:	dc800415 	stw	r18,16(sp)
 402ae34:	2021883a 	mov	r16,r4
 402ae38:	2823883a 	mov	r17,r5
 402ae3c:	282d883a 	mov	r22,r5
 402ae40:	38003c1e 	bne	r7,zero,402af34 <__umoddi3+0x12c>
 402ae44:	3027883a 	mov	r19,r6
 402ae48:	2029883a 	mov	r20,r4
 402ae4c:	2980522e 	bgeu	r5,r6,402af98 <__umoddi3+0x190>
 402ae50:	00bfffd4 	movui	r2,65535
 402ae54:	1180a436 	bltu	r2,r6,402b0e8 <__umoddi3+0x2e0>
 402ae58:	00803fc4 	movi	r2,255
 402ae5c:	11815e2e 	bgeu	r2,r6,402b3d8 <__umoddi3+0x5d0>
 402ae60:	01400204 	movi	r5,8
 402ae64:	2805883a 	mov	r2,r5
 402ae68:	314ad83a 	srl	r5,r6,r5
 402ae6c:	00c00034 	movhi	r3,0
 402ae70:	18c08804 	addi	r3,r3,544
 402ae74:	194b883a 	add	r5,r3,r5
 402ae78:	29000003 	ldbu	r4,0(r5)
 402ae7c:	2089883a 	add	r4,r4,r2
 402ae80:	00800804 	movi	r2,32
 402ae84:	1105c83a 	sub	r2,r2,r4
 402ae88:	10010c26 	beq	r2,zero,402b2bc <__umoddi3+0x4b4>
 402ae8c:	88a2983a 	sll	r17,r17,r2
 402ae90:	8108d83a 	srl	r4,r16,r4
 402ae94:	30a6983a 	sll	r19,r6,r2
 402ae98:	80a8983a 	sll	r20,r16,r2
 402ae9c:	1025883a 	mov	r18,r2
 402aea0:	892cb03a 	or	r22,r17,r4
 402aea4:	9822d43a 	srli	r17,r19,16
 402aea8:	b009883a 	mov	r4,r22
 402aeac:	9d7fffcc 	andi	r21,r19,65535
 402aeb0:	880b883a 	mov	r5,r17
 402aeb4:	40211040 	call	4021104 <__umodsi3>
 402aeb8:	b009883a 	mov	r4,r22
 402aebc:	880b883a 	mov	r5,r17
 402aec0:	102f883a 	mov	r23,r2
 402aec4:	40210fc0 	call	40210fc <__udivsi3>
 402aec8:	1009883a 	mov	r4,r2
 402aecc:	a80b883a 	mov	r5,r21
 402aed0:	402110c0 	call	402110c <__mulsi3>
 402aed4:	b82e943a 	slli	r23,r23,16
 402aed8:	a008d43a 	srli	r4,r20,16
 402aedc:	b906b03a 	or	r3,r23,r4
 402aee0:	1880042e 	bgeu	r3,r2,402aef4 <__umoddi3+0xec>
 402aee4:	1cc7883a 	add	r3,r3,r19
 402aee8:	1cc00236 	bltu	r3,r19,402aef4 <__umoddi3+0xec>
 402aeec:	1880012e 	bgeu	r3,r2,402aef4 <__umoddi3+0xec>
 402aef0:	1cc7883a 	add	r3,r3,r19
 402aef4:	18a1c83a 	sub	r16,r3,r2
 402aef8:	8009883a 	mov	r4,r16
 402aefc:	880b883a 	mov	r5,r17
 402af00:	40211040 	call	4021104 <__umodsi3>
 402af04:	8009883a 	mov	r4,r16
 402af08:	880b883a 	mov	r5,r17
 402af0c:	102d883a 	mov	r22,r2
 402af10:	40210fc0 	call	40210fc <__udivsi3>
 402af14:	1009883a 	mov	r4,r2
 402af18:	a80b883a 	mov	r5,r21
 402af1c:	b02c943a 	slli	r22,r22,16
 402af20:	402110c0 	call	402110c <__mulsi3>
 402af24:	a13fffcc 	andi	r4,r20,65535
 402af28:	b106b03a 	or	r3,r22,r4
 402af2c:	1880572e 	bgeu	r3,r2,402b08c <__umoddi3+0x284>
 402af30:	00005206 	br	402b07c <__umoddi3+0x274>
 402af34:	29c05936 	bltu	r5,r7,402b09c <__umoddi3+0x294>
 402af38:	00bfffd4 	movui	r2,65535
 402af3c:	11c0652e 	bgeu	r2,r7,402b0d4 <__umoddi3+0x2cc>
 402af40:	00804034 	movhi	r2,256
 402af44:	10bfffc4 	addi	r2,r2,-1
 402af48:	11c1172e 	bgeu	r2,r7,402b3a8 <__umoddi3+0x5a0>
 402af4c:	01400604 	movi	r5,24
 402af50:	282b883a 	mov	r21,r5
 402af54:	394ad83a 	srl	r5,r7,r5
 402af58:	00c00034 	movhi	r3,0
 402af5c:	18c08804 	addi	r3,r3,544
 402af60:	194b883a 	add	r5,r3,r5
 402af64:	28800003 	ldbu	r2,0(r5)
 402af68:	00c00804 	movi	r3,32
 402af6c:	156b883a 	add	r21,r2,r21
 402af70:	1d69c83a 	sub	r20,r3,r21
 402af74:	a000671e 	bne	r20,zero,402b114 <__umoddi3+0x30c>
 402af78:	3c400136 	bltu	r7,r17,402af80 <__umoddi3+0x178>
 402af7c:	81812336 	bltu	r16,r6,402b40c <__umoddi3+0x604>
 402af80:	8185c83a 	sub	r2,r16,r6
 402af84:	89e3c83a 	sub	r17,r17,r7
 402af88:	8087803a 	cmpltu	r3,r16,r2
 402af8c:	88edc83a 	sub	r22,r17,r3
 402af90:	b007883a 	mov	r3,r22
 402af94:	00004306 	br	402b0a4 <__umoddi3+0x29c>
 402af98:	3000041e 	bne	r6,zero,402afac <__umoddi3+0x1a4>
 402af9c:	01000044 	movi	r4,1
 402afa0:	000b883a 	mov	r5,zero
 402afa4:	40210fc0 	call	40210fc <__udivsi3>
 402afa8:	1027883a 	mov	r19,r2
 402afac:	00bfffd4 	movui	r2,65535
 402afb0:	14c0532e 	bgeu	r2,r19,402b100 <__umoddi3+0x2f8>
 402afb4:	00804034 	movhi	r2,256
 402afb8:	10bfffc4 	addi	r2,r2,-1
 402afbc:	14c1032e 	bgeu	r2,r19,402b3cc <__umoddi3+0x5c4>
 402afc0:	00800604 	movi	r2,24
 402afc4:	1007883a 	mov	r3,r2
 402afc8:	9884d83a 	srl	r2,r19,r2
 402afcc:	01000034 	movhi	r4,0
 402afd0:	21008804 	addi	r4,r4,544
 402afd4:	2085883a 	add	r2,r4,r2
 402afd8:	11000003 	ldbu	r4,0(r2)
 402afdc:	00800804 	movi	r2,32
 402afe0:	20c7883a 	add	r3,r4,r3
 402afe4:	10c5c83a 	sub	r2,r2,r3
 402afe8:	1000b61e 	bne	r2,zero,402b2c4 <__umoddi3+0x4bc>
 402afec:	982ad43a 	srli	r21,r19,16
 402aff0:	8ce3c83a 	sub	r17,r17,r19
 402aff4:	9dbfffcc 	andi	r22,r19,65535
 402aff8:	0025883a 	mov	r18,zero
 402affc:	8809883a 	mov	r4,r17
 402b000:	a80b883a 	mov	r5,r21
 402b004:	40211040 	call	4021104 <__umodsi3>
 402b008:	8809883a 	mov	r4,r17
 402b00c:	a80b883a 	mov	r5,r21
 402b010:	102f883a 	mov	r23,r2
 402b014:	40210fc0 	call	40210fc <__udivsi3>
 402b018:	1009883a 	mov	r4,r2
 402b01c:	b00b883a 	mov	r5,r22
 402b020:	402110c0 	call	402110c <__mulsi3>
 402b024:	b82e943a 	slli	r23,r23,16
 402b028:	a008d43a 	srli	r4,r20,16
 402b02c:	b906b03a 	or	r3,r23,r4
 402b030:	1880032e 	bgeu	r3,r2,402b040 <__umoddi3+0x238>
 402b034:	1cc7883a 	add	r3,r3,r19
 402b038:	1cc00136 	bltu	r3,r19,402b040 <__umoddi3+0x238>
 402b03c:	1880f136 	bltu	r3,r2,402b404 <__umoddi3+0x5fc>
 402b040:	18a1c83a 	sub	r16,r3,r2
 402b044:	8009883a 	mov	r4,r16
 402b048:	a80b883a 	mov	r5,r21
 402b04c:	40211040 	call	4021104 <__umodsi3>
 402b050:	8009883a 	mov	r4,r16
 402b054:	a80b883a 	mov	r5,r21
 402b058:	1023883a 	mov	r17,r2
 402b05c:	40210fc0 	call	40210fc <__udivsi3>
 402b060:	1009883a 	mov	r4,r2
 402b064:	b00b883a 	mov	r5,r22
 402b068:	8822943a 	slli	r17,r17,16
 402b06c:	402110c0 	call	402110c <__mulsi3>
 402b070:	a13fffcc 	andi	r4,r20,65535
 402b074:	8906b03a 	or	r3,r17,r4
 402b078:	1880042e 	bgeu	r3,r2,402b08c <__umoddi3+0x284>
 402b07c:	1cc7883a 	add	r3,r3,r19
 402b080:	1cc00236 	bltu	r3,r19,402b08c <__umoddi3+0x284>
 402b084:	1880012e 	bgeu	r3,r2,402b08c <__umoddi3+0x284>
 402b088:	1cc7883a 	add	r3,r3,r19
 402b08c:	1887c83a 	sub	r3,r3,r2
 402b090:	1c84d83a 	srl	r2,r3,r18
 402b094:	0007883a 	mov	r3,zero
 402b098:	00000206 	br	402b0a4 <__umoddi3+0x29c>
 402b09c:	2005883a 	mov	r2,r4
 402b0a0:	2807883a 	mov	r3,r5
 402b0a4:	dfc00b17 	ldw	ra,44(sp)
 402b0a8:	df000a17 	ldw	fp,40(sp)
 402b0ac:	ddc00917 	ldw	r23,36(sp)
 402b0b0:	dd800817 	ldw	r22,32(sp)
 402b0b4:	dd400717 	ldw	r21,28(sp)
 402b0b8:	dd000617 	ldw	r20,24(sp)
 402b0bc:	dcc00517 	ldw	r19,20(sp)
 402b0c0:	dc800417 	ldw	r18,16(sp)
 402b0c4:	dc400317 	ldw	r17,12(sp)
 402b0c8:	dc000217 	ldw	r16,8(sp)
 402b0cc:	dec00c04 	addi	sp,sp,48
 402b0d0:	f800283a 	ret
 402b0d4:	00803fc4 	movi	r2,255
 402b0d8:	11c0b02e 	bgeu	r2,r7,402b39c <__umoddi3+0x594>
 402b0dc:	01400204 	movi	r5,8
 402b0e0:	282b883a 	mov	r21,r5
 402b0e4:	003f9b06 	br	402af54 <__flash_rwdata_start+0xffffa690>
 402b0e8:	00804034 	movhi	r2,256
 402b0ec:	10bfffc4 	addi	r2,r2,-1
 402b0f0:	1180b02e 	bgeu	r2,r6,402b3b4 <__umoddi3+0x5ac>
 402b0f4:	01400604 	movi	r5,24
 402b0f8:	2805883a 	mov	r2,r5
 402b0fc:	003f5a06 	br	402ae68 <__flash_rwdata_start+0xffffa5a4>
 402b100:	00803fc4 	movi	r2,255
 402b104:	14c0ae2e 	bgeu	r2,r19,402b3c0 <__umoddi3+0x5b8>
 402b108:	00800204 	movi	r2,8
 402b10c:	1007883a 	mov	r3,r2
 402b110:	003fad06 	br	402afc8 <__flash_rwdata_start+0xffffa704>
 402b114:	3d0a983a 	sll	r5,r7,r20
 402b118:	356cd83a 	srl	r22,r6,r21
 402b11c:	8d78d83a 	srl	fp,r17,r21
 402b120:	8d10983a 	sll	r8,r17,r20
 402b124:	2dacb03a 	or	r22,r5,r22
 402b128:	b02ed43a 	srli	r23,r22,16
 402b12c:	8564d83a 	srl	r18,r16,r21
 402b130:	e009883a 	mov	r4,fp
 402b134:	b80b883a 	mov	r5,r23
 402b138:	44a4b03a 	or	r18,r8,r18
 402b13c:	3526983a 	sll	r19,r6,r20
 402b140:	40211040 	call	4021104 <__umodsi3>
 402b144:	e009883a 	mov	r4,fp
 402b148:	b80b883a 	mov	r5,r23
 402b14c:	b47fffcc 	andi	r17,r22,65535
 402b150:	d8800015 	stw	r2,0(sp)
 402b154:	40210fc0 	call	40210fc <__udivsi3>
 402b158:	1009883a 	mov	r4,r2
 402b15c:	880b883a 	mov	r5,r17
 402b160:	1039883a 	mov	fp,r2
 402b164:	402110c0 	call	402110c <__mulsi3>
 402b168:	d9800017 	ldw	r6,0(sp)
 402b16c:	9008d43a 	srli	r4,r18,16
 402b170:	8520983a 	sll	r16,r16,r20
 402b174:	300c943a 	slli	r6,r6,16
 402b178:	3106b03a 	or	r3,r6,r4
 402b17c:	1880042e 	bgeu	r3,r2,402b190 <__umoddi3+0x388>
 402b180:	1d87883a 	add	r3,r3,r22
 402b184:	e13fffc4 	addi	r4,fp,-1
 402b188:	1d809a2e 	bgeu	r3,r22,402b3f4 <__umoddi3+0x5ec>
 402b18c:	2039883a 	mov	fp,r4
 402b190:	1887c83a 	sub	r3,r3,r2
 402b194:	1809883a 	mov	r4,r3
 402b198:	b80b883a 	mov	r5,r23
 402b19c:	d8c00115 	stw	r3,4(sp)
 402b1a0:	40211040 	call	4021104 <__umodsi3>
 402b1a4:	d8c00117 	ldw	r3,4(sp)
 402b1a8:	b80b883a 	mov	r5,r23
 402b1ac:	d8800015 	stw	r2,0(sp)
 402b1b0:	1809883a 	mov	r4,r3
 402b1b4:	40210fc0 	call	40210fc <__udivsi3>
 402b1b8:	880b883a 	mov	r5,r17
 402b1bc:	1009883a 	mov	r4,r2
 402b1c0:	102f883a 	mov	r23,r2
 402b1c4:	402110c0 	call	402110c <__mulsi3>
 402b1c8:	d9800017 	ldw	r6,0(sp)
 402b1cc:	947fffcc 	andi	r17,r18,65535
 402b1d0:	300c943a 	slli	r6,r6,16
 402b1d4:	3464b03a 	or	r18,r6,r17
 402b1d8:	9080042e 	bgeu	r18,r2,402b1ec <__umoddi3+0x3e4>
 402b1dc:	95a5883a 	add	r18,r18,r22
 402b1e0:	b8ffffc4 	addi	r3,r23,-1
 402b1e4:	95807f2e 	bgeu	r18,r22,402b3e4 <__umoddi3+0x5dc>
 402b1e8:	182f883a 	mov	r23,r3
 402b1ec:	e038943a 	slli	fp,fp,16
 402b1f0:	980cd43a 	srli	r6,r19,16
 402b1f4:	98ffffcc 	andi	r3,r19,65535
 402b1f8:	bf38b03a 	or	fp,r23,fp
 402b1fc:	e02ed43a 	srli	r23,fp,16
 402b200:	e73fffcc 	andi	fp,fp,65535
 402b204:	180b883a 	mov	r5,r3
 402b208:	e009883a 	mov	r4,fp
 402b20c:	d9800015 	stw	r6,0(sp)
 402b210:	d8c00115 	stw	r3,4(sp)
 402b214:	90a5c83a 	sub	r18,r18,r2
 402b218:	402110c0 	call	402110c <__mulsi3>
 402b21c:	d8c00117 	ldw	r3,4(sp)
 402b220:	b809883a 	mov	r4,r23
 402b224:	1023883a 	mov	r17,r2
 402b228:	180b883a 	mov	r5,r3
 402b22c:	402110c0 	call	402110c <__mulsi3>
 402b230:	d9800017 	ldw	r6,0(sp)
 402b234:	b809883a 	mov	r4,r23
 402b238:	d8800115 	stw	r2,4(sp)
 402b23c:	300b883a 	mov	r5,r6
 402b240:	302f883a 	mov	r23,r6
 402b244:	402110c0 	call	402110c <__mulsi3>
 402b248:	e009883a 	mov	r4,fp
 402b24c:	b80b883a 	mov	r5,r23
 402b250:	d8800015 	stw	r2,0(sp)
 402b254:	402110c0 	call	402110c <__mulsi3>
 402b258:	d8c00117 	ldw	r3,4(sp)
 402b25c:	880cd43a 	srli	r6,r17,16
 402b260:	d9c00017 	ldw	r7,0(sp)
 402b264:	1885883a 	add	r2,r3,r2
 402b268:	118d883a 	add	r6,r2,r6
 402b26c:	30c0022e 	bgeu	r6,r3,402b278 <__umoddi3+0x470>
 402b270:	00800074 	movhi	r2,1
 402b274:	388f883a 	add	r7,r7,r2
 402b278:	3006d43a 	srli	r3,r6,16
 402b27c:	300c943a 	slli	r6,r6,16
 402b280:	8c7fffcc 	andi	r17,r17,65535
 402b284:	38c7883a 	add	r3,r7,r3
 402b288:	3463883a 	add	r17,r6,r17
 402b28c:	90c03d36 	bltu	r18,r3,402b384 <__umoddi3+0x57c>
 402b290:	90c06026 	beq	r18,r3,402b414 <__umoddi3+0x60c>
 402b294:	90c9c83a 	sub	r4,r18,r3
 402b298:	880f883a 	mov	r7,r17
 402b29c:	81cfc83a 	sub	r7,r16,r7
 402b2a0:	81c7803a 	cmpltu	r3,r16,r7
 402b2a4:	20c7c83a 	sub	r3,r4,r3
 402b2a8:	1d44983a 	sll	r2,r3,r21
 402b2ac:	3d0ed83a 	srl	r7,r7,r20
 402b2b0:	1d06d83a 	srl	r3,r3,r20
 402b2b4:	11c4b03a 	or	r2,r2,r7
 402b2b8:	003f7a06 	br	402b0a4 <__flash_rwdata_start+0xffffa7e0>
 402b2bc:	0025883a 	mov	r18,zero
 402b2c0:	003ef806 	br	402aea4 <__flash_rwdata_start+0xffffa5e0>
 402b2c4:	98a6983a 	sll	r19,r19,r2
 402b2c8:	88e8d83a 	srl	r20,r17,r3
 402b2cc:	80c6d83a 	srl	r3,r16,r3
 402b2d0:	982ad43a 	srli	r21,r19,16
 402b2d4:	88a2983a 	sll	r17,r17,r2
 402b2d8:	a009883a 	mov	r4,r20
 402b2dc:	a80b883a 	mov	r5,r21
 402b2e0:	88eeb03a 	or	r23,r17,r3
 402b2e4:	1025883a 	mov	r18,r2
 402b2e8:	40211040 	call	4021104 <__umodsi3>
 402b2ec:	a009883a 	mov	r4,r20
 402b2f0:	a80b883a 	mov	r5,r21
 402b2f4:	1023883a 	mov	r17,r2
 402b2f8:	9dbfffcc 	andi	r22,r19,65535
 402b2fc:	40210fc0 	call	40210fc <__udivsi3>
 402b300:	1009883a 	mov	r4,r2
 402b304:	b00b883a 	mov	r5,r22
 402b308:	402110c0 	call	402110c <__mulsi3>
 402b30c:	8822943a 	slli	r17,r17,16
 402b310:	b808d43a 	srli	r4,r23,16
 402b314:	84a8983a 	sll	r20,r16,r18
 402b318:	8906b03a 	or	r3,r17,r4
 402b31c:	1880042e 	bgeu	r3,r2,402b330 <__umoddi3+0x528>
 402b320:	1cc7883a 	add	r3,r3,r19
 402b324:	1cc00236 	bltu	r3,r19,402b330 <__umoddi3+0x528>
 402b328:	1880012e 	bgeu	r3,r2,402b330 <__umoddi3+0x528>
 402b32c:	1cc7883a 	add	r3,r3,r19
 402b330:	18a1c83a 	sub	r16,r3,r2
 402b334:	8009883a 	mov	r4,r16
 402b338:	a80b883a 	mov	r5,r21
 402b33c:	40211040 	call	4021104 <__umodsi3>
 402b340:	8009883a 	mov	r4,r16
 402b344:	a80b883a 	mov	r5,r21
 402b348:	1039883a 	mov	fp,r2
 402b34c:	40210fc0 	call	40210fc <__udivsi3>
 402b350:	1009883a 	mov	r4,r2
 402b354:	b00b883a 	mov	r5,r22
 402b358:	402110c0 	call	402110c <__mulsi3>
 402b35c:	e006943a 	slli	r3,fp,16
 402b360:	b93fffcc 	andi	r4,r23,65535
 402b364:	1906b03a 	or	r3,r3,r4
 402b368:	1880042e 	bgeu	r3,r2,402b37c <__umoddi3+0x574>
 402b36c:	1cc7883a 	add	r3,r3,r19
 402b370:	1cc00236 	bltu	r3,r19,402b37c <__umoddi3+0x574>
 402b374:	1880012e 	bgeu	r3,r2,402b37c <__umoddi3+0x574>
 402b378:	1cc7883a 	add	r3,r3,r19
 402b37c:	18a3c83a 	sub	r17,r3,r2
 402b380:	003f1e06 	br	402affc <__flash_rwdata_start+0xffffa738>
 402b384:	8ccfc83a 	sub	r7,r17,r19
 402b388:	1d89c83a 	sub	r4,r3,r22
 402b38c:	89e3803a 	cmpltu	r17,r17,r7
 402b390:	2463c83a 	sub	r17,r4,r17
 402b394:	9449c83a 	sub	r4,r18,r17
 402b398:	003fc006 	br	402b29c <__flash_rwdata_start+0xffffa9d8>
 402b39c:	000b883a 	mov	r5,zero
 402b3a0:	002b883a 	mov	r21,zero
 402b3a4:	003eeb06 	br	402af54 <__flash_rwdata_start+0xffffa690>
 402b3a8:	01400404 	movi	r5,16
 402b3ac:	282b883a 	mov	r21,r5
 402b3b0:	003ee806 	br	402af54 <__flash_rwdata_start+0xffffa690>
 402b3b4:	01400404 	movi	r5,16
 402b3b8:	2805883a 	mov	r2,r5
 402b3bc:	003eaa06 	br	402ae68 <__flash_rwdata_start+0xffffa5a4>
 402b3c0:	0005883a 	mov	r2,zero
 402b3c4:	0007883a 	mov	r3,zero
 402b3c8:	003eff06 	br	402afc8 <__flash_rwdata_start+0xffffa704>
 402b3cc:	00800404 	movi	r2,16
 402b3d0:	1007883a 	mov	r3,r2
 402b3d4:	003efc06 	br	402afc8 <__flash_rwdata_start+0xffffa704>
 402b3d8:	000b883a 	mov	r5,zero
 402b3dc:	0005883a 	mov	r2,zero
 402b3e0:	003ea106 	br	402ae68 <__flash_rwdata_start+0xffffa5a4>
 402b3e4:	90bf802e 	bgeu	r18,r2,402b1e8 <__flash_rwdata_start+0xffffa924>
 402b3e8:	bdffff84 	addi	r23,r23,-2
 402b3ec:	95a5883a 	add	r18,r18,r22
 402b3f0:	003f7e06 	br	402b1ec <__flash_rwdata_start+0xffffa928>
 402b3f4:	18bf652e 	bgeu	r3,r2,402b18c <__flash_rwdata_start+0xffffa8c8>
 402b3f8:	e73fff84 	addi	fp,fp,-2
 402b3fc:	1d87883a 	add	r3,r3,r22
 402b400:	003f6306 	br	402b190 <__flash_rwdata_start+0xffffa8cc>
 402b404:	1cc7883a 	add	r3,r3,r19
 402b408:	003f0d06 	br	402b040 <__flash_rwdata_start+0xffffa77c>
 402b40c:	8005883a 	mov	r2,r16
 402b410:	003edf06 	br	402af90 <__flash_rwdata_start+0xffffa6cc>
 402b414:	847fdb36 	bltu	r16,r17,402b384 <__flash_rwdata_start+0xffffaac0>
 402b418:	880f883a 	mov	r7,r17
 402b41c:	0009883a 	mov	r4,zero
 402b420:	003f9e06 	br	402b29c <__flash_rwdata_start+0xffffa9d8>

0402b424 <__adddf3>:
 402b424:	02000434 	movhi	r8,16
 402b428:	423fffc4 	addi	r8,r8,-1
 402b42c:	defffb04 	addi	sp,sp,-20
 402b430:	2a12703a 	and	r9,r5,r8
 402b434:	2806d7fa 	srli	r3,r5,31
 402b438:	3a10703a 	and	r8,r7,r8
 402b43c:	3804d53a 	srli	r2,r7,20
 402b440:	3014d77a 	srli	r10,r6,29
 402b444:	dc000015 	stw	r16,0(sp)
 402b448:	481290fa 	slli	r9,r9,3
 402b44c:	2820d53a 	srli	r16,r5,20
 402b450:	401090fa 	slli	r8,r8,3
 402b454:	200ad77a 	srli	r5,r4,29
 402b458:	380ed7fa 	srli	r7,r7,31
 402b45c:	dc800215 	stw	r18,8(sp)
 402b460:	dc400115 	stw	r17,4(sp)
 402b464:	dfc00415 	stw	ra,16(sp)
 402b468:	dcc00315 	stw	r19,12(sp)
 402b46c:	1c803fcc 	andi	r18,r3,255
 402b470:	8401ffcc 	andi	r16,r16,2047
 402b474:	494ab03a 	or	r5,r9,r5
 402b478:	202290fa 	slli	r17,r4,3
 402b47c:	1081ffcc 	andi	r2,r2,2047
 402b480:	4290b03a 	or	r8,r8,r10
 402b484:	300c90fa 	slli	r6,r6,3
 402b488:	91c07026 	beq	r18,r7,402b64c <__adddf3+0x228>
 402b48c:	8087c83a 	sub	r3,r16,r2
 402b490:	00c0b30e 	bge	zero,r3,402b760 <__adddf3+0x33c>
 402b494:	10002a1e 	bne	r2,zero,402b540 <__adddf3+0x11c>
 402b498:	4184b03a 	or	r2,r8,r6
 402b49c:	1000991e 	bne	r2,zero,402b704 <__adddf3+0x2e0>
 402b4a0:	888001cc 	andi	r2,r17,7
 402b4a4:	10005b26 	beq	r2,zero,402b614 <__adddf3+0x1f0>
 402b4a8:	88c003cc 	andi	r3,r17,15
 402b4ac:	00800104 	movi	r2,4
 402b4b0:	18805826 	beq	r3,r2,402b614 <__adddf3+0x1f0>
 402b4b4:	89800104 	addi	r6,r17,4
 402b4b8:	3463803a 	cmpltu	r17,r6,r17
 402b4bc:	2c4b883a 	add	r5,r5,r17
 402b4c0:	2880202c 	andhi	r2,r5,128
 402b4c4:	9007883a 	mov	r3,r18
 402b4c8:	3023883a 	mov	r17,r6
 402b4cc:	10005426 	beq	r2,zero,402b620 <__adddf3+0x1fc>
 402b4d0:	84000044 	addi	r16,r16,1
 402b4d4:	0081ffc4 	movi	r2,2047
 402b4d8:	8080c126 	beq	r16,r2,402b7e0 <__adddf3+0x3bc>
 402b4dc:	013fe034 	movhi	r4,65408
 402b4e0:	213fffc4 	addi	r4,r4,-1
 402b4e4:	290a703a 	and	r5,r5,r4
 402b4e8:	2804977a 	slli	r2,r5,29
 402b4ec:	280a927a 	slli	r5,r5,9
 402b4f0:	8822d0fa 	srli	r17,r17,3
 402b4f4:	8401ffcc 	andi	r16,r16,2047
 402b4f8:	2808d33a 	srli	r4,r5,12
 402b4fc:	1444b03a 	or	r2,r2,r17
 402b500:	8401ffcc 	andi	r16,r16,2047
 402b504:	800a953a 	slli	r5,r16,20
 402b508:	18c03fcc 	andi	r3,r3,255
 402b50c:	04000434 	movhi	r16,16
 402b510:	180697fa 	slli	r3,r3,31
 402b514:	843fffc4 	addi	r16,r16,-1
 402b518:	2420703a 	and	r16,r4,r16
 402b51c:	8160b03a 	or	r16,r16,r5
 402b520:	80c6b03a 	or	r3,r16,r3
 402b524:	dfc00417 	ldw	ra,16(sp)
 402b528:	dcc00317 	ldw	r19,12(sp)
 402b52c:	dc800217 	ldw	r18,8(sp)
 402b530:	dc400117 	ldw	r17,4(sp)
 402b534:	dc000017 	ldw	r16,0(sp)
 402b538:	dec00504 	addi	sp,sp,20
 402b53c:	f800283a 	ret
 402b540:	0081ffc4 	movi	r2,2047
 402b544:	80bfd626 	beq	r16,r2,402b4a0 <__flash_rwdata_start+0xffffabdc>
 402b548:	42002034 	orhi	r8,r8,128
 402b54c:	00800e04 	movi	r2,56
 402b550:	10c0a616 	blt	r2,r3,402b7ec <__adddf3+0x3c8>
 402b554:	008007c4 	movi	r2,31
 402b558:	10c0c916 	blt	r2,r3,402b880 <__adddf3+0x45c>
 402b55c:	00800804 	movi	r2,32
 402b560:	10c5c83a 	sub	r2,r2,r3
 402b564:	408e983a 	sll	r7,r8,r2
 402b568:	30c8d83a 	srl	r4,r6,r3
 402b56c:	3084983a 	sll	r2,r6,r2
 402b570:	40c6d83a 	srl	r3,r8,r3
 402b574:	390cb03a 	or	r6,r7,r4
 402b578:	1004c03a 	cmpne	r2,r2,zero
 402b57c:	308cb03a 	or	r6,r6,r2
 402b580:	898dc83a 	sub	r6,r17,r6
 402b584:	89a3803a 	cmpltu	r17,r17,r6
 402b588:	28cbc83a 	sub	r5,r5,r3
 402b58c:	2c4bc83a 	sub	r5,r5,r17
 402b590:	3023883a 	mov	r17,r6
 402b594:	2880202c 	andhi	r2,r5,128
 402b598:	10006d26 	beq	r2,zero,402b750 <__adddf3+0x32c>
 402b59c:	04c02034 	movhi	r19,128
 402b5a0:	9cffffc4 	addi	r19,r19,-1
 402b5a4:	2ce6703a 	and	r19,r5,r19
 402b5a8:	98007e26 	beq	r19,zero,402b7a4 <__adddf3+0x380>
 402b5ac:	9809883a 	mov	r4,r19
 402b5b0:	402dbbc0 	call	402dbbc <__clzsi2>
 402b5b4:	10fffe04 	addi	r3,r2,-8
 402b5b8:	010007c4 	movi	r4,31
 402b5bc:	20c07f16 	blt	r4,r3,402b7bc <__adddf3+0x398>
 402b5c0:	01400a04 	movi	r5,40
 402b5c4:	2885c83a 	sub	r2,r5,r2
 402b5c8:	888ad83a 	srl	r5,r17,r2
 402b5cc:	98e6983a 	sll	r19,r19,r3
 402b5d0:	88e2983a 	sll	r17,r17,r3
 402b5d4:	2ce6b03a 	or	r19,r5,r19
 402b5d8:	1c007c16 	blt	r3,r16,402b7cc <__adddf3+0x3a8>
 402b5dc:	1c21c83a 	sub	r16,r3,r16
 402b5e0:	81400044 	addi	r5,r16,1
 402b5e4:	00c007c4 	movi	r3,31
 402b5e8:	19409816 	blt	r3,r5,402b84c <__adddf3+0x428>
 402b5ec:	1c21c83a 	sub	r16,r3,r16
 402b5f0:	8c08983a 	sll	r4,r17,r16
 402b5f4:	8946d83a 	srl	r3,r17,r5
 402b5f8:	9c20983a 	sll	r16,r19,r16
 402b5fc:	2008c03a 	cmpne	r4,r4,zero
 402b600:	994ad83a 	srl	r5,r19,r5
 402b604:	1c06b03a 	or	r3,r3,r16
 402b608:	1922b03a 	or	r17,r3,r4
 402b60c:	0021883a 	mov	r16,zero
 402b610:	003fa306 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402b614:	2880202c 	andhi	r2,r5,128
 402b618:	9007883a 	mov	r3,r18
 402b61c:	103fac1e 	bne	r2,zero,402b4d0 <__flash_rwdata_start+0xffffac0c>
 402b620:	2804977a 	slli	r2,r5,29
 402b624:	8822d0fa 	srli	r17,r17,3
 402b628:	0101ffc4 	movi	r4,2047
 402b62c:	280ad0fa 	srli	r5,r5,3
 402b630:	1444b03a 	or	r2,r2,r17
 402b634:	81002c26 	beq	r16,r4,402b6e8 <__adddf3+0x2c4>
 402b638:	8120703a 	and	r16,r16,r4
 402b63c:	01000434 	movhi	r4,16
 402b640:	213fffc4 	addi	r4,r4,-1
 402b644:	2908703a 	and	r4,r5,r4
 402b648:	003fad06 	br	402b500 <__flash_rwdata_start+0xffffac3c>
 402b64c:	8089c83a 	sub	r4,r16,r2
 402b650:	01006a0e 	bge	zero,r4,402b7fc <__adddf3+0x3d8>
 402b654:	10003326 	beq	r2,zero,402b724 <__adddf3+0x300>
 402b658:	0081ffc4 	movi	r2,2047
 402b65c:	80bf9026 	beq	r16,r2,402b4a0 <__flash_rwdata_start+0xffffabdc>
 402b660:	42002034 	orhi	r8,r8,128
 402b664:	00800e04 	movi	r2,56
 402b668:	1100b116 	blt	r2,r4,402b930 <__adddf3+0x50c>
 402b66c:	008007c4 	movi	r2,31
 402b670:	1100e216 	blt	r2,r4,402b9fc <__adddf3+0x5d8>
 402b674:	00800804 	movi	r2,32
 402b678:	1105c83a 	sub	r2,r2,r4
 402b67c:	4092983a 	sll	r9,r8,r2
 402b680:	310ed83a 	srl	r7,r6,r4
 402b684:	3084983a 	sll	r2,r6,r2
 402b688:	4110d83a 	srl	r8,r8,r4
 402b68c:	49ccb03a 	or	r6,r9,r7
 402b690:	1004c03a 	cmpne	r2,r2,zero
 402b694:	308cb03a 	or	r6,r6,r2
 402b698:	344d883a 	add	r6,r6,r17
 402b69c:	3463803a 	cmpltu	r17,r6,r17
 402b6a0:	414b883a 	add	r5,r8,r5
 402b6a4:	2c4b883a 	add	r5,r5,r17
 402b6a8:	3023883a 	mov	r17,r6
 402b6ac:	2880202c 	andhi	r2,r5,128
 402b6b0:	10002726 	beq	r2,zero,402b750 <__adddf3+0x32c>
 402b6b4:	84000044 	addi	r16,r16,1
 402b6b8:	0081ffc4 	movi	r2,2047
 402b6bc:	8080ae26 	beq	r16,r2,402b978 <__adddf3+0x554>
 402b6c0:	00bfe034 	movhi	r2,65408
 402b6c4:	10bfffc4 	addi	r2,r2,-1
 402b6c8:	288a703a 	and	r5,r5,r2
 402b6cc:	880cd07a 	srli	r6,r17,1
 402b6d0:	280897fa 	slli	r4,r5,31
 402b6d4:	88c0004c 	andi	r3,r17,1
 402b6d8:	30e2b03a 	or	r17,r6,r3
 402b6dc:	280ad07a 	srli	r5,r5,1
 402b6e0:	8922b03a 	or	r17,r17,r4
 402b6e4:	003f6e06 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402b6e8:	1148b03a 	or	r4,r2,r5
 402b6ec:	20003c26 	beq	r4,zero,402b7e0 <__adddf3+0x3bc>
 402b6f0:	29000234 	orhi	r4,r5,8
 402b6f4:	01400434 	movhi	r5,16
 402b6f8:	297fffc4 	addi	r5,r5,-1
 402b6fc:	2148703a 	and	r4,r4,r5
 402b700:	003f7f06 	br	402b500 <__flash_rwdata_start+0xffffac3c>
 402b704:	18ffffc4 	addi	r3,r3,-1
 402b708:	18004d1e 	bne	r3,zero,402b840 <__adddf3+0x41c>
 402b70c:	898dc83a 	sub	r6,r17,r6
 402b710:	89a3803a 	cmpltu	r17,r17,r6
 402b714:	2a0bc83a 	sub	r5,r5,r8
 402b718:	2c4bc83a 	sub	r5,r5,r17
 402b71c:	3023883a 	mov	r17,r6
 402b720:	003f9c06 	br	402b594 <__flash_rwdata_start+0xffffacd0>
 402b724:	4184b03a 	or	r2,r8,r6
 402b728:	103f5d26 	beq	r2,zero,402b4a0 <__flash_rwdata_start+0xffffabdc>
 402b72c:	213fffc4 	addi	r4,r4,-1
 402b730:	203fd926 	beq	r4,zero,402b698 <__flash_rwdata_start+0xffffadd4>
 402b734:	0081ffc4 	movi	r2,2047
 402b738:	80bfca1e 	bne	r16,r2,402b664 <__flash_rwdata_start+0xffffada0>
 402b73c:	003f5806 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402b740:	10c8b03a 	or	r4,r2,r3
 402b744:	20008b26 	beq	r4,zero,402b974 <__adddf3+0x550>
 402b748:	100b883a 	mov	r5,r2
 402b74c:	1823883a 	mov	r17,r3
 402b750:	888001cc 	andi	r2,r17,7
 402b754:	103f541e 	bne	r2,zero,402b4a8 <__flash_rwdata_start+0xffffabe4>
 402b758:	9007883a 	mov	r3,r18
 402b75c:	003fb006 	br	402b620 <__flash_rwdata_start+0xffffad5c>
 402b760:	1800531e 	bne	r3,zero,402b8b0 <__adddf3+0x48c>
 402b764:	80800044 	addi	r2,r16,1
 402b768:	1081ffcc 	andi	r2,r2,2047
 402b76c:	00c00044 	movi	r3,1
 402b770:	1880990e 	bge	r3,r2,402b9d8 <__adddf3+0x5b4>
 402b774:	8985c83a 	sub	r2,r17,r6
 402b778:	8887803a 	cmpltu	r3,r17,r2
 402b77c:	2a27c83a 	sub	r19,r5,r8
 402b780:	98e7c83a 	sub	r19,r19,r3
 402b784:	98c0202c 	andhi	r3,r19,128
 402b788:	18006226 	beq	r3,zero,402b914 <__adddf3+0x4f0>
 402b78c:	3463c83a 	sub	r17,r6,r17
 402b790:	4151c83a 	sub	r8,r8,r5
 402b794:	344d803a 	cmpltu	r6,r6,r17
 402b798:	41a7c83a 	sub	r19,r8,r6
 402b79c:	3825883a 	mov	r18,r7
 402b7a0:	983f821e 	bne	r19,zero,402b5ac <__flash_rwdata_start+0xfffface8>
 402b7a4:	8809883a 	mov	r4,r17
 402b7a8:	402dbbc0 	call	402dbbc <__clzsi2>
 402b7ac:	10800804 	addi	r2,r2,32
 402b7b0:	10fffe04 	addi	r3,r2,-8
 402b7b4:	010007c4 	movi	r4,31
 402b7b8:	20ff810e 	bge	r4,r3,402b5c0 <__flash_rwdata_start+0xffffacfc>
 402b7bc:	14fff604 	addi	r19,r2,-40
 402b7c0:	8ce6983a 	sll	r19,r17,r19
 402b7c4:	0023883a 	mov	r17,zero
 402b7c8:	1c3f840e 	bge	r3,r16,402b5dc <__flash_rwdata_start+0xffffad18>
 402b7cc:	017fe034 	movhi	r5,65408
 402b7d0:	297fffc4 	addi	r5,r5,-1
 402b7d4:	80e1c83a 	sub	r16,r16,r3
 402b7d8:	994a703a 	and	r5,r19,r5
 402b7dc:	003f3006 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402b7e0:	0009883a 	mov	r4,zero
 402b7e4:	0005883a 	mov	r2,zero
 402b7e8:	003f4506 	br	402b500 <__flash_rwdata_start+0xffffac3c>
 402b7ec:	418cb03a 	or	r6,r8,r6
 402b7f0:	300cc03a 	cmpne	r6,r6,zero
 402b7f4:	0007883a 	mov	r3,zero
 402b7f8:	003f6106 	br	402b580 <__flash_rwdata_start+0xffffacbc>
 402b7fc:	2000921e 	bne	r4,zero,402ba48 <__adddf3+0x624>
 402b800:	80800044 	addi	r2,r16,1
 402b804:	11c1ffcc 	andi	r7,r2,2047
 402b808:	01000044 	movi	r4,1
 402b80c:	21c0610e 	bge	r4,r7,402b994 <__adddf3+0x570>
 402b810:	0101ffc4 	movi	r4,2047
 402b814:	1100a326 	beq	r2,r4,402baa4 <__adddf3+0x680>
 402b818:	344d883a 	add	r6,r6,r17
 402b81c:	3463803a 	cmpltu	r17,r6,r17
 402b820:	414b883a 	add	r5,r8,r5
 402b824:	2c4b883a 	add	r5,r5,r17
 402b828:	282297fa 	slli	r17,r5,31
 402b82c:	300cd07a 	srli	r6,r6,1
 402b830:	280ad07a 	srli	r5,r5,1
 402b834:	1021883a 	mov	r16,r2
 402b838:	89a2b03a 	or	r17,r17,r6
 402b83c:	003f1806 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402b840:	0081ffc4 	movi	r2,2047
 402b844:	80bf411e 	bne	r16,r2,402b54c <__flash_rwdata_start+0xffffac88>
 402b848:	003f1506 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402b84c:	80bff844 	addi	r2,r16,-31
 402b850:	00c00804 	movi	r3,32
 402b854:	9884d83a 	srl	r2,r19,r2
 402b858:	28c04a26 	beq	r5,r3,402b984 <__adddf3+0x560>
 402b85c:	00c00fc4 	movi	r3,63
 402b860:	1c21c83a 	sub	r16,r3,r16
 402b864:	9c26983a 	sll	r19,r19,r16
 402b868:	9c62b03a 	or	r17,r19,r17
 402b86c:	8822c03a 	cmpne	r17,r17,zero
 402b870:	88a2b03a 	or	r17,r17,r2
 402b874:	000b883a 	mov	r5,zero
 402b878:	0021883a 	mov	r16,zero
 402b87c:	003fb406 	br	402b750 <__flash_rwdata_start+0xffffae8c>
 402b880:	18bff804 	addi	r2,r3,-32
 402b884:	01000804 	movi	r4,32
 402b888:	4084d83a 	srl	r2,r8,r2
 402b88c:	19003f26 	beq	r3,r4,402b98c <__adddf3+0x568>
 402b890:	01001004 	movi	r4,64
 402b894:	20c7c83a 	sub	r3,r4,r3
 402b898:	40d0983a 	sll	r8,r8,r3
 402b89c:	418cb03a 	or	r6,r8,r6
 402b8a0:	300cc03a 	cmpne	r6,r6,zero
 402b8a4:	308cb03a 	or	r6,r6,r2
 402b8a8:	0007883a 	mov	r3,zero
 402b8ac:	003f3406 	br	402b580 <__flash_rwdata_start+0xffffacbc>
 402b8b0:	80002326 	beq	r16,zero,402b940 <__adddf3+0x51c>
 402b8b4:	0101ffc4 	movi	r4,2047
 402b8b8:	11005e26 	beq	r2,r4,402ba34 <__adddf3+0x610>
 402b8bc:	00c7c83a 	sub	r3,zero,r3
 402b8c0:	29402034 	orhi	r5,r5,128
 402b8c4:	01000e04 	movi	r4,56
 402b8c8:	20c07216 	blt	r4,r3,402ba94 <__adddf3+0x670>
 402b8cc:	010007c4 	movi	r4,31
 402b8d0:	20c0ce16 	blt	r4,r3,402bc0c <__adddf3+0x7e8>
 402b8d4:	01000804 	movi	r4,32
 402b8d8:	20c9c83a 	sub	r4,r4,r3
 402b8dc:	2914983a 	sll	r10,r5,r4
 402b8e0:	88d2d83a 	srl	r9,r17,r3
 402b8e4:	8908983a 	sll	r4,r17,r4
 402b8e8:	28c6d83a 	srl	r3,r5,r3
 402b8ec:	5262b03a 	or	r17,r10,r9
 402b8f0:	2008c03a 	cmpne	r4,r4,zero
 402b8f4:	8922b03a 	or	r17,r17,r4
 402b8f8:	3463c83a 	sub	r17,r6,r17
 402b8fc:	40c7c83a 	sub	r3,r8,r3
 402b900:	344d803a 	cmpltu	r6,r6,r17
 402b904:	198bc83a 	sub	r5,r3,r6
 402b908:	1021883a 	mov	r16,r2
 402b90c:	3825883a 	mov	r18,r7
 402b910:	003f2006 	br	402b594 <__flash_rwdata_start+0xffffacd0>
 402b914:	9886b03a 	or	r3,r19,r2
 402b918:	1800141e 	bne	r3,zero,402b96c <__adddf3+0x548>
 402b91c:	0007883a 	mov	r3,zero
 402b920:	000b883a 	mov	r5,zero
 402b924:	0023883a 	mov	r17,zero
 402b928:	0021883a 	mov	r16,zero
 402b92c:	003f3c06 	br	402b620 <__flash_rwdata_start+0xffffad5c>
 402b930:	418cb03a 	or	r6,r8,r6
 402b934:	300cc03a 	cmpne	r6,r6,zero
 402b938:	0011883a 	mov	r8,zero
 402b93c:	003f5606 	br	402b698 <__flash_rwdata_start+0xffffadd4>
 402b940:	2c48b03a 	or	r4,r5,r17
 402b944:	20003b26 	beq	r4,zero,402ba34 <__adddf3+0x610>
 402b948:	00c6303a 	nor	r3,zero,r3
 402b94c:	1800371e 	bne	r3,zero,402ba2c <__adddf3+0x608>
 402b950:	3463c83a 	sub	r17,r6,r17
 402b954:	414bc83a 	sub	r5,r8,r5
 402b958:	344d803a 	cmpltu	r6,r6,r17
 402b95c:	298bc83a 	sub	r5,r5,r6
 402b960:	1021883a 	mov	r16,r2
 402b964:	3825883a 	mov	r18,r7
 402b968:	003f0a06 	br	402b594 <__flash_rwdata_start+0xffffacd0>
 402b96c:	1023883a 	mov	r17,r2
 402b970:	003f0d06 	br	402b5a8 <__flash_rwdata_start+0xfffface4>
 402b974:	0007883a 	mov	r3,zero
 402b978:	000b883a 	mov	r5,zero
 402b97c:	0023883a 	mov	r17,zero
 402b980:	003f2706 	br	402b620 <__flash_rwdata_start+0xffffad5c>
 402b984:	0027883a 	mov	r19,zero
 402b988:	003fb706 	br	402b868 <__flash_rwdata_start+0xffffafa4>
 402b98c:	0011883a 	mov	r8,zero
 402b990:	003fc206 	br	402b89c <__flash_rwdata_start+0xffffafd8>
 402b994:	2c44b03a 	or	r2,r5,r17
 402b998:	8000871e 	bne	r16,zero,402bbb8 <__adddf3+0x794>
 402b99c:	1000b126 	beq	r2,zero,402bc64 <__adddf3+0x840>
 402b9a0:	4184b03a 	or	r2,r8,r6
 402b9a4:	103ebe26 	beq	r2,zero,402b4a0 <__flash_rwdata_start+0xffffabdc>
 402b9a8:	3445883a 	add	r2,r6,r17
 402b9ac:	1463803a 	cmpltu	r17,r2,r17
 402b9b0:	414b883a 	add	r5,r8,r5
 402b9b4:	2c4b883a 	add	r5,r5,r17
 402b9b8:	28c0202c 	andhi	r3,r5,128
 402b9bc:	1023883a 	mov	r17,r2
 402b9c0:	183f6326 	beq	r3,zero,402b750 <__flash_rwdata_start+0xffffae8c>
 402b9c4:	00bfe034 	movhi	r2,65408
 402b9c8:	10bfffc4 	addi	r2,r2,-1
 402b9cc:	2021883a 	mov	r16,r4
 402b9d0:	288a703a 	and	r5,r5,r2
 402b9d4:	003eb206 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402b9d8:	2c44b03a 	or	r2,r5,r17
 402b9dc:	8000251e 	bne	r16,zero,402ba74 <__adddf3+0x650>
 402b9e0:	10004b1e 	bne	r2,zero,402bb10 <__adddf3+0x6ec>
 402b9e4:	4184b03a 	or	r2,r8,r6
 402b9e8:	103fe226 	beq	r2,zero,402b974 <__flash_rwdata_start+0xffffb0b0>
 402b9ec:	400b883a 	mov	r5,r8
 402b9f0:	3023883a 	mov	r17,r6
 402b9f4:	3825883a 	mov	r18,r7
 402b9f8:	003ea906 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402b9fc:	20bff804 	addi	r2,r4,-32
 402ba00:	01c00804 	movi	r7,32
 402ba04:	4084d83a 	srl	r2,r8,r2
 402ba08:	21c07e26 	beq	r4,r7,402bc04 <__adddf3+0x7e0>
 402ba0c:	01c01004 	movi	r7,64
 402ba10:	3909c83a 	sub	r4,r7,r4
 402ba14:	4110983a 	sll	r8,r8,r4
 402ba18:	418cb03a 	or	r6,r8,r6
 402ba1c:	300cc03a 	cmpne	r6,r6,zero
 402ba20:	308cb03a 	or	r6,r6,r2
 402ba24:	0011883a 	mov	r8,zero
 402ba28:	003f1b06 	br	402b698 <__flash_rwdata_start+0xffffadd4>
 402ba2c:	0101ffc4 	movi	r4,2047
 402ba30:	113fa41e 	bne	r2,r4,402b8c4 <__flash_rwdata_start+0xffffb000>
 402ba34:	400b883a 	mov	r5,r8
 402ba38:	3023883a 	mov	r17,r6
 402ba3c:	1021883a 	mov	r16,r2
 402ba40:	3825883a 	mov	r18,r7
 402ba44:	003e9606 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402ba48:	80001a1e 	bne	r16,zero,402bab4 <__adddf3+0x690>
 402ba4c:	2c4eb03a 	or	r7,r5,r17
 402ba50:	38005526 	beq	r7,zero,402bba8 <__adddf3+0x784>
 402ba54:	0108303a 	nor	r4,zero,r4
 402ba58:	2000511e 	bne	r4,zero,402bba0 <__adddf3+0x77c>
 402ba5c:	89a3883a 	add	r17,r17,r6
 402ba60:	414b883a 	add	r5,r8,r5
 402ba64:	898d803a 	cmpltu	r6,r17,r6
 402ba68:	298b883a 	add	r5,r5,r6
 402ba6c:	1021883a 	mov	r16,r2
 402ba70:	003f0e06 	br	402b6ac <__flash_rwdata_start+0xffffade8>
 402ba74:	1000341e 	bne	r2,zero,402bb48 <__adddf3+0x724>
 402ba78:	4184b03a 	or	r2,r8,r6
 402ba7c:	10006f26 	beq	r2,zero,402bc3c <__adddf3+0x818>
 402ba80:	400b883a 	mov	r5,r8
 402ba84:	3023883a 	mov	r17,r6
 402ba88:	3825883a 	mov	r18,r7
 402ba8c:	0401ffc4 	movi	r16,2047
 402ba90:	003e8306 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402ba94:	2c62b03a 	or	r17,r5,r17
 402ba98:	8822c03a 	cmpne	r17,r17,zero
 402ba9c:	0007883a 	mov	r3,zero
 402baa0:	003f9506 	br	402b8f8 <__flash_rwdata_start+0xffffb034>
 402baa4:	1021883a 	mov	r16,r2
 402baa8:	000b883a 	mov	r5,zero
 402baac:	0023883a 	mov	r17,zero
 402bab0:	003edb06 	br	402b620 <__flash_rwdata_start+0xffffad5c>
 402bab4:	01c1ffc4 	movi	r7,2047
 402bab8:	11c03b26 	beq	r2,r7,402bba8 <__adddf3+0x784>
 402babc:	0109c83a 	sub	r4,zero,r4
 402bac0:	29402034 	orhi	r5,r5,128
 402bac4:	01c00e04 	movi	r7,56
 402bac8:	39006216 	blt	r7,r4,402bc54 <__adddf3+0x830>
 402bacc:	01c007c4 	movi	r7,31
 402bad0:	39006b16 	blt	r7,r4,402bc80 <__adddf3+0x85c>
 402bad4:	01c00804 	movi	r7,32
 402bad8:	390fc83a 	sub	r7,r7,r4
 402badc:	29d4983a 	sll	r10,r5,r7
 402bae0:	8912d83a 	srl	r9,r17,r4
 402bae4:	89ce983a 	sll	r7,r17,r7
 402bae8:	2908d83a 	srl	r4,r5,r4
 402baec:	5262b03a 	or	r17,r10,r9
 402baf0:	380ac03a 	cmpne	r5,r7,zero
 402baf4:	8962b03a 	or	r17,r17,r5
 402baf8:	89a3883a 	add	r17,r17,r6
 402bafc:	2211883a 	add	r8,r4,r8
 402bb00:	898d803a 	cmpltu	r6,r17,r6
 402bb04:	418b883a 	add	r5,r8,r6
 402bb08:	1021883a 	mov	r16,r2
 402bb0c:	003ee706 	br	402b6ac <__flash_rwdata_start+0xffffade8>
 402bb10:	4184b03a 	or	r2,r8,r6
 402bb14:	103e6226 	beq	r2,zero,402b4a0 <__flash_rwdata_start+0xffffabdc>
 402bb18:	8987c83a 	sub	r3,r17,r6
 402bb1c:	88c9803a 	cmpltu	r4,r17,r3
 402bb20:	2a05c83a 	sub	r2,r5,r8
 402bb24:	1105c83a 	sub	r2,r2,r4
 402bb28:	1100202c 	andhi	r4,r2,128
 402bb2c:	203f0426 	beq	r4,zero,402b740 <__flash_rwdata_start+0xffffae7c>
 402bb30:	3463c83a 	sub	r17,r6,r17
 402bb34:	414bc83a 	sub	r5,r8,r5
 402bb38:	344d803a 	cmpltu	r6,r6,r17
 402bb3c:	298bc83a 	sub	r5,r5,r6
 402bb40:	3825883a 	mov	r18,r7
 402bb44:	003e5606 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402bb48:	4184b03a 	or	r2,r8,r6
 402bb4c:	10002b26 	beq	r2,zero,402bbfc <__adddf3+0x7d8>
 402bb50:	2804d0fa 	srli	r2,r5,3
 402bb54:	8822d0fa 	srli	r17,r17,3
 402bb58:	280a977a 	slli	r5,r5,29
 402bb5c:	10c0022c 	andhi	r3,r2,8
 402bb60:	2c62b03a 	or	r17,r5,r17
 402bb64:	18000826 	beq	r3,zero,402bb88 <__adddf3+0x764>
 402bb68:	4008d0fa 	srli	r4,r8,3
 402bb6c:	20c0022c 	andhi	r3,r4,8
 402bb70:	1800051e 	bne	r3,zero,402bb88 <__adddf3+0x764>
 402bb74:	300cd0fa 	srli	r6,r6,3
 402bb78:	4010977a 	slli	r8,r8,29
 402bb7c:	2005883a 	mov	r2,r4
 402bb80:	3825883a 	mov	r18,r7
 402bb84:	41a2b03a 	or	r17,r8,r6
 402bb88:	880ad77a 	srli	r5,r17,29
 402bb8c:	100490fa 	slli	r2,r2,3
 402bb90:	882290fa 	slli	r17,r17,3
 402bb94:	0401ffc4 	movi	r16,2047
 402bb98:	288ab03a 	or	r5,r5,r2
 402bb9c:	003e4006 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402bba0:	01c1ffc4 	movi	r7,2047
 402bba4:	11ffc71e 	bne	r2,r7,402bac4 <__flash_rwdata_start+0xffffb200>
 402bba8:	400b883a 	mov	r5,r8
 402bbac:	3023883a 	mov	r17,r6
 402bbb0:	1021883a 	mov	r16,r2
 402bbb4:	003e3a06 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402bbb8:	10002d26 	beq	r2,zero,402bc70 <__adddf3+0x84c>
 402bbbc:	4184b03a 	or	r2,r8,r6
 402bbc0:	10000e26 	beq	r2,zero,402bbfc <__adddf3+0x7d8>
 402bbc4:	2804d0fa 	srli	r2,r5,3
 402bbc8:	8822d0fa 	srli	r17,r17,3
 402bbcc:	280a977a 	slli	r5,r5,29
 402bbd0:	10c0022c 	andhi	r3,r2,8
 402bbd4:	2c62b03a 	or	r17,r5,r17
 402bbd8:	183feb26 	beq	r3,zero,402bb88 <__flash_rwdata_start+0xffffb2c4>
 402bbdc:	4008d0fa 	srli	r4,r8,3
 402bbe0:	20c0022c 	andhi	r3,r4,8
 402bbe4:	183fe81e 	bne	r3,zero,402bb88 <__flash_rwdata_start+0xffffb2c4>
 402bbe8:	300cd0fa 	srli	r6,r6,3
 402bbec:	4010977a 	slli	r8,r8,29
 402bbf0:	2005883a 	mov	r2,r4
 402bbf4:	41a2b03a 	or	r17,r8,r6
 402bbf8:	003fe306 	br	402bb88 <__flash_rwdata_start+0xffffb2c4>
 402bbfc:	0401ffc4 	movi	r16,2047
 402bc00:	003e2706 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402bc04:	0011883a 	mov	r8,zero
 402bc08:	003f8306 	br	402ba18 <__flash_rwdata_start+0xffffb154>
 402bc0c:	193ff804 	addi	r4,r3,-32
 402bc10:	02400804 	movi	r9,32
 402bc14:	2908d83a 	srl	r4,r5,r4
 402bc18:	1a402526 	beq	r3,r9,402bcb0 <__adddf3+0x88c>
 402bc1c:	02401004 	movi	r9,64
 402bc20:	48c7c83a 	sub	r3,r9,r3
 402bc24:	28ca983a 	sll	r5,r5,r3
 402bc28:	2c62b03a 	or	r17,r5,r17
 402bc2c:	8822c03a 	cmpne	r17,r17,zero
 402bc30:	8922b03a 	or	r17,r17,r4
 402bc34:	0007883a 	mov	r3,zero
 402bc38:	003f2f06 	br	402b8f8 <__flash_rwdata_start+0xffffb034>
 402bc3c:	01402034 	movhi	r5,128
 402bc40:	0007883a 	mov	r3,zero
 402bc44:	297fffc4 	addi	r5,r5,-1
 402bc48:	047ffe04 	movi	r17,-8
 402bc4c:	0401ffc4 	movi	r16,2047
 402bc50:	003e7306 	br	402b620 <__flash_rwdata_start+0xffffad5c>
 402bc54:	2c62b03a 	or	r17,r5,r17
 402bc58:	8822c03a 	cmpne	r17,r17,zero
 402bc5c:	0009883a 	mov	r4,zero
 402bc60:	003fa506 	br	402baf8 <__flash_rwdata_start+0xffffb234>
 402bc64:	400b883a 	mov	r5,r8
 402bc68:	3023883a 	mov	r17,r6
 402bc6c:	003e0c06 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402bc70:	400b883a 	mov	r5,r8
 402bc74:	3023883a 	mov	r17,r6
 402bc78:	0401ffc4 	movi	r16,2047
 402bc7c:	003e0806 	br	402b4a0 <__flash_rwdata_start+0xffffabdc>
 402bc80:	21fff804 	addi	r7,r4,-32
 402bc84:	02400804 	movi	r9,32
 402bc88:	29ced83a 	srl	r7,r5,r7
 402bc8c:	22400a26 	beq	r4,r9,402bcb8 <__adddf3+0x894>
 402bc90:	02401004 	movi	r9,64
 402bc94:	4909c83a 	sub	r4,r9,r4
 402bc98:	290a983a 	sll	r5,r5,r4
 402bc9c:	2c62b03a 	or	r17,r5,r17
 402bca0:	8822c03a 	cmpne	r17,r17,zero
 402bca4:	89e2b03a 	or	r17,r17,r7
 402bca8:	0009883a 	mov	r4,zero
 402bcac:	003f9206 	br	402baf8 <__flash_rwdata_start+0xffffb234>
 402bcb0:	000b883a 	mov	r5,zero
 402bcb4:	003fdc06 	br	402bc28 <__flash_rwdata_start+0xffffb364>
 402bcb8:	000b883a 	mov	r5,zero
 402bcbc:	003ff706 	br	402bc9c <__flash_rwdata_start+0xffffb3d8>

0402bcc0 <__divdf3>:
 402bcc0:	defff004 	addi	sp,sp,-64
 402bcc4:	dc800815 	stw	r18,32(sp)
 402bcc8:	2824d53a 	srli	r18,r5,20
 402bccc:	dd800c15 	stw	r22,48(sp)
 402bcd0:	282cd7fa 	srli	r22,r5,31
 402bcd4:	dc000615 	stw	r16,24(sp)
 402bcd8:	04000434 	movhi	r16,16
 402bcdc:	df000e15 	stw	fp,56(sp)
 402bce0:	dd000a15 	stw	r20,40(sp)
 402bce4:	dcc00915 	stw	r19,36(sp)
 402bce8:	dc400715 	stw	r17,28(sp)
 402bcec:	843fffc4 	addi	r16,r16,-1
 402bcf0:	dfc00f15 	stw	ra,60(sp)
 402bcf4:	ddc00d15 	stw	r23,52(sp)
 402bcf8:	dd400b15 	stw	r21,44(sp)
 402bcfc:	9481ffcc 	andi	r18,r18,2047
 402bd00:	2029883a 	mov	r20,r4
 402bd04:	2027883a 	mov	r19,r4
 402bd08:	2c22703a 	and	r17,r5,r16
 402bd0c:	b7003fcc 	andi	fp,r22,255
 402bd10:	90005e26 	beq	r18,zero,402be8c <__divdf3+0x1cc>
 402bd14:	0081ffc4 	movi	r2,2047
 402bd18:	90803526 	beq	r18,r2,402bdf0 <__divdf3+0x130>
 402bd1c:	8c000434 	orhi	r16,r17,16
 402bd20:	2004d77a 	srli	r2,r4,29
 402bd24:	802090fa 	slli	r16,r16,3
 402bd28:	202690fa 	slli	r19,r4,3
 402bd2c:	94bf0044 	addi	r18,r18,-1023
 402bd30:	80a2b03a 	or	r17,r16,r2
 402bd34:	0029883a 	mov	r20,zero
 402bd38:	0011883a 	mov	r8,zero
 402bd3c:	380ad53a 	srli	r5,r7,20
 402bd40:	382ed7fa 	srli	r23,r7,31
 402bd44:	04000434 	movhi	r16,16
 402bd48:	843fffc4 	addi	r16,r16,-1
 402bd4c:	2941ffcc 	andi	r5,r5,2047
 402bd50:	302b883a 	mov	r21,r6
 402bd54:	3c20703a 	and	r16,r7,r16
 402bd58:	ba403fcc 	andi	r9,r23,255
 402bd5c:	28006726 	beq	r5,zero,402befc <__divdf3+0x23c>
 402bd60:	0081ffc4 	movi	r2,2047
 402bd64:	28805f26 	beq	r5,r2,402bee4 <__divdf3+0x224>
 402bd68:	84000434 	orhi	r16,r16,16
 402bd6c:	3004d77a 	srli	r2,r6,29
 402bd70:	802090fa 	slli	r16,r16,3
 402bd74:	302a90fa 	slli	r21,r6,3
 402bd78:	297f0044 	addi	r5,r5,-1023
 402bd7c:	80a0b03a 	or	r16,r16,r2
 402bd80:	000f883a 	mov	r7,zero
 402bd84:	3d06b03a 	or	r3,r7,r20
 402bd88:	180690ba 	slli	r3,r3,2
 402bd8c:	008100f4 	movhi	r2,1027
 402bd90:	10af6c04 	addi	r2,r2,-16976
 402bd94:	1885883a 	add	r2,r3,r2
 402bd98:	10800017 	ldw	r2,0(r2)
 402bd9c:	b5c8f03a 	xor	r4,r22,r23
 402bda0:	200d883a 	mov	r6,r4
 402bda4:	25003fcc 	andi	r20,r4,255
 402bda8:	9165c83a 	sub	r18,r18,r5
 402bdac:	1000683a 	jmp	r2
 402bdb0:	0402bff8 	rdprs	r16,zero,2815
 402bdb4:	0402be28 	cmpgeui	r16,zero,2808
 402bdb8:	0402bfbc 	xorhi	r16,zero,2814
 402bdbc:	0402be0c 	andi	r16,zero,2808
 402bdc0:	0402bfbc 	xorhi	r16,zero,2814
 402bdc4:	0402bf90 	cmplti	r16,zero,2814
 402bdc8:	0402bfbc 	xorhi	r16,zero,2814
 402bdcc:	0402be0c 	andi	r16,zero,2808
 402bdd0:	0402be28 	cmpgeui	r16,zero,2808
 402bdd4:	0402be28 	cmpgeui	r16,zero,2808
 402bdd8:	0402bf90 	cmplti	r16,zero,2814
 402bddc:	0402be0c 	andi	r16,zero,2808
 402bde0:	0402be1c 	xori	r16,zero,2808
 402bde4:	0402be1c 	xori	r16,zero,2808
 402bde8:	0402be1c 	xori	r16,zero,2808
 402bdec:	0402bfcc 	andi	r16,zero,2815
 402bdf0:	8904b03a 	or	r2,r17,r4
 402bdf4:	1000631e 	bne	r2,zero,402bf84 <__divdf3+0x2c4>
 402bdf8:	05000204 	movi	r20,8
 402bdfc:	0023883a 	mov	r17,zero
 402be00:	0027883a 	mov	r19,zero
 402be04:	02000084 	movi	r8,2
 402be08:	003fcc06 	br	402bd3c <__flash_rwdata_start+0xffffb478>
 402be0c:	8023883a 	mov	r17,r16
 402be10:	a827883a 	mov	r19,r21
 402be14:	4839883a 	mov	fp,r9
 402be18:	3811883a 	mov	r8,r7
 402be1c:	00800084 	movi	r2,2
 402be20:	4081531e 	bne	r8,r2,402c370 <__divdf3+0x6b0>
 402be24:	e029883a 	mov	r20,fp
 402be28:	a180004c 	andi	r6,r20,1
 402be2c:	0201ffc4 	movi	r8,2047
 402be30:	000b883a 	mov	r5,zero
 402be34:	0027883a 	mov	r19,zero
 402be38:	4010953a 	slli	r8,r8,20
 402be3c:	30c03fcc 	andi	r3,r6,255
 402be40:	04000434 	movhi	r16,16
 402be44:	180697fa 	slli	r3,r3,31
 402be48:	843fffc4 	addi	r16,r16,-1
 402be4c:	2c20703a 	and	r16,r5,r16
 402be50:	8220b03a 	or	r16,r16,r8
 402be54:	80c6b03a 	or	r3,r16,r3
 402be58:	9805883a 	mov	r2,r19
 402be5c:	dfc00f17 	ldw	ra,60(sp)
 402be60:	df000e17 	ldw	fp,56(sp)
 402be64:	ddc00d17 	ldw	r23,52(sp)
 402be68:	dd800c17 	ldw	r22,48(sp)
 402be6c:	dd400b17 	ldw	r21,44(sp)
 402be70:	dd000a17 	ldw	r20,40(sp)
 402be74:	dcc00917 	ldw	r19,36(sp)
 402be78:	dc800817 	ldw	r18,32(sp)
 402be7c:	dc400717 	ldw	r17,28(sp)
 402be80:	dc000617 	ldw	r16,24(sp)
 402be84:	dec01004 	addi	sp,sp,64
 402be88:	f800283a 	ret
 402be8c:	8904b03a 	or	r2,r17,r4
 402be90:	10003726 	beq	r2,zero,402bf70 <__divdf3+0x2b0>
 402be94:	88014d26 	beq	r17,zero,402c3cc <__divdf3+0x70c>
 402be98:	8809883a 	mov	r4,r17
 402be9c:	d9800215 	stw	r6,8(sp)
 402bea0:	d9c00515 	stw	r7,20(sp)
 402bea4:	402dbbc0 	call	402dbbc <__clzsi2>
 402bea8:	d9800217 	ldw	r6,8(sp)
 402beac:	d9c00517 	ldw	r7,20(sp)
 402beb0:	1007883a 	mov	r3,r2
 402beb4:	01000a04 	movi	r4,40
 402beb8:	1cfffe04 	addi	r19,r3,-8
 402bebc:	20c9c83a 	sub	r4,r4,r3
 402bec0:	8cca983a 	sll	r5,r17,r19
 402bec4:	a108d83a 	srl	r4,r20,r4
 402bec8:	a4e6983a 	sll	r19,r20,r19
 402becc:	2162b03a 	or	r17,r4,r5
 402bed0:	04bf0344 	movi	r18,-1011
 402bed4:	90e5c83a 	sub	r18,r18,r3
 402bed8:	0029883a 	mov	r20,zero
 402bedc:	0011883a 	mov	r8,zero
 402bee0:	003f9606 	br	402bd3c <__flash_rwdata_start+0xffffb478>
 402bee4:	8184b03a 	or	r2,r16,r6
 402bee8:	10001f1e 	bne	r2,zero,402bf68 <__divdf3+0x2a8>
 402beec:	0021883a 	mov	r16,zero
 402bef0:	002b883a 	mov	r21,zero
 402bef4:	01c00084 	movi	r7,2
 402bef8:	003fa206 	br	402bd84 <__flash_rwdata_start+0xffffb4c0>
 402befc:	8184b03a 	or	r2,r16,r6
 402bf00:	10001526 	beq	r2,zero,402bf58 <__divdf3+0x298>
 402bf04:	80013d26 	beq	r16,zero,402c3fc <__divdf3+0x73c>
 402bf08:	8009883a 	mov	r4,r16
 402bf0c:	d9800215 	stw	r6,8(sp)
 402bf10:	da000315 	stw	r8,12(sp)
 402bf14:	da400415 	stw	r9,16(sp)
 402bf18:	402dbbc0 	call	402dbbc <__clzsi2>
 402bf1c:	d9800217 	ldw	r6,8(sp)
 402bf20:	da000317 	ldw	r8,12(sp)
 402bf24:	da400417 	ldw	r9,16(sp)
 402bf28:	1007883a 	mov	r3,r2
 402bf2c:	01000a04 	movi	r4,40
 402bf30:	1d7ffe04 	addi	r21,r3,-8
 402bf34:	20c9c83a 	sub	r4,r4,r3
 402bf38:	8560983a 	sll	r16,r16,r21
 402bf3c:	3108d83a 	srl	r4,r6,r4
 402bf40:	356a983a 	sll	r21,r6,r21
 402bf44:	2420b03a 	or	r16,r4,r16
 402bf48:	017f0344 	movi	r5,-1011
 402bf4c:	28cbc83a 	sub	r5,r5,r3
 402bf50:	000f883a 	mov	r7,zero
 402bf54:	003f8b06 	br	402bd84 <__flash_rwdata_start+0xffffb4c0>
 402bf58:	0021883a 	mov	r16,zero
 402bf5c:	002b883a 	mov	r21,zero
 402bf60:	01c00044 	movi	r7,1
 402bf64:	003f8706 	br	402bd84 <__flash_rwdata_start+0xffffb4c0>
 402bf68:	01c000c4 	movi	r7,3
 402bf6c:	003f8506 	br	402bd84 <__flash_rwdata_start+0xffffb4c0>
 402bf70:	05000104 	movi	r20,4
 402bf74:	0023883a 	mov	r17,zero
 402bf78:	0027883a 	mov	r19,zero
 402bf7c:	02000044 	movi	r8,1
 402bf80:	003f6e06 	br	402bd3c <__flash_rwdata_start+0xffffb478>
 402bf84:	05000304 	movi	r20,12
 402bf88:	020000c4 	movi	r8,3
 402bf8c:	003f6b06 	br	402bd3c <__flash_rwdata_start+0xffffb478>
 402bf90:	01400434 	movhi	r5,16
 402bf94:	000d883a 	mov	r6,zero
 402bf98:	297fffc4 	addi	r5,r5,-1
 402bf9c:	04ffffc4 	movi	r19,-1
 402bfa0:	0201ffc4 	movi	r8,2047
 402bfa4:	003fa406 	br	402be38 <__flash_rwdata_start+0xffffb574>
 402bfa8:	043f0084 	movi	r16,-1022
 402bfac:	84a1c83a 	sub	r16,r16,r18
 402bfb0:	00800e04 	movi	r2,56
 402bfb4:	14014d0e 	bge	r2,r16,402c4ec <__divdf3+0x82c>
 402bfb8:	a180004c 	andi	r6,r20,1
 402bfbc:	0011883a 	mov	r8,zero
 402bfc0:	000b883a 	mov	r5,zero
 402bfc4:	0027883a 	mov	r19,zero
 402bfc8:	003f9b06 	br	402be38 <__flash_rwdata_start+0xffffb574>
 402bfcc:	8880022c 	andhi	r2,r17,8
 402bfd0:	1000f026 	beq	r2,zero,402c394 <__divdf3+0x6d4>
 402bfd4:	8080022c 	andhi	r2,r16,8
 402bfd8:	1000ee1e 	bne	r2,zero,402c394 <__divdf3+0x6d4>
 402bfdc:	00800434 	movhi	r2,16
 402bfe0:	81400234 	orhi	r5,r16,8
 402bfe4:	10bfffc4 	addi	r2,r2,-1
 402bfe8:	b80d883a 	mov	r6,r23
 402bfec:	288a703a 	and	r5,r5,r2
 402bff0:	a827883a 	mov	r19,r21
 402bff4:	003fea06 	br	402bfa0 <__flash_rwdata_start+0xffffb6dc>
 402bff8:	84411c36 	bltu	r16,r17,402c46c <__divdf3+0x7ac>
 402bffc:	8c011a26 	beq	r17,r16,402c468 <__divdf3+0x7a8>
 402c000:	94bfffc4 	addi	r18,r18,-1
 402c004:	dcc00015 	stw	r19,0(sp)
 402c008:	8811883a 	mov	r8,r17
 402c00c:	002d883a 	mov	r22,zero
 402c010:	a80cd63a 	srli	r6,r21,24
 402c014:	8020923a 	slli	r16,r16,8
 402c018:	a82a923a 	slli	r21,r21,8
 402c01c:	4009883a 	mov	r4,r8
 402c020:	342eb03a 	or	r23,r6,r16
 402c024:	dd400115 	stw	r21,4(sp)
 402c028:	b82ad43a 	srli	r21,r23,16
 402c02c:	da000315 	stw	r8,12(sp)
 402c030:	bcffffcc 	andi	r19,r23,65535
 402c034:	a80b883a 	mov	r5,r21
 402c038:	40210fc0 	call	40210fc <__udivsi3>
 402c03c:	1009883a 	mov	r4,r2
 402c040:	980b883a 	mov	r5,r19
 402c044:	1023883a 	mov	r17,r2
 402c048:	402110c0 	call	402110c <__mulsi3>
 402c04c:	da000317 	ldw	r8,12(sp)
 402c050:	a80b883a 	mov	r5,r21
 402c054:	1039883a 	mov	fp,r2
 402c058:	4009883a 	mov	r4,r8
 402c05c:	40211040 	call	4021104 <__umodsi3>
 402c060:	d8c00017 	ldw	r3,0(sp)
 402c064:	1004943a 	slli	r2,r2,16
 402c068:	1810d43a 	srli	r8,r3,16
 402c06c:	120eb03a 	or	r7,r2,r8
 402c070:	3f00062e 	bgeu	r7,fp,402c08c <__divdf3+0x3cc>
 402c074:	3dcf883a 	add	r7,r7,r23
 402c078:	88bfffc4 	addi	r2,r17,-1
 402c07c:	3dc10a36 	bltu	r7,r23,402c4a8 <__divdf3+0x7e8>
 402c080:	3f01092e 	bgeu	r7,fp,402c4a8 <__divdf3+0x7e8>
 402c084:	8c7fff84 	addi	r17,r17,-2
 402c088:	3dcf883a 	add	r7,r7,r23
 402c08c:	3f39c83a 	sub	fp,r7,fp
 402c090:	e009883a 	mov	r4,fp
 402c094:	a80b883a 	mov	r5,r21
 402c098:	40210fc0 	call	40210fc <__udivsi3>
 402c09c:	1009883a 	mov	r4,r2
 402c0a0:	980b883a 	mov	r5,r19
 402c0a4:	1021883a 	mov	r16,r2
 402c0a8:	402110c0 	call	402110c <__mulsi3>
 402c0ac:	e009883a 	mov	r4,fp
 402c0b0:	a80b883a 	mov	r5,r21
 402c0b4:	d8800315 	stw	r2,12(sp)
 402c0b8:	40211040 	call	4021104 <__umodsi3>
 402c0bc:	d9000017 	ldw	r4,0(sp)
 402c0c0:	1004943a 	slli	r2,r2,16
 402c0c4:	da000317 	ldw	r8,12(sp)
 402c0c8:	20ffffcc 	andi	r3,r4,65535
 402c0cc:	10ceb03a 	or	r7,r2,r3
 402c0d0:	3a00062e 	bgeu	r7,r8,402c0ec <__divdf3+0x42c>
 402c0d4:	3dcf883a 	add	r7,r7,r23
 402c0d8:	80bfffc4 	addi	r2,r16,-1
 402c0dc:	3dc0f036 	bltu	r7,r23,402c4a0 <__divdf3+0x7e0>
 402c0e0:	3a00ef2e 	bgeu	r7,r8,402c4a0 <__divdf3+0x7e0>
 402c0e4:	843fff84 	addi	r16,r16,-2
 402c0e8:	3dcf883a 	add	r7,r7,r23
 402c0ec:	d8c00117 	ldw	r3,4(sp)
 402c0f0:	8822943a 	slli	r17,r17,16
 402c0f4:	3a0fc83a 	sub	r7,r7,r8
 402c0f8:	1806d43a 	srli	r3,r3,16
 402c0fc:	8462b03a 	or	r17,r16,r17
 402c100:	8affffcc 	andi	r11,r17,65535
 402c104:	d8c00015 	stw	r3,0(sp)
 402c108:	d8c00117 	ldw	r3,4(sp)
 402c10c:	8820d43a 	srli	r16,r17,16
 402c110:	5809883a 	mov	r4,r11
 402c114:	1f3fffcc 	andi	fp,r3,65535
 402c118:	e00b883a 	mov	r5,fp
 402c11c:	d9c00515 	stw	r7,20(sp)
 402c120:	dac00215 	stw	r11,8(sp)
 402c124:	402110c0 	call	402110c <__mulsi3>
 402c128:	8009883a 	mov	r4,r16
 402c12c:	e00b883a 	mov	r5,fp
 402c130:	d8800415 	stw	r2,16(sp)
 402c134:	402110c0 	call	402110c <__mulsi3>
 402c138:	d9400017 	ldw	r5,0(sp)
 402c13c:	8009883a 	mov	r4,r16
 402c140:	d8800315 	stw	r2,12(sp)
 402c144:	402110c0 	call	402110c <__mulsi3>
 402c148:	dac00217 	ldw	r11,8(sp)
 402c14c:	d9400017 	ldw	r5,0(sp)
 402c150:	d8800215 	stw	r2,8(sp)
 402c154:	5809883a 	mov	r4,r11
 402c158:	402110c0 	call	402110c <__mulsi3>
 402c15c:	da400417 	ldw	r9,16(sp)
 402c160:	da800317 	ldw	r10,12(sp)
 402c164:	d9c00517 	ldw	r7,20(sp)
 402c168:	480ad43a 	srli	r5,r9,16
 402c16c:	5085883a 	add	r2,r10,r2
 402c170:	db000217 	ldw	r12,8(sp)
 402c174:	1151883a 	add	r8,r2,r5
 402c178:	4280022e 	bgeu	r8,r10,402c184 <__divdf3+0x4c4>
 402c17c:	00800074 	movhi	r2,1
 402c180:	6099883a 	add	r12,r12,r2
 402c184:	400ad43a 	srli	r5,r8,16
 402c188:	4010943a 	slli	r8,r8,16
 402c18c:	4c3fffcc 	andi	r16,r9,65535
 402c190:	6149883a 	add	r4,r12,r5
 402c194:	4411883a 	add	r8,r8,r16
 402c198:	3900a736 	bltu	r7,r4,402c438 <__divdf3+0x778>
 402c19c:	3900c426 	beq	r7,r4,402c4b0 <__divdf3+0x7f0>
 402c1a0:	3909c83a 	sub	r4,r7,r4
 402c1a4:	b221c83a 	sub	r16,r22,r8
 402c1a8:	b42d803a 	cmpltu	r22,r22,r16
 402c1ac:	25adc83a 	sub	r22,r4,r22
 402c1b0:	b5c0c626 	beq	r22,r23,402c4cc <__divdf3+0x80c>
 402c1b4:	b009883a 	mov	r4,r22
 402c1b8:	a80b883a 	mov	r5,r21
 402c1bc:	40210fc0 	call	40210fc <__udivsi3>
 402c1c0:	1009883a 	mov	r4,r2
 402c1c4:	980b883a 	mov	r5,r19
 402c1c8:	d8800315 	stw	r2,12(sp)
 402c1cc:	402110c0 	call	402110c <__mulsi3>
 402c1d0:	a80b883a 	mov	r5,r21
 402c1d4:	b009883a 	mov	r4,r22
 402c1d8:	d8800415 	stw	r2,16(sp)
 402c1dc:	40211040 	call	4021104 <__umodsi3>
 402c1e0:	1004943a 	slli	r2,r2,16
 402c1e4:	800ed43a 	srli	r7,r16,16
 402c1e8:	da400417 	ldw	r9,16(sp)
 402c1ec:	da000317 	ldw	r8,12(sp)
 402c1f0:	11cab03a 	or	r5,r2,r7
 402c1f4:	2a40062e 	bgeu	r5,r9,402c210 <__divdf3+0x550>
 402c1f8:	2dcb883a 	add	r5,r5,r23
 402c1fc:	40bfffc4 	addi	r2,r8,-1
 402c200:	2dc0b436 	bltu	r5,r23,402c4d4 <__divdf3+0x814>
 402c204:	2a40b32e 	bgeu	r5,r9,402c4d4 <__divdf3+0x814>
 402c208:	423fff84 	addi	r8,r8,-2
 402c20c:	2dcb883a 	add	r5,r5,r23
 402c210:	2a6dc83a 	sub	r22,r5,r9
 402c214:	b009883a 	mov	r4,r22
 402c218:	a80b883a 	mov	r5,r21
 402c21c:	da000315 	stw	r8,12(sp)
 402c220:	40210fc0 	call	40210fc <__udivsi3>
 402c224:	980b883a 	mov	r5,r19
 402c228:	1009883a 	mov	r4,r2
 402c22c:	d8800415 	stw	r2,16(sp)
 402c230:	402110c0 	call	402110c <__mulsi3>
 402c234:	b009883a 	mov	r4,r22
 402c238:	a80b883a 	mov	r5,r21
 402c23c:	1027883a 	mov	r19,r2
 402c240:	40211040 	call	4021104 <__umodsi3>
 402c244:	1004943a 	slli	r2,r2,16
 402c248:	843fffcc 	andi	r16,r16,65535
 402c24c:	da000317 	ldw	r8,12(sp)
 402c250:	140eb03a 	or	r7,r2,r16
 402c254:	da400417 	ldw	r9,16(sp)
 402c258:	3cc0062e 	bgeu	r7,r19,402c274 <__divdf3+0x5b4>
 402c25c:	3dcf883a 	add	r7,r7,r23
 402c260:	48bfffc4 	addi	r2,r9,-1
 402c264:	3dc09d36 	bltu	r7,r23,402c4dc <__divdf3+0x81c>
 402c268:	3cc09c2e 	bgeu	r7,r19,402c4dc <__divdf3+0x81c>
 402c26c:	4a7fff84 	addi	r9,r9,-2
 402c270:	3dcf883a 	add	r7,r7,r23
 402c274:	4010943a 	slli	r8,r8,16
 402c278:	3cebc83a 	sub	r21,r7,r19
 402c27c:	e00b883a 	mov	r5,fp
 402c280:	4a26b03a 	or	r19,r9,r8
 402c284:	99ffffcc 	andi	r7,r19,65535
 402c288:	9820d43a 	srli	r16,r19,16
 402c28c:	3809883a 	mov	r4,r7
 402c290:	d9c00515 	stw	r7,20(sp)
 402c294:	402110c0 	call	402110c <__mulsi3>
 402c298:	8009883a 	mov	r4,r16
 402c29c:	e00b883a 	mov	r5,fp
 402c2a0:	102d883a 	mov	r22,r2
 402c2a4:	402110c0 	call	402110c <__mulsi3>
 402c2a8:	d9400017 	ldw	r5,0(sp)
 402c2ac:	8009883a 	mov	r4,r16
 402c2b0:	1039883a 	mov	fp,r2
 402c2b4:	402110c0 	call	402110c <__mulsi3>
 402c2b8:	d9c00517 	ldw	r7,20(sp)
 402c2bc:	d9400017 	ldw	r5,0(sp)
 402c2c0:	1021883a 	mov	r16,r2
 402c2c4:	3809883a 	mov	r4,r7
 402c2c8:	402110c0 	call	402110c <__mulsi3>
 402c2cc:	b008d43a 	srli	r4,r22,16
 402c2d0:	e085883a 	add	r2,fp,r2
 402c2d4:	1109883a 	add	r4,r2,r4
 402c2d8:	2700022e 	bgeu	r4,fp,402c2e4 <__divdf3+0x624>
 402c2dc:	00800074 	movhi	r2,1
 402c2e0:	80a1883a 	add	r16,r16,r2
 402c2e4:	200ad43a 	srli	r5,r4,16
 402c2e8:	2008943a 	slli	r4,r4,16
 402c2ec:	b5bfffcc 	andi	r22,r22,65535
 402c2f0:	8145883a 	add	r2,r16,r5
 402c2f4:	2589883a 	add	r4,r4,r22
 402c2f8:	a8802c36 	bltu	r21,r2,402c3ac <__divdf3+0x6ec>
 402c2fc:	a880a426 	beq	r21,r2,402c590 <__divdf3+0x8d0>
 402c300:	9cc00054 	ori	r19,r19,1
 402c304:	9200ffc4 	addi	r8,r18,1023
 402c308:	023f270e 	bge	zero,r8,402bfa8 <__flash_rwdata_start+0xffffb6e4>
 402c30c:	988001cc 	andi	r2,r19,7
 402c310:	10000726 	beq	r2,zero,402c330 <__divdf3+0x670>
 402c314:	990003cc 	andi	r4,r19,15
 402c318:	00800104 	movi	r2,4
 402c31c:	20800426 	beq	r4,r2,402c330 <__divdf3+0x670>
 402c320:	9885883a 	add	r2,r19,r2
 402c324:	14e7803a 	cmpltu	r19,r2,r19
 402c328:	8ce3883a 	add	r17,r17,r19
 402c32c:	1027883a 	mov	r19,r2
 402c330:	8880402c 	andhi	r2,r17,256
 402c334:	10000426 	beq	r2,zero,402c348 <__divdf3+0x688>
 402c338:	00bfc034 	movhi	r2,65280
 402c33c:	10bfffc4 	addi	r2,r2,-1
 402c340:	92010004 	addi	r8,r18,1024
 402c344:	88a2703a 	and	r17,r17,r2
 402c348:	0081ff84 	movi	r2,2046
 402c34c:	123eb616 	blt	r2,r8,402be28 <__flash_rwdata_start+0xffffb564>
 402c350:	9826d0fa 	srli	r19,r19,3
 402c354:	8804977a 	slli	r2,r17,29
 402c358:	8820927a 	slli	r16,r17,9
 402c35c:	4201ffcc 	andi	r8,r8,2047
 402c360:	14e6b03a 	or	r19,r2,r19
 402c364:	800ad33a 	srli	r5,r16,12
 402c368:	a180004c 	andi	r6,r20,1
 402c36c:	003eb206 	br	402be38 <__flash_rwdata_start+0xffffb574>
 402c370:	008000c4 	movi	r2,3
 402c374:	4080ac26 	beq	r8,r2,402c628 <__divdf3+0x968>
 402c378:	00800044 	movi	r2,1
 402c37c:	4080591e 	bne	r8,r2,402c4e4 <__divdf3+0x824>
 402c380:	e00d883a 	mov	r6,fp
 402c384:	0011883a 	mov	r8,zero
 402c388:	000b883a 	mov	r5,zero
 402c38c:	0027883a 	mov	r19,zero
 402c390:	003ea906 	br	402be38 <__flash_rwdata_start+0xffffb574>
 402c394:	00800434 	movhi	r2,16
 402c398:	89400234 	orhi	r5,r17,8
 402c39c:	10bfffc4 	addi	r2,r2,-1
 402c3a0:	b00d883a 	mov	r6,r22
 402c3a4:	288a703a 	and	r5,r5,r2
 402c3a8:	003efd06 	br	402bfa0 <__flash_rwdata_start+0xffffb6dc>
 402c3ac:	adcf883a 	add	r7,r21,r23
 402c3b0:	997fffc4 	addi	r5,r19,-1
 402c3b4:	3dc0412e 	bgeu	r7,r23,402c4bc <__divdf3+0x7fc>
 402c3b8:	2827883a 	mov	r19,r5
 402c3bc:	38bfd01e 	bne	r7,r2,402c300 <__flash_rwdata_start+0xffffba3c>
 402c3c0:	d8c00117 	ldw	r3,4(sp)
 402c3c4:	193fce1e 	bne	r3,r4,402c300 <__flash_rwdata_start+0xffffba3c>
 402c3c8:	003fce06 	br	402c304 <__flash_rwdata_start+0xffffba40>
 402c3cc:	d9800215 	stw	r6,8(sp)
 402c3d0:	d9c00515 	stw	r7,20(sp)
 402c3d4:	402dbbc0 	call	402dbbc <__clzsi2>
 402c3d8:	10c00804 	addi	r3,r2,32
 402c3dc:	010009c4 	movi	r4,39
 402c3e0:	d9800217 	ldw	r6,8(sp)
 402c3e4:	d9c00517 	ldw	r7,20(sp)
 402c3e8:	20feb20e 	bge	r4,r3,402beb4 <__flash_rwdata_start+0xffffb5f0>
 402c3ec:	117ffe04 	addi	r5,r2,-8
 402c3f0:	a162983a 	sll	r17,r20,r5
 402c3f4:	0027883a 	mov	r19,zero
 402c3f8:	003eb506 	br	402bed0 <__flash_rwdata_start+0xffffb60c>
 402c3fc:	3009883a 	mov	r4,r6
 402c400:	d9800215 	stw	r6,8(sp)
 402c404:	da000315 	stw	r8,12(sp)
 402c408:	da400415 	stw	r9,16(sp)
 402c40c:	402dbbc0 	call	402dbbc <__clzsi2>
 402c410:	10c00804 	addi	r3,r2,32
 402c414:	010009c4 	movi	r4,39
 402c418:	d9800217 	ldw	r6,8(sp)
 402c41c:	da000317 	ldw	r8,12(sp)
 402c420:	da400417 	ldw	r9,16(sp)
 402c424:	20fec10e 	bge	r4,r3,402bf2c <__flash_rwdata_start+0xffffb668>
 402c428:	10bffe04 	addi	r2,r2,-8
 402c42c:	a8a0983a 	sll	r16,r21,r2
 402c430:	002b883a 	mov	r21,zero
 402c434:	003ec406 	br	402bf48 <__flash_rwdata_start+0xffffb684>
 402c438:	d8c00117 	ldw	r3,4(sp)
 402c43c:	b0ed883a 	add	r22,r22,r3
 402c440:	b0c5803a 	cmpltu	r2,r22,r3
 402c444:	15c5883a 	add	r2,r2,r23
 402c448:	11cf883a 	add	r7,r2,r7
 402c44c:	88bfffc4 	addi	r2,r17,-1
 402c450:	b9c00d2e 	bgeu	r23,r7,402c488 <__divdf3+0x7c8>
 402c454:	39003f36 	bltu	r7,r4,402c554 <__divdf3+0x894>
 402c458:	21c06a26 	beq	r4,r7,402c604 <__divdf3+0x944>
 402c45c:	3909c83a 	sub	r4,r7,r4
 402c460:	1023883a 	mov	r17,r2
 402c464:	003f4f06 	br	402c1a4 <__flash_rwdata_start+0xffffb8e0>
 402c468:	9d7ee536 	bltu	r19,r21,402c000 <__flash_rwdata_start+0xffffb73c>
 402c46c:	982ed07a 	srli	r23,r19,1
 402c470:	880497fa 	slli	r2,r17,31
 402c474:	8810d07a 	srli	r8,r17,1
 402c478:	982c97fa 	slli	r22,r19,31
 402c47c:	b884b03a 	or	r2,r23,r2
 402c480:	d8800015 	stw	r2,0(sp)
 402c484:	003ee206 	br	402c010 <__flash_rwdata_start+0xffffb74c>
 402c488:	3dfff41e 	bne	r7,r23,402c45c <__flash_rwdata_start+0xffffbb98>
 402c48c:	d8c00117 	ldw	r3,4(sp)
 402c490:	b0fff02e 	bgeu	r22,r3,402c454 <__flash_rwdata_start+0xffffbb90>
 402c494:	b909c83a 	sub	r4,r23,r4
 402c498:	1023883a 	mov	r17,r2
 402c49c:	003f4106 	br	402c1a4 <__flash_rwdata_start+0xffffb8e0>
 402c4a0:	1021883a 	mov	r16,r2
 402c4a4:	003f1106 	br	402c0ec <__flash_rwdata_start+0xffffb828>
 402c4a8:	1023883a 	mov	r17,r2
 402c4ac:	003ef706 	br	402c08c <__flash_rwdata_start+0xffffb7c8>
 402c4b0:	b23fe136 	bltu	r22,r8,402c438 <__flash_rwdata_start+0xffffbb74>
 402c4b4:	0009883a 	mov	r4,zero
 402c4b8:	003f3a06 	br	402c1a4 <__flash_rwdata_start+0xffffb8e0>
 402c4bc:	38802c36 	bltu	r7,r2,402c570 <__divdf3+0x8b0>
 402c4c0:	11c05326 	beq	r2,r7,402c610 <__divdf3+0x950>
 402c4c4:	2827883a 	mov	r19,r5
 402c4c8:	003f8d06 	br	402c300 <__flash_rwdata_start+0xffffba3c>
 402c4cc:	04ffffc4 	movi	r19,-1
 402c4d0:	003f8c06 	br	402c304 <__flash_rwdata_start+0xffffba40>
 402c4d4:	1011883a 	mov	r8,r2
 402c4d8:	003f4d06 	br	402c210 <__flash_rwdata_start+0xffffb94c>
 402c4dc:	1013883a 	mov	r9,r2
 402c4e0:	003f6406 	br	402c274 <__flash_rwdata_start+0xffffb9b0>
 402c4e4:	e029883a 	mov	r20,fp
 402c4e8:	003f8606 	br	402c304 <__flash_rwdata_start+0xffffba40>
 402c4ec:	008007c4 	movi	r2,31
 402c4f0:	14002a16 	blt	r2,r16,402c59c <__divdf3+0x8dc>
 402c4f4:	91410784 	addi	r5,r18,1054
 402c4f8:	9c0cd83a 	srl	r6,r19,r16
 402c4fc:	8948983a 	sll	r4,r17,r5
 402c500:	9944983a 	sll	r2,r19,r5
 402c504:	8c20d83a 	srl	r16,r17,r16
 402c508:	3108b03a 	or	r4,r6,r4
 402c50c:	1004c03a 	cmpne	r2,r2,zero
 402c510:	2084b03a 	or	r2,r4,r2
 402c514:	110001cc 	andi	r4,r2,7
 402c518:	20000726 	beq	r4,zero,402c538 <__divdf3+0x878>
 402c51c:	114003cc 	andi	r5,r2,15
 402c520:	01000104 	movi	r4,4
 402c524:	29000426 	beq	r5,r4,402c538 <__divdf3+0x878>
 402c528:	11000104 	addi	r4,r2,4
 402c52c:	2085803a 	cmpltu	r2,r4,r2
 402c530:	80a1883a 	add	r16,r16,r2
 402c534:	2005883a 	mov	r2,r4
 402c538:	8100202c 	andhi	r4,r16,128
 402c53c:	20002d26 	beq	r4,zero,402c5f4 <__divdf3+0x934>
 402c540:	a180004c 	andi	r6,r20,1
 402c544:	02000044 	movi	r8,1
 402c548:	000b883a 	mov	r5,zero
 402c54c:	0027883a 	mov	r19,zero
 402c550:	003e3906 	br	402be38 <__flash_rwdata_start+0xffffb574>
 402c554:	d8c00117 	ldw	r3,4(sp)
 402c558:	8c7fff84 	addi	r17,r17,-2
 402c55c:	b0ed883a 	add	r22,r22,r3
 402c560:	b0c5803a 	cmpltu	r2,r22,r3
 402c564:	15c5883a 	add	r2,r2,r23
 402c568:	11cf883a 	add	r7,r2,r7
 402c56c:	003f0c06 	br	402c1a0 <__flash_rwdata_start+0xffffb8dc>
 402c570:	d8c00117 	ldw	r3,4(sp)
 402c574:	997fff84 	addi	r5,r19,-2
 402c578:	18d1883a 	add	r8,r3,r3
 402c57c:	40c7803a 	cmpltu	r3,r8,r3
 402c580:	1dcd883a 	add	r6,r3,r23
 402c584:	398f883a 	add	r7,r7,r6
 402c588:	da000115 	stw	r8,4(sp)
 402c58c:	003f8a06 	br	402c3b8 <__flash_rwdata_start+0xffffbaf4>
 402c590:	203f861e 	bne	r4,zero,402c3ac <__flash_rwdata_start+0xffffbae8>
 402c594:	d8000115 	stw	zero,4(sp)
 402c598:	003f8906 	br	402c3c0 <__flash_rwdata_start+0xffffbafc>
 402c59c:	00bef884 	movi	r2,-1054
 402c5a0:	1485c83a 	sub	r2,r2,r18
 402c5a4:	01000804 	movi	r4,32
 402c5a8:	8884d83a 	srl	r2,r17,r2
 402c5ac:	81001c26 	beq	r16,r4,402c620 <__divdf3+0x960>
 402c5b0:	91010f84 	addi	r4,r18,1086
 402c5b4:	8908983a 	sll	r4,r17,r4
 402c5b8:	24c8b03a 	or	r4,r4,r19
 402c5bc:	2008c03a 	cmpne	r4,r4,zero
 402c5c0:	2084b03a 	or	r2,r4,r2
 402c5c4:	140001cc 	andi	r16,r2,7
 402c5c8:	8000061e 	bne	r16,zero,402c5e4 <__divdf3+0x924>
 402c5cc:	000b883a 	mov	r5,zero
 402c5d0:	1004d0fa 	srli	r2,r2,3
 402c5d4:	a180004c 	andi	r6,r20,1
 402c5d8:	0011883a 	mov	r8,zero
 402c5dc:	1426b03a 	or	r19,r2,r16
 402c5e0:	003e1506 	br	402be38 <__flash_rwdata_start+0xffffb574>
 402c5e4:	114003cc 	andi	r5,r2,15
 402c5e8:	01000104 	movi	r4,4
 402c5ec:	0021883a 	mov	r16,zero
 402c5f0:	293fcd1e 	bne	r5,r4,402c528 <__flash_rwdata_start+0xffffbc64>
 402c5f4:	800a927a 	slli	r5,r16,9
 402c5f8:	8020977a 	slli	r16,r16,29
 402c5fc:	280ad33a 	srli	r5,r5,12
 402c600:	003ff306 	br	402c5d0 <__flash_rwdata_start+0xffffbd0c>
 402c604:	b23fd336 	bltu	r22,r8,402c554 <__flash_rwdata_start+0xffffbc90>
 402c608:	1023883a 	mov	r17,r2
 402c60c:	003fa906 	br	402c4b4 <__flash_rwdata_start+0xffffbbf0>
 402c610:	d8c00117 	ldw	r3,4(sp)
 402c614:	193fd636 	bltu	r3,r4,402c570 <__flash_rwdata_start+0xffffbcac>
 402c618:	2827883a 	mov	r19,r5
 402c61c:	003f6806 	br	402c3c0 <__flash_rwdata_start+0xffffbafc>
 402c620:	0009883a 	mov	r4,zero
 402c624:	003fe406 	br	402c5b8 <__flash_rwdata_start+0xffffbcf4>
 402c628:	00800434 	movhi	r2,16
 402c62c:	89400234 	orhi	r5,r17,8
 402c630:	10bfffc4 	addi	r2,r2,-1
 402c634:	e00d883a 	mov	r6,fp
 402c638:	288a703a 	and	r5,r5,r2
 402c63c:	003e5806 	br	402bfa0 <__flash_rwdata_start+0xffffb6dc>

0402c640 <__eqdf2>:
 402c640:	2804d53a 	srli	r2,r5,20
 402c644:	3806d53a 	srli	r3,r7,20
 402c648:	02000434 	movhi	r8,16
 402c64c:	423fffc4 	addi	r8,r8,-1
 402c650:	1081ffcc 	andi	r2,r2,2047
 402c654:	0241ffc4 	movi	r9,2047
 402c658:	2a14703a 	and	r10,r5,r8
 402c65c:	18c1ffcc 	andi	r3,r3,2047
 402c660:	3a10703a 	and	r8,r7,r8
 402c664:	280ad7fa 	srli	r5,r5,31
 402c668:	380ed7fa 	srli	r7,r7,31
 402c66c:	12400f26 	beq	r2,r9,402c6ac <__eqdf2+0x6c>
 402c670:	0241ffc4 	movi	r9,2047
 402c674:	1a400326 	beq	r3,r9,402c684 <__eqdf2+0x44>
 402c678:	10c00526 	beq	r2,r3,402c690 <__eqdf2+0x50>
 402c67c:	00800044 	movi	r2,1
 402c680:	f800283a 	ret
 402c684:	4192b03a 	or	r9,r8,r6
 402c688:	483ffc1e 	bne	r9,zero,402c67c <__flash_rwdata_start+0xffffbdb8>
 402c68c:	10fffb1e 	bne	r2,r3,402c67c <__flash_rwdata_start+0xffffbdb8>
 402c690:	523ffa1e 	bne	r10,r8,402c67c <__flash_rwdata_start+0xffffbdb8>
 402c694:	21bff91e 	bne	r4,r6,402c67c <__flash_rwdata_start+0xffffbdb8>
 402c698:	29c00826 	beq	r5,r7,402c6bc <__eqdf2+0x7c>
 402c69c:	103ff71e 	bne	r2,zero,402c67c <__flash_rwdata_start+0xffffbdb8>
 402c6a0:	5104b03a 	or	r2,r10,r4
 402c6a4:	1004c03a 	cmpne	r2,r2,zero
 402c6a8:	f800283a 	ret
 402c6ac:	5112b03a 	or	r9,r10,r4
 402c6b0:	483fef26 	beq	r9,zero,402c670 <__flash_rwdata_start+0xffffbdac>
 402c6b4:	00800044 	movi	r2,1
 402c6b8:	f800283a 	ret
 402c6bc:	0005883a 	mov	r2,zero
 402c6c0:	f800283a 	ret

0402c6c4 <__gedf2>:
 402c6c4:	2804d53a 	srli	r2,r5,20
 402c6c8:	3806d53a 	srli	r3,r7,20
 402c6cc:	02000434 	movhi	r8,16
 402c6d0:	423fffc4 	addi	r8,r8,-1
 402c6d4:	0241ffc4 	movi	r9,2047
 402c6d8:	1081ffcc 	andi	r2,r2,2047
 402c6dc:	2a14703a 	and	r10,r5,r8
 402c6e0:	1a46703a 	and	r3,r3,r9
 402c6e4:	3a10703a 	and	r8,r7,r8
 402c6e8:	280ad7fa 	srli	r5,r5,31
 402c6ec:	380ed7fa 	srli	r7,r7,31
 402c6f0:	12400b26 	beq	r2,r9,402c720 <__gedf2+0x5c>
 402c6f4:	1a401626 	beq	r3,r9,402c750 <__gedf2+0x8c>
 402c6f8:	10000c1e 	bne	r2,zero,402c72c <__gedf2+0x68>
 402c6fc:	5112b03a 	or	r9,r10,r4
 402c700:	4813003a 	cmpeq	r9,r9,zero
 402c704:	4817883a 	mov	r11,r9
 402c708:	18000c1e 	bne	r3,zero,402c73c <__gedf2+0x78>
 402c70c:	4198b03a 	or	r12,r8,r6
 402c710:	60000a1e 	bne	r12,zero,402c73c <__gedf2+0x78>
 402c714:	48001326 	beq	r9,zero,402c764 <__gedf2+0xa0>
 402c718:	0005883a 	mov	r2,zero
 402c71c:	f800283a 	ret
 402c720:	5112b03a 	or	r9,r10,r4
 402c724:	4800191e 	bne	r9,zero,402c78c <__gedf2+0xc8>
 402c728:	18800926 	beq	r3,r2,402c750 <__gedf2+0x8c>
 402c72c:	18000b1e 	bne	r3,zero,402c75c <__gedf2+0x98>
 402c730:	4192b03a 	or	r9,r8,r6
 402c734:	0017883a 	mov	r11,zero
 402c738:	48000a26 	beq	r9,zero,402c764 <__gedf2+0xa0>
 402c73c:	39c03fcc 	andi	r7,r7,255
 402c740:	58000726 	beq	r11,zero,402c760 <__gedf2+0x9c>
 402c744:	3800081e 	bne	r7,zero,402c768 <__gedf2+0xa4>
 402c748:	00bfffc4 	movi	r2,-1
 402c74c:	f800283a 	ret
 402c750:	4192b03a 	or	r9,r8,r6
 402c754:	48000d1e 	bne	r9,zero,402c78c <__gedf2+0xc8>
 402c758:	103fe826 	beq	r2,zero,402c6fc <__flash_rwdata_start+0xffffbe38>
 402c75c:	39c03fcc 	andi	r7,r7,255
 402c760:	29c00326 	beq	r5,r7,402c770 <__gedf2+0xac>
 402c764:	283ff81e 	bne	r5,zero,402c748 <__flash_rwdata_start+0xffffbe84>
 402c768:	00800044 	movi	r2,1
 402c76c:	f800283a 	ret
 402c770:	18bffc16 	blt	r3,r2,402c764 <__flash_rwdata_start+0xffffbea0>
 402c774:	10c00316 	blt	r2,r3,402c784 <__gedf2+0xc0>
 402c778:	42bffa36 	bltu	r8,r10,402c764 <__flash_rwdata_start+0xffffbea0>
 402c77c:	52000526 	beq	r10,r8,402c794 <__gedf2+0xd0>
 402c780:	523fe52e 	bgeu	r10,r8,402c718 <__flash_rwdata_start+0xffffbe54>
 402c784:	283ff026 	beq	r5,zero,402c748 <__flash_rwdata_start+0xffffbe84>
 402c788:	003ff706 	br	402c768 <__flash_rwdata_start+0xffffbea4>
 402c78c:	00bfff84 	movi	r2,-2
 402c790:	f800283a 	ret
 402c794:	313ff336 	bltu	r6,r4,402c764 <__flash_rwdata_start+0xffffbea0>
 402c798:	21bfdf2e 	bgeu	r4,r6,402c718 <__flash_rwdata_start+0xffffbe54>
 402c79c:	283fea26 	beq	r5,zero,402c748 <__flash_rwdata_start+0xffffbe84>
 402c7a0:	003ff106 	br	402c768 <__flash_rwdata_start+0xffffbea4>

0402c7a4 <__ledf2>:
 402c7a4:	2804d53a 	srli	r2,r5,20
 402c7a8:	3810d53a 	srli	r8,r7,20
 402c7ac:	00c00434 	movhi	r3,16
 402c7b0:	18ffffc4 	addi	r3,r3,-1
 402c7b4:	0241ffc4 	movi	r9,2047
 402c7b8:	1081ffcc 	andi	r2,r2,2047
 402c7bc:	28d4703a 	and	r10,r5,r3
 402c7c0:	4250703a 	and	r8,r8,r9
 402c7c4:	38c6703a 	and	r3,r7,r3
 402c7c8:	280ad7fa 	srli	r5,r5,31
 402c7cc:	380ed7fa 	srli	r7,r7,31
 402c7d0:	12400b26 	beq	r2,r9,402c800 <__ledf2+0x5c>
 402c7d4:	42401926 	beq	r8,r9,402c83c <__ledf2+0x98>
 402c7d8:	10000c1e 	bne	r2,zero,402c80c <__ledf2+0x68>
 402c7dc:	5112b03a 	or	r9,r10,r4
 402c7e0:	4813003a 	cmpeq	r9,r9,zero
 402c7e4:	4817883a 	mov	r11,r9
 402c7e8:	40000f26 	beq	r8,zero,402c828 <__ledf2+0x84>
 402c7ec:	39c03fcc 	andi	r7,r7,255
 402c7f0:	58001826 	beq	r11,zero,402c854 <__ledf2+0xb0>
 402c7f4:	38000a1e 	bne	r7,zero,402c820 <__ledf2+0x7c>
 402c7f8:	00bfffc4 	movi	r2,-1
 402c7fc:	f800283a 	ret
 402c800:	5112b03a 	or	r9,r10,r4
 402c804:	48000f1e 	bne	r9,zero,402c844 <__ledf2+0xa0>
 402c808:	40800c26 	beq	r8,r2,402c83c <__ledf2+0x98>
 402c80c:	4000101e 	bne	r8,zero,402c850 <__ledf2+0xac>
 402c810:	1992b03a 	or	r9,r3,r6
 402c814:	0017883a 	mov	r11,zero
 402c818:	483ff41e 	bne	r9,zero,402c7ec <__flash_rwdata_start+0xffffbf28>
 402c81c:	283ff61e 	bne	r5,zero,402c7f8 <__flash_rwdata_start+0xffffbf34>
 402c820:	00800044 	movi	r2,1
 402c824:	f800283a 	ret
 402c828:	1998b03a 	or	r12,r3,r6
 402c82c:	603fef1e 	bne	r12,zero,402c7ec <__flash_rwdata_start+0xffffbf28>
 402c830:	483ffa26 	beq	r9,zero,402c81c <__flash_rwdata_start+0xffffbf58>
 402c834:	0005883a 	mov	r2,zero
 402c838:	f800283a 	ret
 402c83c:	1992b03a 	or	r9,r3,r6
 402c840:	48000226 	beq	r9,zero,402c84c <__ledf2+0xa8>
 402c844:	00800084 	movi	r2,2
 402c848:	f800283a 	ret
 402c84c:	103fe326 	beq	r2,zero,402c7dc <__flash_rwdata_start+0xffffbf18>
 402c850:	39c03fcc 	andi	r7,r7,255
 402c854:	29fff11e 	bne	r5,r7,402c81c <__flash_rwdata_start+0xffffbf58>
 402c858:	40bff016 	blt	r8,r2,402c81c <__flash_rwdata_start+0xffffbf58>
 402c85c:	12000316 	blt	r2,r8,402c86c <__ledf2+0xc8>
 402c860:	1abfee36 	bltu	r3,r10,402c81c <__flash_rwdata_start+0xffffbf58>
 402c864:	50c00326 	beq	r10,r3,402c874 <__ledf2+0xd0>
 402c868:	50fff22e 	bgeu	r10,r3,402c834 <__flash_rwdata_start+0xffffbf70>
 402c86c:	283fe226 	beq	r5,zero,402c7f8 <__flash_rwdata_start+0xffffbf34>
 402c870:	003feb06 	br	402c820 <__flash_rwdata_start+0xffffbf5c>
 402c874:	313fe936 	bltu	r6,r4,402c81c <__flash_rwdata_start+0xffffbf58>
 402c878:	21bfee2e 	bgeu	r4,r6,402c834 <__flash_rwdata_start+0xffffbf70>
 402c87c:	283fde26 	beq	r5,zero,402c7f8 <__flash_rwdata_start+0xffffbf34>
 402c880:	003fe706 	br	402c820 <__flash_rwdata_start+0xffffbf5c>

0402c884 <__muldf3>:
 402c884:	deffee04 	addi	sp,sp,-72
 402c888:	dd000c15 	stw	r20,48(sp)
 402c88c:	2828d53a 	srli	r20,r5,20
 402c890:	dd400d15 	stw	r21,52(sp)
 402c894:	282ad7fa 	srli	r21,r5,31
 402c898:	dc000815 	stw	r16,32(sp)
 402c89c:	04000434 	movhi	r16,16
 402c8a0:	ddc00f15 	stw	r23,60(sp)
 402c8a4:	dcc00b15 	stw	r19,44(sp)
 402c8a8:	dc800a15 	stw	r18,40(sp)
 402c8ac:	843fffc4 	addi	r16,r16,-1
 402c8b0:	dfc01115 	stw	ra,68(sp)
 402c8b4:	df001015 	stw	fp,64(sp)
 402c8b8:	dd800e15 	stw	r22,56(sp)
 402c8bc:	dc400915 	stw	r17,36(sp)
 402c8c0:	a501ffcc 	andi	r20,r20,2047
 402c8c4:	2025883a 	mov	r18,r4
 402c8c8:	202f883a 	mov	r23,r4
 402c8cc:	2c20703a 	and	r16,r5,r16
 402c8d0:	a827883a 	mov	r19,r21
 402c8d4:	aa403fcc 	andi	r9,r21,255
 402c8d8:	a0005926 	beq	r20,zero,402ca40 <__muldf3+0x1bc>
 402c8dc:	0081ffc4 	movi	r2,2047
 402c8e0:	a0803426 	beq	r20,r2,402c9b4 <__muldf3+0x130>
 402c8e4:	84000434 	orhi	r16,r16,16
 402c8e8:	2004d77a 	srli	r2,r4,29
 402c8ec:	802090fa 	slli	r16,r16,3
 402c8f0:	202e90fa 	slli	r23,r4,3
 402c8f4:	a53f0044 	addi	r20,r20,-1023
 402c8f8:	80a0b03a 	or	r16,r16,r2
 402c8fc:	000b883a 	mov	r5,zero
 402c900:	0039883a 	mov	fp,zero
 402c904:	3806d53a 	srli	r3,r7,20
 402c908:	382cd7fa 	srli	r22,r7,31
 402c90c:	00800434 	movhi	r2,16
 402c910:	10bfffc4 	addi	r2,r2,-1
 402c914:	18c1ffcc 	andi	r3,r3,2047
 402c918:	3025883a 	mov	r18,r6
 402c91c:	38a2703a 	and	r17,r7,r2
 402c920:	b2803fcc 	andi	r10,r22,255
 402c924:	18006426 	beq	r3,zero,402cab8 <__muldf3+0x234>
 402c928:	0081ffc4 	movi	r2,2047
 402c92c:	18805c26 	beq	r3,r2,402caa0 <__muldf3+0x21c>
 402c930:	8c400434 	orhi	r17,r17,16
 402c934:	3004d77a 	srli	r2,r6,29
 402c938:	882290fa 	slli	r17,r17,3
 402c93c:	302490fa 	slli	r18,r6,3
 402c940:	18ff0044 	addi	r3,r3,-1023
 402c944:	88a2b03a 	or	r17,r17,r2
 402c948:	000f883a 	mov	r7,zero
 402c94c:	394ab03a 	or	r5,r7,r5
 402c950:	280a90ba 	slli	r5,r5,2
 402c954:	008100f4 	movhi	r2,1027
 402c958:	10b25d04 	addi	r2,r2,-13964
 402c95c:	288b883a 	add	r5,r5,r2
 402c960:	28800017 	ldw	r2,0(r5)
 402c964:	a0c7883a 	add	r3,r20,r3
 402c968:	b54cf03a 	xor	r6,r22,r21
 402c96c:	1a000044 	addi	r8,r3,1
 402c970:	1000683a 	jmp	r2
 402c974:	0402cbb8 	rdprs	r16,zero,2862
 402c978:	0402cba4 	muli	r16,zero,2862
 402c97c:	0402cba4 	muli	r16,zero,2862
 402c980:	0402cb90 	cmplti	r16,zero,2862
 402c984:	0402c9d0 	cmplti	r16,zero,2855
 402c988:	0402c9d0 	cmplti	r16,zero,2855
 402c98c:	0402cb78 	rdprs	r16,zero,2861
 402c990:	0402cb90 	cmplti	r16,zero,2862
 402c994:	0402c9d0 	cmplti	r16,zero,2855
 402c998:	0402cb78 	rdprs	r16,zero,2861
 402c99c:	0402c9d0 	cmplti	r16,zero,2855
 402c9a0:	0402cb90 	cmplti	r16,zero,2862
 402c9a4:	0402c9d4 	movui	r16,2855
 402c9a8:	0402c9d4 	movui	r16,2855
 402c9ac:	0402c9d4 	movui	r16,2855
 402c9b0:	0402cef4 	movhi	r16,2875
 402c9b4:	8104b03a 	or	r2,r16,r4
 402c9b8:	10006c1e 	bne	r2,zero,402cb6c <__muldf3+0x2e8>
 402c9bc:	01400204 	movi	r5,8
 402c9c0:	0021883a 	mov	r16,zero
 402c9c4:	002f883a 	mov	r23,zero
 402c9c8:	07000084 	movi	fp,2
 402c9cc:	003fcd06 	br	402c904 <__flash_rwdata_start+0xffffc040>
 402c9d0:	3013883a 	mov	r9,r6
 402c9d4:	00800084 	movi	r2,2
 402c9d8:	e080501e 	bne	fp,r2,402cb1c <__muldf3+0x298>
 402c9dc:	4cc0004c 	andi	r19,r9,1
 402c9e0:	0101ffc4 	movi	r4,2047
 402c9e4:	0021883a 	mov	r16,zero
 402c9e8:	002f883a 	mov	r23,zero
 402c9ec:	2008953a 	slli	r4,r4,20
 402c9f0:	98c03fcc 	andi	r3,r19,255
 402c9f4:	04400434 	movhi	r17,16
 402c9f8:	8c7fffc4 	addi	r17,r17,-1
 402c9fc:	180697fa 	slli	r3,r3,31
 402ca00:	8460703a 	and	r16,r16,r17
 402ca04:	8120b03a 	or	r16,r16,r4
 402ca08:	80c6b03a 	or	r3,r16,r3
 402ca0c:	b805883a 	mov	r2,r23
 402ca10:	dfc01117 	ldw	ra,68(sp)
 402ca14:	df001017 	ldw	fp,64(sp)
 402ca18:	ddc00f17 	ldw	r23,60(sp)
 402ca1c:	dd800e17 	ldw	r22,56(sp)
 402ca20:	dd400d17 	ldw	r21,52(sp)
 402ca24:	dd000c17 	ldw	r20,48(sp)
 402ca28:	dcc00b17 	ldw	r19,44(sp)
 402ca2c:	dc800a17 	ldw	r18,40(sp)
 402ca30:	dc400917 	ldw	r17,36(sp)
 402ca34:	dc000817 	ldw	r16,32(sp)
 402ca38:	dec01204 	addi	sp,sp,72
 402ca3c:	f800283a 	ret
 402ca40:	8104b03a 	or	r2,r16,r4
 402ca44:	10004426 	beq	r2,zero,402cb58 <__muldf3+0x2d4>
 402ca48:	80014b26 	beq	r16,zero,402cf78 <__muldf3+0x6f4>
 402ca4c:	8009883a 	mov	r4,r16
 402ca50:	d9800715 	stw	r6,28(sp)
 402ca54:	d9c00215 	stw	r7,8(sp)
 402ca58:	da400415 	stw	r9,16(sp)
 402ca5c:	402dbbc0 	call	402dbbc <__clzsi2>
 402ca60:	d9800717 	ldw	r6,28(sp)
 402ca64:	d9c00217 	ldw	r7,8(sp)
 402ca68:	da400417 	ldw	r9,16(sp)
 402ca6c:	1007883a 	mov	r3,r2
 402ca70:	01000a04 	movi	r4,40
 402ca74:	1dfffe04 	addi	r23,r3,-8
 402ca78:	20c9c83a 	sub	r4,r4,r3
 402ca7c:	85e0983a 	sll	r16,r16,r23
 402ca80:	9108d83a 	srl	r4,r18,r4
 402ca84:	95ee983a 	sll	r23,r18,r23
 402ca88:	2420b03a 	or	r16,r4,r16
 402ca8c:	053f0344 	movi	r20,-1011
 402ca90:	a0e9c83a 	sub	r20,r20,r3
 402ca94:	000b883a 	mov	r5,zero
 402ca98:	0039883a 	mov	fp,zero
 402ca9c:	003f9906 	br	402c904 <__flash_rwdata_start+0xffffc040>
 402caa0:	8984b03a 	or	r2,r17,r6
 402caa4:	10002a1e 	bne	r2,zero,402cb50 <__muldf3+0x2cc>
 402caa8:	0023883a 	mov	r17,zero
 402caac:	0025883a 	mov	r18,zero
 402cab0:	01c00084 	movi	r7,2
 402cab4:	003fa506 	br	402c94c <__flash_rwdata_start+0xffffc088>
 402cab8:	8984b03a 	or	r2,r17,r6
 402cabc:	10002026 	beq	r2,zero,402cb40 <__muldf3+0x2bc>
 402cac0:	88011c26 	beq	r17,zero,402cf34 <__muldf3+0x6b0>
 402cac4:	8809883a 	mov	r4,r17
 402cac8:	d9400215 	stw	r5,8(sp)
 402cacc:	d9800715 	stw	r6,28(sp)
 402cad0:	da400415 	stw	r9,16(sp)
 402cad4:	da800315 	stw	r10,12(sp)
 402cad8:	402dbbc0 	call	402dbbc <__clzsi2>
 402cadc:	d9400217 	ldw	r5,8(sp)
 402cae0:	d9800717 	ldw	r6,28(sp)
 402cae4:	da400417 	ldw	r9,16(sp)
 402cae8:	da800317 	ldw	r10,12(sp)
 402caec:	1007883a 	mov	r3,r2
 402caf0:	01000a04 	movi	r4,40
 402caf4:	1cbffe04 	addi	r18,r3,-8
 402caf8:	20c9c83a 	sub	r4,r4,r3
 402cafc:	8ca2983a 	sll	r17,r17,r18
 402cb00:	3108d83a 	srl	r4,r6,r4
 402cb04:	34a4983a 	sll	r18,r6,r18
 402cb08:	2462b03a 	or	r17,r4,r17
 402cb0c:	00bf0344 	movi	r2,-1011
 402cb10:	10c7c83a 	sub	r3,r2,r3
 402cb14:	000f883a 	mov	r7,zero
 402cb18:	003f8c06 	br	402c94c <__flash_rwdata_start+0xffffc088>
 402cb1c:	008000c4 	movi	r2,3
 402cb20:	e0816d26 	beq	fp,r2,402d0d8 <__muldf3+0x854>
 402cb24:	00800044 	movi	r2,1
 402cb28:	e081321e 	bne	fp,r2,402cff4 <__muldf3+0x770>
 402cb2c:	48a6703a 	and	r19,r9,r2
 402cb30:	0009883a 	mov	r4,zero
 402cb34:	0021883a 	mov	r16,zero
 402cb38:	002f883a 	mov	r23,zero
 402cb3c:	003fab06 	br	402c9ec <__flash_rwdata_start+0xffffc128>
 402cb40:	0023883a 	mov	r17,zero
 402cb44:	0025883a 	mov	r18,zero
 402cb48:	01c00044 	movi	r7,1
 402cb4c:	003f7f06 	br	402c94c <__flash_rwdata_start+0xffffc088>
 402cb50:	01c000c4 	movi	r7,3
 402cb54:	003f7d06 	br	402c94c <__flash_rwdata_start+0xffffc088>
 402cb58:	01400104 	movi	r5,4
 402cb5c:	0021883a 	mov	r16,zero
 402cb60:	002f883a 	mov	r23,zero
 402cb64:	07000044 	movi	fp,1
 402cb68:	003f6606 	br	402c904 <__flash_rwdata_start+0xffffc040>
 402cb6c:	01400304 	movi	r5,12
 402cb70:	070000c4 	movi	fp,3
 402cb74:	003f6306 	br	402c904 <__flash_rwdata_start+0xffffc040>
 402cb78:	04000434 	movhi	r16,16
 402cb7c:	0027883a 	mov	r19,zero
 402cb80:	843fffc4 	addi	r16,r16,-1
 402cb84:	05ffffc4 	movi	r23,-1
 402cb88:	0101ffc4 	movi	r4,2047
 402cb8c:	003f9706 	br	402c9ec <__flash_rwdata_start+0xffffc128>
 402cb90:	8821883a 	mov	r16,r17
 402cb94:	902f883a 	mov	r23,r18
 402cb98:	5013883a 	mov	r9,r10
 402cb9c:	3839883a 	mov	fp,r7
 402cba0:	003f8c06 	br	402c9d4 <__flash_rwdata_start+0xffffc110>
 402cba4:	8821883a 	mov	r16,r17
 402cba8:	902f883a 	mov	r23,r18
 402cbac:	3013883a 	mov	r9,r6
 402cbb0:	3839883a 	mov	fp,r7
 402cbb4:	003f8706 	br	402c9d4 <__flash_rwdata_start+0xffffc110>
 402cbb8:	b82ad43a 	srli	r21,r23,16
 402cbbc:	9038d43a 	srli	fp,r18,16
 402cbc0:	bdffffcc 	andi	r23,r23,65535
 402cbc4:	94bfffcc 	andi	r18,r18,65535
 402cbc8:	9009883a 	mov	r4,r18
 402cbcc:	b80b883a 	mov	r5,r23
 402cbd0:	d8c00515 	stw	r3,20(sp)
 402cbd4:	d9800715 	stw	r6,28(sp)
 402cbd8:	da000615 	stw	r8,24(sp)
 402cbdc:	402110c0 	call	402110c <__mulsi3>
 402cbe0:	9009883a 	mov	r4,r18
 402cbe4:	a80b883a 	mov	r5,r21
 402cbe8:	1029883a 	mov	r20,r2
 402cbec:	402110c0 	call	402110c <__mulsi3>
 402cbf0:	e009883a 	mov	r4,fp
 402cbf4:	a80b883a 	mov	r5,r21
 402cbf8:	102d883a 	mov	r22,r2
 402cbfc:	402110c0 	call	402110c <__mulsi3>
 402cc00:	e009883a 	mov	r4,fp
 402cc04:	b80b883a 	mov	r5,r23
 402cc08:	1027883a 	mov	r19,r2
 402cc0c:	402110c0 	call	402110c <__mulsi3>
 402cc10:	a008d43a 	srli	r4,r20,16
 402cc14:	b085883a 	add	r2,r22,r2
 402cc18:	d8c00517 	ldw	r3,20(sp)
 402cc1c:	110f883a 	add	r7,r2,r4
 402cc20:	d9800717 	ldw	r6,28(sp)
 402cc24:	da000617 	ldw	r8,24(sp)
 402cc28:	3d80022e 	bgeu	r7,r22,402cc34 <__muldf3+0x3b0>
 402cc2c:	00800074 	movhi	r2,1
 402cc30:	98a7883a 	add	r19,r19,r2
 402cc34:	3804943a 	slli	r2,r7,16
 402cc38:	380ed43a 	srli	r7,r7,16
 402cc3c:	882cd43a 	srli	r22,r17,16
 402cc40:	a53fffcc 	andi	r20,r20,65535
 402cc44:	8c7fffcc 	andi	r17,r17,65535
 402cc48:	1529883a 	add	r20,r2,r20
 402cc4c:	8809883a 	mov	r4,r17
 402cc50:	b80b883a 	mov	r5,r23
 402cc54:	d8c00515 	stw	r3,20(sp)
 402cc58:	d9800715 	stw	r6,28(sp)
 402cc5c:	da000615 	stw	r8,24(sp)
 402cc60:	d9c00015 	stw	r7,0(sp)
 402cc64:	dd000115 	stw	r20,4(sp)
 402cc68:	402110c0 	call	402110c <__mulsi3>
 402cc6c:	a80b883a 	mov	r5,r21
 402cc70:	8809883a 	mov	r4,r17
 402cc74:	d8800415 	stw	r2,16(sp)
 402cc78:	402110c0 	call	402110c <__mulsi3>
 402cc7c:	a80b883a 	mov	r5,r21
 402cc80:	b009883a 	mov	r4,r22
 402cc84:	1029883a 	mov	r20,r2
 402cc88:	402110c0 	call	402110c <__mulsi3>
 402cc8c:	b009883a 	mov	r4,r22
 402cc90:	b80b883a 	mov	r5,r23
 402cc94:	102b883a 	mov	r21,r2
 402cc98:	402110c0 	call	402110c <__mulsi3>
 402cc9c:	da400417 	ldw	r9,16(sp)
 402cca0:	a085883a 	add	r2,r20,r2
 402cca4:	d8c00517 	ldw	r3,20(sp)
 402cca8:	4808d43a 	srli	r4,r9,16
 402ccac:	d9800717 	ldw	r6,28(sp)
 402ccb0:	da000617 	ldw	r8,24(sp)
 402ccb4:	1109883a 	add	r4,r2,r4
 402ccb8:	2500022e 	bgeu	r4,r20,402ccc4 <__muldf3+0x440>
 402ccbc:	00800074 	movhi	r2,1
 402ccc0:	a8ab883a 	add	r21,r21,r2
 402ccc4:	200e943a 	slli	r7,r4,16
 402ccc8:	2004d43a 	srli	r2,r4,16
 402cccc:	802ed43a 	srli	r23,r16,16
 402ccd0:	843fffcc 	andi	r16,r16,65535
 402ccd4:	4d3fffcc 	andi	r20,r9,65535
 402ccd8:	9009883a 	mov	r4,r18
 402ccdc:	800b883a 	mov	r5,r16
 402cce0:	3d29883a 	add	r20,r7,r20
 402cce4:	d8c00515 	stw	r3,20(sp)
 402cce8:	d9800715 	stw	r6,28(sp)
 402ccec:	da000615 	stw	r8,24(sp)
 402ccf0:	a8ab883a 	add	r21,r21,r2
 402ccf4:	402110c0 	call	402110c <__mulsi3>
 402ccf8:	9009883a 	mov	r4,r18
 402ccfc:	b80b883a 	mov	r5,r23
 402cd00:	d8800315 	stw	r2,12(sp)
 402cd04:	402110c0 	call	402110c <__mulsi3>
 402cd08:	e009883a 	mov	r4,fp
 402cd0c:	b80b883a 	mov	r5,r23
 402cd10:	1025883a 	mov	r18,r2
 402cd14:	402110c0 	call	402110c <__mulsi3>
 402cd18:	e009883a 	mov	r4,fp
 402cd1c:	800b883a 	mov	r5,r16
 402cd20:	d8800215 	stw	r2,8(sp)
 402cd24:	402110c0 	call	402110c <__mulsi3>
 402cd28:	da800317 	ldw	r10,12(sp)
 402cd2c:	d9400017 	ldw	r5,0(sp)
 402cd30:	9085883a 	add	r2,r18,r2
 402cd34:	5008d43a 	srli	r4,r10,16
 402cd38:	a153883a 	add	r9,r20,r5
 402cd3c:	d8c00517 	ldw	r3,20(sp)
 402cd40:	1109883a 	add	r4,r2,r4
 402cd44:	d9800717 	ldw	r6,28(sp)
 402cd48:	da000617 	ldw	r8,24(sp)
 402cd4c:	dac00217 	ldw	r11,8(sp)
 402cd50:	2480022e 	bgeu	r4,r18,402cd5c <__muldf3+0x4d8>
 402cd54:	00800074 	movhi	r2,1
 402cd58:	5897883a 	add	r11,r11,r2
 402cd5c:	200e943a 	slli	r7,r4,16
 402cd60:	2038d43a 	srli	fp,r4,16
 402cd64:	52bfffcc 	andi	r10,r10,65535
 402cd68:	3a8f883a 	add	r7,r7,r10
 402cd6c:	8809883a 	mov	r4,r17
 402cd70:	800b883a 	mov	r5,r16
 402cd74:	d8c00515 	stw	r3,20(sp)
 402cd78:	d9800715 	stw	r6,28(sp)
 402cd7c:	d9c00215 	stw	r7,8(sp)
 402cd80:	da000615 	stw	r8,24(sp)
 402cd84:	da400415 	stw	r9,16(sp)
 402cd88:	5f39883a 	add	fp,r11,fp
 402cd8c:	402110c0 	call	402110c <__mulsi3>
 402cd90:	8809883a 	mov	r4,r17
 402cd94:	b80b883a 	mov	r5,r23
 402cd98:	1025883a 	mov	r18,r2
 402cd9c:	402110c0 	call	402110c <__mulsi3>
 402cda0:	b009883a 	mov	r4,r22
 402cda4:	b80b883a 	mov	r5,r23
 402cda8:	d8800315 	stw	r2,12(sp)
 402cdac:	402110c0 	call	402110c <__mulsi3>
 402cdb0:	b009883a 	mov	r4,r22
 402cdb4:	800b883a 	mov	r5,r16
 402cdb8:	1023883a 	mov	r17,r2
 402cdbc:	402110c0 	call	402110c <__mulsi3>
 402cdc0:	da800317 	ldw	r10,12(sp)
 402cdc4:	9008d43a 	srli	r4,r18,16
 402cdc8:	d8c00517 	ldw	r3,20(sp)
 402cdcc:	5085883a 	add	r2,r10,r2
 402cdd0:	1109883a 	add	r4,r2,r4
 402cdd4:	d9800717 	ldw	r6,28(sp)
 402cdd8:	d9c00217 	ldw	r7,8(sp)
 402cddc:	da000617 	ldw	r8,24(sp)
 402cde0:	da400417 	ldw	r9,16(sp)
 402cde4:	2280022e 	bgeu	r4,r10,402cdf0 <__muldf3+0x56c>
 402cde8:	00800074 	movhi	r2,1
 402cdec:	88a3883a 	add	r17,r17,r2
 402cdf0:	2004943a 	slli	r2,r4,16
 402cdf4:	94bfffcc 	andi	r18,r18,65535
 402cdf8:	4ce7883a 	add	r19,r9,r19
 402cdfc:	14a5883a 	add	r18,r2,r18
 402ce00:	9d29803a 	cmpltu	r20,r19,r20
 402ce04:	9565883a 	add	r18,r18,r21
 402ce08:	9505883a 	add	r2,r18,r20
 402ce0c:	99e7883a 	add	r19,r19,r7
 402ce10:	99cf803a 	cmpltu	r7,r19,r7
 402ce14:	e08b883a 	add	r5,fp,r2
 402ce18:	2008d43a 	srli	r4,r4,16
 402ce1c:	29ef883a 	add	r23,r5,r7
 402ce20:	1529803a 	cmpltu	r20,r2,r20
 402ce24:	956b803a 	cmpltu	r21,r18,r21
 402ce28:	b9cf803a 	cmpltu	r7,r23,r7
 402ce2c:	a564b03a 	or	r18,r20,r21
 402ce30:	2f39803a 	cmpltu	fp,r5,fp
 402ce34:	9125883a 	add	r18,r18,r4
 402ce38:	3f38b03a 	or	fp,r7,fp
 402ce3c:	9725883a 	add	r18,r18,fp
 402ce40:	9804927a 	slli	r2,r19,9
 402ce44:	9463883a 	add	r17,r18,r17
 402ce48:	d9000117 	ldw	r4,4(sp)
 402ce4c:	b820d5fa 	srli	r16,r23,23
 402ce50:	8822927a 	slli	r17,r17,9
 402ce54:	9826d5fa 	srli	r19,r19,23
 402ce58:	1104b03a 	or	r2,r2,r4
 402ce5c:	b82e927a 	slli	r23,r23,9
 402ce60:	1004c03a 	cmpne	r2,r2,zero
 402ce64:	8c20b03a 	or	r16,r17,r16
 402ce68:	14e6b03a 	or	r19,r2,r19
 402ce6c:	8080402c 	andhi	r2,r16,256
 402ce70:	9deeb03a 	or	r23,r19,r23
 402ce74:	10000726 	beq	r2,zero,402ce94 <__muldf3+0x610>
 402ce78:	b804d07a 	srli	r2,r23,1
 402ce7c:	800697fa 	slli	r3,r16,31
 402ce80:	bdc0004c 	andi	r23,r23,1
 402ce84:	8020d07a 	srli	r16,r16,1
 402ce88:	b8aeb03a 	or	r23,r23,r2
 402ce8c:	b8eeb03a 	or	r23,r23,r3
 402ce90:	4007883a 	mov	r3,r8
 402ce94:	1900ffc4 	addi	r4,r3,1023
 402ce98:	01004d0e 	bge	zero,r4,402cfd0 <__muldf3+0x74c>
 402ce9c:	b88001cc 	andi	r2,r23,7
 402cea0:	10000726 	beq	r2,zero,402cec0 <__muldf3+0x63c>
 402cea4:	b94003cc 	andi	r5,r23,15
 402cea8:	00800104 	movi	r2,4
 402ceac:	28800426 	beq	r5,r2,402cec0 <__muldf3+0x63c>
 402ceb0:	b885883a 	add	r2,r23,r2
 402ceb4:	15ef803a 	cmpltu	r23,r2,r23
 402ceb8:	85e1883a 	add	r16,r16,r23
 402cebc:	102f883a 	mov	r23,r2
 402cec0:	8080402c 	andhi	r2,r16,256
 402cec4:	10000426 	beq	r2,zero,402ced8 <__muldf3+0x654>
 402cec8:	00bfc034 	movhi	r2,65280
 402cecc:	10bfffc4 	addi	r2,r2,-1
 402ced0:	19010004 	addi	r4,r3,1024
 402ced4:	80a0703a 	and	r16,r16,r2
 402ced8:	0081ff84 	movi	r2,2046
 402cedc:	1100340e 	bge	r2,r4,402cfb0 <__muldf3+0x72c>
 402cee0:	34c0004c 	andi	r19,r6,1
 402cee4:	0101ffc4 	movi	r4,2047
 402cee8:	0021883a 	mov	r16,zero
 402ceec:	002f883a 	mov	r23,zero
 402cef0:	003ebe06 	br	402c9ec <__flash_rwdata_start+0xffffc128>
 402cef4:	8080022c 	andhi	r2,r16,8
 402cef8:	10000926 	beq	r2,zero,402cf20 <__muldf3+0x69c>
 402cefc:	8880022c 	andhi	r2,r17,8
 402cf00:	1000071e 	bne	r2,zero,402cf20 <__muldf3+0x69c>
 402cf04:	00800434 	movhi	r2,16
 402cf08:	8c000234 	orhi	r16,r17,8
 402cf0c:	10bfffc4 	addi	r2,r2,-1
 402cf10:	b027883a 	mov	r19,r22
 402cf14:	80a0703a 	and	r16,r16,r2
 402cf18:	902f883a 	mov	r23,r18
 402cf1c:	003f1a06 	br	402cb88 <__flash_rwdata_start+0xffffc2c4>
 402cf20:	00800434 	movhi	r2,16
 402cf24:	84000234 	orhi	r16,r16,8
 402cf28:	10bfffc4 	addi	r2,r2,-1
 402cf2c:	80a0703a 	and	r16,r16,r2
 402cf30:	003f1506 	br	402cb88 <__flash_rwdata_start+0xffffc2c4>
 402cf34:	3009883a 	mov	r4,r6
 402cf38:	d9400215 	stw	r5,8(sp)
 402cf3c:	d9800715 	stw	r6,28(sp)
 402cf40:	da400415 	stw	r9,16(sp)
 402cf44:	da800315 	stw	r10,12(sp)
 402cf48:	402dbbc0 	call	402dbbc <__clzsi2>
 402cf4c:	10c00804 	addi	r3,r2,32
 402cf50:	010009c4 	movi	r4,39
 402cf54:	d9400217 	ldw	r5,8(sp)
 402cf58:	d9800717 	ldw	r6,28(sp)
 402cf5c:	da400417 	ldw	r9,16(sp)
 402cf60:	da800317 	ldw	r10,12(sp)
 402cf64:	20fee20e 	bge	r4,r3,402caf0 <__flash_rwdata_start+0xffffc22c>
 402cf68:	147ffe04 	addi	r17,r2,-8
 402cf6c:	9462983a 	sll	r17,r18,r17
 402cf70:	0025883a 	mov	r18,zero
 402cf74:	003ee506 	br	402cb0c <__flash_rwdata_start+0xffffc248>
 402cf78:	d9800715 	stw	r6,28(sp)
 402cf7c:	d9c00215 	stw	r7,8(sp)
 402cf80:	da400415 	stw	r9,16(sp)
 402cf84:	402dbbc0 	call	402dbbc <__clzsi2>
 402cf88:	10c00804 	addi	r3,r2,32
 402cf8c:	010009c4 	movi	r4,39
 402cf90:	d9800717 	ldw	r6,28(sp)
 402cf94:	d9c00217 	ldw	r7,8(sp)
 402cf98:	da400417 	ldw	r9,16(sp)
 402cf9c:	20feb40e 	bge	r4,r3,402ca70 <__flash_rwdata_start+0xffffc1ac>
 402cfa0:	143ffe04 	addi	r16,r2,-8
 402cfa4:	9420983a 	sll	r16,r18,r16
 402cfa8:	002f883a 	mov	r23,zero
 402cfac:	003eb706 	br	402ca8c <__flash_rwdata_start+0xffffc1c8>
 402cfb0:	8004977a 	slli	r2,r16,29
 402cfb4:	b82ed0fa 	srli	r23,r23,3
 402cfb8:	8020927a 	slli	r16,r16,9
 402cfbc:	2101ffcc 	andi	r4,r4,2047
 402cfc0:	15eeb03a 	or	r23,r2,r23
 402cfc4:	8020d33a 	srli	r16,r16,12
 402cfc8:	34c0004c 	andi	r19,r6,1
 402cfcc:	003e8706 	br	402c9ec <__flash_rwdata_start+0xffffc128>
 402cfd0:	00bf0084 	movi	r2,-1022
 402cfd4:	10c5c83a 	sub	r2,r2,r3
 402cfd8:	01000e04 	movi	r4,56
 402cfdc:	2080080e 	bge	r4,r2,402d000 <__muldf3+0x77c>
 402cfe0:	34c0004c 	andi	r19,r6,1
 402cfe4:	0009883a 	mov	r4,zero
 402cfe8:	0021883a 	mov	r16,zero
 402cfec:	002f883a 	mov	r23,zero
 402cff0:	003e7e06 	br	402c9ec <__flash_rwdata_start+0xffffc128>
 402cff4:	4007883a 	mov	r3,r8
 402cff8:	480d883a 	mov	r6,r9
 402cffc:	003fa506 	br	402ce94 <__flash_rwdata_start+0xffffc5d0>
 402d000:	010007c4 	movi	r4,31
 402d004:	20801816 	blt	r4,r2,402d068 <__muldf3+0x7e4>
 402d008:	18c10784 	addi	r3,r3,1054
 402d00c:	80c8983a 	sll	r4,r16,r3
 402d010:	b88ad83a 	srl	r5,r23,r2
 402d014:	b8c6983a 	sll	r3,r23,r3
 402d018:	80a0d83a 	srl	r16,r16,r2
 402d01c:	2908b03a 	or	r4,r5,r4
 402d020:	1804c03a 	cmpne	r2,r3,zero
 402d024:	2088b03a 	or	r4,r4,r2
 402d028:	208001cc 	andi	r2,r4,7
 402d02c:	10000726 	beq	r2,zero,402d04c <__muldf3+0x7c8>
 402d030:	20c003cc 	andi	r3,r4,15
 402d034:	00800104 	movi	r2,4
 402d038:	18800426 	beq	r3,r2,402d04c <__muldf3+0x7c8>
 402d03c:	20c00104 	addi	r3,r4,4
 402d040:	1905803a 	cmpltu	r2,r3,r4
 402d044:	80a1883a 	add	r16,r16,r2
 402d048:	1809883a 	mov	r4,r3
 402d04c:	8080202c 	andhi	r2,r16,128
 402d050:	10001b26 	beq	r2,zero,402d0c0 <__muldf3+0x83c>
 402d054:	34c0004c 	andi	r19,r6,1
 402d058:	01000044 	movi	r4,1
 402d05c:	0021883a 	mov	r16,zero
 402d060:	002f883a 	mov	r23,zero
 402d064:	003e6106 	br	402c9ec <__flash_rwdata_start+0xffffc128>
 402d068:	013ef884 	movi	r4,-1054
 402d06c:	20c9c83a 	sub	r4,r4,r3
 402d070:	01400804 	movi	r5,32
 402d074:	8108d83a 	srl	r4,r16,r4
 402d078:	11401526 	beq	r2,r5,402d0d0 <__muldf3+0x84c>
 402d07c:	18c10f84 	addi	r3,r3,1086
 402d080:	80e0983a 	sll	r16,r16,r3
 402d084:	85eeb03a 	or	r23,r16,r23
 402d088:	b804c03a 	cmpne	r2,r23,zero
 402d08c:	1108b03a 	or	r4,r2,r4
 402d090:	20c001cc 	andi	r3,r4,7
 402d094:	1800061e 	bne	r3,zero,402d0b0 <__muldf3+0x82c>
 402d098:	0021883a 	mov	r16,zero
 402d09c:	202ed0fa 	srli	r23,r4,3
 402d0a0:	34c0004c 	andi	r19,r6,1
 402d0a4:	0009883a 	mov	r4,zero
 402d0a8:	b8eeb03a 	or	r23,r23,r3
 402d0ac:	003e4f06 	br	402c9ec <__flash_rwdata_start+0xffffc128>
 402d0b0:	20c003cc 	andi	r3,r4,15
 402d0b4:	00800104 	movi	r2,4
 402d0b8:	0021883a 	mov	r16,zero
 402d0bc:	18bfdf1e 	bne	r3,r2,402d03c <__flash_rwdata_start+0xffffc778>
 402d0c0:	8004927a 	slli	r2,r16,9
 402d0c4:	8006977a 	slli	r3,r16,29
 402d0c8:	1020d33a 	srli	r16,r2,12
 402d0cc:	003ff306 	br	402d09c <__flash_rwdata_start+0xffffc7d8>
 402d0d0:	0021883a 	mov	r16,zero
 402d0d4:	003feb06 	br	402d084 <__flash_rwdata_start+0xffffc7c0>
 402d0d8:	00800434 	movhi	r2,16
 402d0dc:	84000234 	orhi	r16,r16,8
 402d0e0:	10bfffc4 	addi	r2,r2,-1
 402d0e4:	4cc0004c 	andi	r19,r9,1
 402d0e8:	80a0703a 	and	r16,r16,r2
 402d0ec:	003ea606 	br	402cb88 <__flash_rwdata_start+0xffffc2c4>

0402d0f0 <__subdf3>:
 402d0f0:	00c00434 	movhi	r3,16
 402d0f4:	18ffffc4 	addi	r3,r3,-1
 402d0f8:	defffb04 	addi	sp,sp,-20
 402d0fc:	28d2703a 	and	r9,r5,r3
 402d100:	3814d53a 	srli	r10,r7,20
 402d104:	38c6703a 	and	r3,r7,r3
 402d108:	3004d77a 	srli	r2,r6,29
 402d10c:	dc800215 	stw	r18,8(sp)
 402d110:	dc000015 	stw	r16,0(sp)
 402d114:	2824d7fa 	srli	r18,r5,31
 402d118:	2820d53a 	srli	r16,r5,20
 402d11c:	481290fa 	slli	r9,r9,3
 402d120:	200ad77a 	srli	r5,r4,29
 402d124:	180690fa 	slli	r3,r3,3
 402d128:	dc400115 	stw	r17,4(sp)
 402d12c:	dfc00415 	stw	ra,16(sp)
 402d130:	202290fa 	slli	r17,r4,3
 402d134:	dcc00315 	stw	r19,12(sp)
 402d138:	5281ffcc 	andi	r10,r10,2047
 402d13c:	0101ffc4 	movi	r4,2047
 402d140:	9011883a 	mov	r8,r18
 402d144:	8401ffcc 	andi	r16,r16,2047
 402d148:	94803fcc 	andi	r18,r18,255
 402d14c:	494ab03a 	or	r5,r9,r5
 402d150:	380ed7fa 	srli	r7,r7,31
 402d154:	1886b03a 	or	r3,r3,r2
 402d158:	300c90fa 	slli	r6,r6,3
 402d15c:	51009026 	beq	r10,r4,402d3a0 <__subdf3+0x2b0>
 402d160:	39c0005c 	xori	r7,r7,1
 402d164:	8285c83a 	sub	r2,r16,r10
 402d168:	91c06f26 	beq	r18,r7,402d328 <__subdf3+0x238>
 402d16c:	0080b10e 	bge	zero,r2,402d434 <__subdf3+0x344>
 402d170:	50002a1e 	bne	r10,zero,402d21c <__subdf3+0x12c>
 402d174:	1988b03a 	or	r4,r3,r6
 402d178:	2000941e 	bne	r4,zero,402d3cc <__subdf3+0x2dc>
 402d17c:	888001cc 	andi	r2,r17,7
 402d180:	10005b26 	beq	r2,zero,402d2f0 <__subdf3+0x200>
 402d184:	88c003cc 	andi	r3,r17,15
 402d188:	00800104 	movi	r2,4
 402d18c:	18805826 	beq	r3,r2,402d2f0 <__subdf3+0x200>
 402d190:	88c00104 	addi	r3,r17,4
 402d194:	1c63803a 	cmpltu	r17,r3,r17
 402d198:	2c4b883a 	add	r5,r5,r17
 402d19c:	2880202c 	andhi	r2,r5,128
 402d1a0:	9200004c 	andi	r8,r18,1
 402d1a4:	1823883a 	mov	r17,r3
 402d1a8:	10005426 	beq	r2,zero,402d2fc <__subdf3+0x20c>
 402d1ac:	84000044 	addi	r16,r16,1
 402d1b0:	0081ffc4 	movi	r2,2047
 402d1b4:	8080bf26 	beq	r16,r2,402d4b4 <__subdf3+0x3c4>
 402d1b8:	013fe034 	movhi	r4,65408
 402d1bc:	213fffc4 	addi	r4,r4,-1
 402d1c0:	290a703a 	and	r5,r5,r4
 402d1c4:	2804977a 	slli	r2,r5,29
 402d1c8:	280a927a 	slli	r5,r5,9
 402d1cc:	8822d0fa 	srli	r17,r17,3
 402d1d0:	8401ffcc 	andi	r16,r16,2047
 402d1d4:	2808d33a 	srli	r4,r5,12
 402d1d8:	1444b03a 	or	r2,r2,r17
 402d1dc:	8401ffcc 	andi	r16,r16,2047
 402d1e0:	800a953a 	slli	r5,r16,20
 402d1e4:	40c03fcc 	andi	r3,r8,255
 402d1e8:	04000434 	movhi	r16,16
 402d1ec:	180697fa 	slli	r3,r3,31
 402d1f0:	843fffc4 	addi	r16,r16,-1
 402d1f4:	2420703a 	and	r16,r4,r16
 402d1f8:	8160b03a 	or	r16,r16,r5
 402d1fc:	80c6b03a 	or	r3,r16,r3
 402d200:	dfc00417 	ldw	ra,16(sp)
 402d204:	dcc00317 	ldw	r19,12(sp)
 402d208:	dc800217 	ldw	r18,8(sp)
 402d20c:	dc400117 	ldw	r17,4(sp)
 402d210:	dc000017 	ldw	r16,0(sp)
 402d214:	dec00504 	addi	sp,sp,20
 402d218:	f800283a 	ret
 402d21c:	0101ffc4 	movi	r4,2047
 402d220:	813fd626 	beq	r16,r4,402d17c <__flash_rwdata_start+0xffffc8b8>
 402d224:	18c02034 	orhi	r3,r3,128
 402d228:	01000e04 	movi	r4,56
 402d22c:	2080a416 	blt	r4,r2,402d4c0 <__subdf3+0x3d0>
 402d230:	010007c4 	movi	r4,31
 402d234:	2080c716 	blt	r4,r2,402d554 <__subdf3+0x464>
 402d238:	01000804 	movi	r4,32
 402d23c:	2089c83a 	sub	r4,r4,r2
 402d240:	1910983a 	sll	r8,r3,r4
 402d244:	308ed83a 	srl	r7,r6,r2
 402d248:	3108983a 	sll	r4,r6,r4
 402d24c:	1884d83a 	srl	r2,r3,r2
 402d250:	41ccb03a 	or	r6,r8,r7
 402d254:	2008c03a 	cmpne	r4,r4,zero
 402d258:	310cb03a 	or	r6,r6,r4
 402d25c:	898dc83a 	sub	r6,r17,r6
 402d260:	89a3803a 	cmpltu	r17,r17,r6
 402d264:	288bc83a 	sub	r5,r5,r2
 402d268:	2c4bc83a 	sub	r5,r5,r17
 402d26c:	3023883a 	mov	r17,r6
 402d270:	2880202c 	andhi	r2,r5,128
 402d274:	10006b26 	beq	r2,zero,402d424 <__subdf3+0x334>
 402d278:	04c02034 	movhi	r19,128
 402d27c:	9cffffc4 	addi	r19,r19,-1
 402d280:	2ce6703a 	and	r19,r5,r19
 402d284:	98007c26 	beq	r19,zero,402d478 <__subdf3+0x388>
 402d288:	9809883a 	mov	r4,r19
 402d28c:	402dbbc0 	call	402dbbc <__clzsi2>
 402d290:	10fffe04 	addi	r3,r2,-8
 402d294:	010007c4 	movi	r4,31
 402d298:	20c07d16 	blt	r4,r3,402d490 <__subdf3+0x3a0>
 402d29c:	01400a04 	movi	r5,40
 402d2a0:	2885c83a 	sub	r2,r5,r2
 402d2a4:	888ad83a 	srl	r5,r17,r2
 402d2a8:	98e6983a 	sll	r19,r19,r3
 402d2ac:	88e2983a 	sll	r17,r17,r3
 402d2b0:	2ce6b03a 	or	r19,r5,r19
 402d2b4:	1c007a16 	blt	r3,r16,402d4a0 <__subdf3+0x3b0>
 402d2b8:	1c21c83a 	sub	r16,r3,r16
 402d2bc:	81400044 	addi	r5,r16,1
 402d2c0:	00c007c4 	movi	r3,31
 402d2c4:	19409616 	blt	r3,r5,402d520 <__subdf3+0x430>
 402d2c8:	1c21c83a 	sub	r16,r3,r16
 402d2cc:	8c08983a 	sll	r4,r17,r16
 402d2d0:	8946d83a 	srl	r3,r17,r5
 402d2d4:	9c20983a 	sll	r16,r19,r16
 402d2d8:	2008c03a 	cmpne	r4,r4,zero
 402d2dc:	994ad83a 	srl	r5,r19,r5
 402d2e0:	1c06b03a 	or	r3,r3,r16
 402d2e4:	1922b03a 	or	r17,r3,r4
 402d2e8:	0021883a 	mov	r16,zero
 402d2ec:	003fa306 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d2f0:	2880202c 	andhi	r2,r5,128
 402d2f4:	9200004c 	andi	r8,r18,1
 402d2f8:	103fac1e 	bne	r2,zero,402d1ac <__flash_rwdata_start+0xffffc8e8>
 402d2fc:	2804977a 	slli	r2,r5,29
 402d300:	8822d0fa 	srli	r17,r17,3
 402d304:	00c1ffc4 	movi	r3,2047
 402d308:	280ad0fa 	srli	r5,r5,3
 402d30c:	1444b03a 	or	r2,r2,r17
 402d310:	80c02726 	beq	r16,r3,402d3b0 <__subdf3+0x2c0>
 402d314:	01000434 	movhi	r4,16
 402d318:	213fffc4 	addi	r4,r4,-1
 402d31c:	80e0703a 	and	r16,r16,r3
 402d320:	2908703a 	and	r4,r5,r4
 402d324:	003fad06 	br	402d1dc <__flash_rwdata_start+0xffffc918>
 402d328:	0080690e 	bge	zero,r2,402d4d0 <__subdf3+0x3e0>
 402d32c:	50002f26 	beq	r10,zero,402d3ec <__subdf3+0x2fc>
 402d330:	0101ffc4 	movi	r4,2047
 402d334:	813f9126 	beq	r16,r4,402d17c <__flash_rwdata_start+0xffffc8b8>
 402d338:	18c02034 	orhi	r3,r3,128
 402d33c:	01000e04 	movi	r4,56
 402d340:	2080b00e 	bge	r4,r2,402d604 <__subdf3+0x514>
 402d344:	198cb03a 	or	r6,r3,r6
 402d348:	300ec03a 	cmpne	r7,r6,zero
 402d34c:	0005883a 	mov	r2,zero
 402d350:	3c4f883a 	add	r7,r7,r17
 402d354:	3c63803a 	cmpltu	r17,r7,r17
 402d358:	114b883a 	add	r5,r2,r5
 402d35c:	2c4b883a 	add	r5,r5,r17
 402d360:	3823883a 	mov	r17,r7
 402d364:	2880202c 	andhi	r2,r5,128
 402d368:	10002e26 	beq	r2,zero,402d424 <__subdf3+0x334>
 402d36c:	84000044 	addi	r16,r16,1
 402d370:	0081ffc4 	movi	r2,2047
 402d374:	8080de26 	beq	r16,r2,402d6f0 <__subdf3+0x600>
 402d378:	00bfe034 	movhi	r2,65408
 402d37c:	10bfffc4 	addi	r2,r2,-1
 402d380:	288a703a 	and	r5,r5,r2
 402d384:	880cd07a 	srli	r6,r17,1
 402d388:	280897fa 	slli	r4,r5,31
 402d38c:	88c0004c 	andi	r3,r17,1
 402d390:	30e2b03a 	or	r17,r6,r3
 402d394:	280ad07a 	srli	r5,r5,1
 402d398:	8922b03a 	or	r17,r17,r4
 402d39c:	003f7706 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d3a0:	1984b03a 	or	r2,r3,r6
 402d3a4:	103f6e26 	beq	r2,zero,402d160 <__flash_rwdata_start+0xffffc89c>
 402d3a8:	39c03fcc 	andi	r7,r7,255
 402d3ac:	003f6d06 	br	402d164 <__flash_rwdata_start+0xffffc8a0>
 402d3b0:	1146b03a 	or	r3,r2,r5
 402d3b4:	18003f26 	beq	r3,zero,402d4b4 <__subdf3+0x3c4>
 402d3b8:	00c00434 	movhi	r3,16
 402d3bc:	29000234 	orhi	r4,r5,8
 402d3c0:	18ffffc4 	addi	r3,r3,-1
 402d3c4:	20c8703a 	and	r4,r4,r3
 402d3c8:	003f8406 	br	402d1dc <__flash_rwdata_start+0xffffc918>
 402d3cc:	10bfffc4 	addi	r2,r2,-1
 402d3d0:	1000501e 	bne	r2,zero,402d514 <__subdf3+0x424>
 402d3d4:	898fc83a 	sub	r7,r17,r6
 402d3d8:	89e3803a 	cmpltu	r17,r17,r7
 402d3dc:	28cbc83a 	sub	r5,r5,r3
 402d3e0:	2c4bc83a 	sub	r5,r5,r17
 402d3e4:	3823883a 	mov	r17,r7
 402d3e8:	003fa106 	br	402d270 <__flash_rwdata_start+0xffffc9ac>
 402d3ec:	1988b03a 	or	r4,r3,r6
 402d3f0:	203f6226 	beq	r4,zero,402d17c <__flash_rwdata_start+0xffffc8b8>
 402d3f4:	10bfffc4 	addi	r2,r2,-1
 402d3f8:	10009b1e 	bne	r2,zero,402d668 <__subdf3+0x578>
 402d3fc:	344d883a 	add	r6,r6,r17
 402d400:	3463803a 	cmpltu	r17,r6,r17
 402d404:	194b883a 	add	r5,r3,r5
 402d408:	2c4b883a 	add	r5,r5,r17
 402d40c:	3023883a 	mov	r17,r6
 402d410:	003fd406 	br	402d364 <__flash_rwdata_start+0xffffcaa0>
 402d414:	1106b03a 	or	r3,r2,r4
 402d418:	1800b426 	beq	r3,zero,402d6ec <__subdf3+0x5fc>
 402d41c:	100b883a 	mov	r5,r2
 402d420:	2023883a 	mov	r17,r4
 402d424:	888001cc 	andi	r2,r17,7
 402d428:	103f561e 	bne	r2,zero,402d184 <__flash_rwdata_start+0xffffc8c0>
 402d42c:	9200004c 	andi	r8,r18,1
 402d430:	003fb206 	br	402d2fc <__flash_rwdata_start+0xffffca38>
 402d434:	1000531e 	bne	r2,zero,402d584 <__subdf3+0x494>
 402d438:	80800044 	addi	r2,r16,1
 402d43c:	1081ffcc 	andi	r2,r2,2047
 402d440:	01000044 	movi	r4,1
 402d444:	2080a00e 	bge	r4,r2,402d6c8 <__subdf3+0x5d8>
 402d448:	8985c83a 	sub	r2,r17,r6
 402d44c:	8889803a 	cmpltu	r4,r17,r2
 402d450:	28e7c83a 	sub	r19,r5,r3
 402d454:	9927c83a 	sub	r19,r19,r4
 402d458:	9900202c 	andhi	r4,r19,128
 402d45c:	20006226 	beq	r4,zero,402d5e8 <__subdf3+0x4f8>
 402d460:	3463c83a 	sub	r17,r6,r17
 402d464:	194bc83a 	sub	r5,r3,r5
 402d468:	344d803a 	cmpltu	r6,r6,r17
 402d46c:	29a7c83a 	sub	r19,r5,r6
 402d470:	3825883a 	mov	r18,r7
 402d474:	983f841e 	bne	r19,zero,402d288 <__flash_rwdata_start+0xffffc9c4>
 402d478:	8809883a 	mov	r4,r17
 402d47c:	402dbbc0 	call	402dbbc <__clzsi2>
 402d480:	10800804 	addi	r2,r2,32
 402d484:	10fffe04 	addi	r3,r2,-8
 402d488:	010007c4 	movi	r4,31
 402d48c:	20ff830e 	bge	r4,r3,402d29c <__flash_rwdata_start+0xffffc9d8>
 402d490:	14fff604 	addi	r19,r2,-40
 402d494:	8ce6983a 	sll	r19,r17,r19
 402d498:	0023883a 	mov	r17,zero
 402d49c:	1c3f860e 	bge	r3,r16,402d2b8 <__flash_rwdata_start+0xffffc9f4>
 402d4a0:	017fe034 	movhi	r5,65408
 402d4a4:	297fffc4 	addi	r5,r5,-1
 402d4a8:	80e1c83a 	sub	r16,r16,r3
 402d4ac:	994a703a 	and	r5,r19,r5
 402d4b0:	003f3206 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d4b4:	0009883a 	mov	r4,zero
 402d4b8:	0005883a 	mov	r2,zero
 402d4bc:	003f4706 	br	402d1dc <__flash_rwdata_start+0xffffc918>
 402d4c0:	198cb03a 	or	r6,r3,r6
 402d4c4:	300cc03a 	cmpne	r6,r6,zero
 402d4c8:	0005883a 	mov	r2,zero
 402d4cc:	003f6306 	br	402d25c <__flash_rwdata_start+0xffffc998>
 402d4d0:	10009d1e 	bne	r2,zero,402d748 <__subdf3+0x658>
 402d4d4:	81c00044 	addi	r7,r16,1
 402d4d8:	3881ffcc 	andi	r2,r7,2047
 402d4dc:	02400044 	movi	r9,1
 402d4e0:	4880680e 	bge	r9,r2,402d684 <__subdf3+0x594>
 402d4e4:	0081ffc4 	movi	r2,2047
 402d4e8:	3880ae26 	beq	r7,r2,402d7a4 <__subdf3+0x6b4>
 402d4ec:	344d883a 	add	r6,r6,r17
 402d4f0:	3463803a 	cmpltu	r17,r6,r17
 402d4f4:	194b883a 	add	r5,r3,r5
 402d4f8:	2c4b883a 	add	r5,r5,r17
 402d4fc:	282297fa 	slli	r17,r5,31
 402d500:	300cd07a 	srli	r6,r6,1
 402d504:	280ad07a 	srli	r5,r5,1
 402d508:	3821883a 	mov	r16,r7
 402d50c:	89a2b03a 	or	r17,r17,r6
 402d510:	003f1a06 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d514:	0101ffc4 	movi	r4,2047
 402d518:	813f431e 	bne	r16,r4,402d228 <__flash_rwdata_start+0xffffc964>
 402d51c:	003f1706 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d520:	80bff844 	addi	r2,r16,-31
 402d524:	00c00804 	movi	r3,32
 402d528:	9884d83a 	srl	r2,r19,r2
 402d52c:	28c05126 	beq	r5,r3,402d674 <__subdf3+0x584>
 402d530:	00c00fc4 	movi	r3,63
 402d534:	1c21c83a 	sub	r16,r3,r16
 402d538:	9c26983a 	sll	r19,r19,r16
 402d53c:	9c62b03a 	or	r17,r19,r17
 402d540:	8822c03a 	cmpne	r17,r17,zero
 402d544:	88a2b03a 	or	r17,r17,r2
 402d548:	000b883a 	mov	r5,zero
 402d54c:	0021883a 	mov	r16,zero
 402d550:	003fb406 	br	402d424 <__flash_rwdata_start+0xffffcb60>
 402d554:	113ff804 	addi	r4,r2,-32
 402d558:	01c00804 	movi	r7,32
 402d55c:	1908d83a 	srl	r4,r3,r4
 402d560:	11c04626 	beq	r2,r7,402d67c <__subdf3+0x58c>
 402d564:	01c01004 	movi	r7,64
 402d568:	3885c83a 	sub	r2,r7,r2
 402d56c:	1884983a 	sll	r2,r3,r2
 402d570:	118cb03a 	or	r6,r2,r6
 402d574:	300cc03a 	cmpne	r6,r6,zero
 402d578:	310cb03a 	or	r6,r6,r4
 402d57c:	0005883a 	mov	r2,zero
 402d580:	003f3606 	br	402d25c <__flash_rwdata_start+0xffffc998>
 402d584:	80002b26 	beq	r16,zero,402d634 <__subdf3+0x544>
 402d588:	0101ffc4 	movi	r4,2047
 402d58c:	51006926 	beq	r10,r4,402d734 <__subdf3+0x644>
 402d590:	0085c83a 	sub	r2,zero,r2
 402d594:	29402034 	orhi	r5,r5,128
 402d598:	01000e04 	movi	r4,56
 402d59c:	20807d16 	blt	r4,r2,402d794 <__subdf3+0x6a4>
 402d5a0:	010007c4 	movi	r4,31
 402d5a4:	2080d916 	blt	r4,r2,402d90c <__subdf3+0x81c>
 402d5a8:	01000804 	movi	r4,32
 402d5ac:	2089c83a 	sub	r4,r4,r2
 402d5b0:	2912983a 	sll	r9,r5,r4
 402d5b4:	8890d83a 	srl	r8,r17,r2
 402d5b8:	8908983a 	sll	r4,r17,r4
 402d5bc:	2884d83a 	srl	r2,r5,r2
 402d5c0:	4a22b03a 	or	r17,r9,r8
 402d5c4:	2008c03a 	cmpne	r4,r4,zero
 402d5c8:	8922b03a 	or	r17,r17,r4
 402d5cc:	3463c83a 	sub	r17,r6,r17
 402d5d0:	1885c83a 	sub	r2,r3,r2
 402d5d4:	344d803a 	cmpltu	r6,r6,r17
 402d5d8:	118bc83a 	sub	r5,r2,r6
 402d5dc:	5021883a 	mov	r16,r10
 402d5e0:	3825883a 	mov	r18,r7
 402d5e4:	003f2206 	br	402d270 <__flash_rwdata_start+0xffffc9ac>
 402d5e8:	9886b03a 	or	r3,r19,r2
 402d5ec:	18001c1e 	bne	r3,zero,402d660 <__subdf3+0x570>
 402d5f0:	0011883a 	mov	r8,zero
 402d5f4:	000b883a 	mov	r5,zero
 402d5f8:	0023883a 	mov	r17,zero
 402d5fc:	0021883a 	mov	r16,zero
 402d600:	003f3e06 	br	402d2fc <__flash_rwdata_start+0xffffca38>
 402d604:	010007c4 	movi	r4,31
 402d608:	20803c16 	blt	r4,r2,402d6fc <__subdf3+0x60c>
 402d60c:	01000804 	movi	r4,32
 402d610:	2089c83a 	sub	r4,r4,r2
 402d614:	1912983a 	sll	r9,r3,r4
 402d618:	308ed83a 	srl	r7,r6,r2
 402d61c:	3108983a 	sll	r4,r6,r4
 402d620:	1884d83a 	srl	r2,r3,r2
 402d624:	49ceb03a 	or	r7,r9,r7
 402d628:	2008c03a 	cmpne	r4,r4,zero
 402d62c:	390eb03a 	or	r7,r7,r4
 402d630:	003f4706 	br	402d350 <__flash_rwdata_start+0xffffca8c>
 402d634:	2c48b03a 	or	r4,r5,r17
 402d638:	20003e26 	beq	r4,zero,402d734 <__subdf3+0x644>
 402d63c:	0084303a 	nor	r2,zero,r2
 402d640:	10003a1e 	bne	r2,zero,402d72c <__subdf3+0x63c>
 402d644:	3463c83a 	sub	r17,r6,r17
 402d648:	194bc83a 	sub	r5,r3,r5
 402d64c:	344d803a 	cmpltu	r6,r6,r17
 402d650:	298bc83a 	sub	r5,r5,r6
 402d654:	5021883a 	mov	r16,r10
 402d658:	3825883a 	mov	r18,r7
 402d65c:	003f0406 	br	402d270 <__flash_rwdata_start+0xffffc9ac>
 402d660:	1023883a 	mov	r17,r2
 402d664:	003f0706 	br	402d284 <__flash_rwdata_start+0xffffc9c0>
 402d668:	0101ffc4 	movi	r4,2047
 402d66c:	813f331e 	bne	r16,r4,402d33c <__flash_rwdata_start+0xffffca78>
 402d670:	003ec206 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d674:	0027883a 	mov	r19,zero
 402d678:	003fb006 	br	402d53c <__flash_rwdata_start+0xffffcc78>
 402d67c:	0005883a 	mov	r2,zero
 402d680:	003fbb06 	br	402d570 <__flash_rwdata_start+0xffffccac>
 402d684:	2c44b03a 	or	r2,r5,r17
 402d688:	80008b1e 	bne	r16,zero,402d8b8 <__subdf3+0x7c8>
 402d68c:	1000b526 	beq	r2,zero,402d964 <__subdf3+0x874>
 402d690:	1984b03a 	or	r2,r3,r6
 402d694:	103eb926 	beq	r2,zero,402d17c <__flash_rwdata_start+0xffffc8b8>
 402d698:	3449883a 	add	r4,r6,r17
 402d69c:	2463803a 	cmpltu	r17,r4,r17
 402d6a0:	194b883a 	add	r5,r3,r5
 402d6a4:	2c4b883a 	add	r5,r5,r17
 402d6a8:	2880202c 	andhi	r2,r5,128
 402d6ac:	2023883a 	mov	r17,r4
 402d6b0:	103f5c26 	beq	r2,zero,402d424 <__flash_rwdata_start+0xffffcb60>
 402d6b4:	00bfe034 	movhi	r2,65408
 402d6b8:	10bfffc4 	addi	r2,r2,-1
 402d6bc:	4821883a 	mov	r16,r9
 402d6c0:	288a703a 	and	r5,r5,r2
 402d6c4:	003ead06 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d6c8:	2c44b03a 	or	r2,r5,r17
 402d6cc:	8000291e 	bne	r16,zero,402d774 <__subdf3+0x684>
 402d6d0:	10004f1e 	bne	r2,zero,402d810 <__subdf3+0x720>
 402d6d4:	1984b03a 	or	r2,r3,r6
 402d6d8:	10000426 	beq	r2,zero,402d6ec <__subdf3+0x5fc>
 402d6dc:	180b883a 	mov	r5,r3
 402d6e0:	3023883a 	mov	r17,r6
 402d6e4:	3825883a 	mov	r18,r7
 402d6e8:	003ea406 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d6ec:	0011883a 	mov	r8,zero
 402d6f0:	000b883a 	mov	r5,zero
 402d6f4:	0023883a 	mov	r17,zero
 402d6f8:	003f0006 	br	402d2fc <__flash_rwdata_start+0xffffca38>
 402d6fc:	11fff804 	addi	r7,r2,-32
 402d700:	19c8d83a 	srl	r4,r3,r7
 402d704:	01c00804 	movi	r7,32
 402d708:	11c07e26 	beq	r2,r7,402d904 <__subdf3+0x814>
 402d70c:	01c01004 	movi	r7,64
 402d710:	3885c83a 	sub	r2,r7,r2
 402d714:	1884983a 	sll	r2,r3,r2
 402d718:	118cb03a 	or	r6,r2,r6
 402d71c:	300ec03a 	cmpne	r7,r6,zero
 402d720:	390eb03a 	or	r7,r7,r4
 402d724:	0005883a 	mov	r2,zero
 402d728:	003f0906 	br	402d350 <__flash_rwdata_start+0xffffca8c>
 402d72c:	0101ffc4 	movi	r4,2047
 402d730:	513f991e 	bne	r10,r4,402d598 <__flash_rwdata_start+0xffffccd4>
 402d734:	180b883a 	mov	r5,r3
 402d738:	3023883a 	mov	r17,r6
 402d73c:	5021883a 	mov	r16,r10
 402d740:	3825883a 	mov	r18,r7
 402d744:	003e8d06 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d748:	80001a1e 	bne	r16,zero,402d7b4 <__subdf3+0x6c4>
 402d74c:	2c48b03a 	or	r4,r5,r17
 402d750:	20005526 	beq	r4,zero,402d8a8 <__subdf3+0x7b8>
 402d754:	0084303a 	nor	r2,zero,r2
 402d758:	1000511e 	bne	r2,zero,402d8a0 <__subdf3+0x7b0>
 402d75c:	89a3883a 	add	r17,r17,r6
 402d760:	194b883a 	add	r5,r3,r5
 402d764:	898d803a 	cmpltu	r6,r17,r6
 402d768:	298b883a 	add	r5,r5,r6
 402d76c:	5021883a 	mov	r16,r10
 402d770:	003efc06 	br	402d364 <__flash_rwdata_start+0xffffcaa0>
 402d774:	1000341e 	bne	r2,zero,402d848 <__subdf3+0x758>
 402d778:	1984b03a 	or	r2,r3,r6
 402d77c:	10006f26 	beq	r2,zero,402d93c <__subdf3+0x84c>
 402d780:	180b883a 	mov	r5,r3
 402d784:	3023883a 	mov	r17,r6
 402d788:	3825883a 	mov	r18,r7
 402d78c:	0401ffc4 	movi	r16,2047
 402d790:	003e7a06 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d794:	2c62b03a 	or	r17,r5,r17
 402d798:	8822c03a 	cmpne	r17,r17,zero
 402d79c:	0005883a 	mov	r2,zero
 402d7a0:	003f8a06 	br	402d5cc <__flash_rwdata_start+0xffffcd08>
 402d7a4:	3821883a 	mov	r16,r7
 402d7a8:	000b883a 	mov	r5,zero
 402d7ac:	0023883a 	mov	r17,zero
 402d7b0:	003ed206 	br	402d2fc <__flash_rwdata_start+0xffffca38>
 402d7b4:	0101ffc4 	movi	r4,2047
 402d7b8:	51003b26 	beq	r10,r4,402d8a8 <__subdf3+0x7b8>
 402d7bc:	0085c83a 	sub	r2,zero,r2
 402d7c0:	29402034 	orhi	r5,r5,128
 402d7c4:	01000e04 	movi	r4,56
 402d7c8:	20806216 	blt	r4,r2,402d954 <__subdf3+0x864>
 402d7cc:	010007c4 	movi	r4,31
 402d7d0:	20806b16 	blt	r4,r2,402d980 <__subdf3+0x890>
 402d7d4:	01000804 	movi	r4,32
 402d7d8:	2089c83a 	sub	r4,r4,r2
 402d7dc:	2912983a 	sll	r9,r5,r4
 402d7e0:	888ed83a 	srl	r7,r17,r2
 402d7e4:	8908983a 	sll	r4,r17,r4
 402d7e8:	2884d83a 	srl	r2,r5,r2
 402d7ec:	49e2b03a 	or	r17,r9,r7
 402d7f0:	2008c03a 	cmpne	r4,r4,zero
 402d7f4:	8922b03a 	or	r17,r17,r4
 402d7f8:	89a3883a 	add	r17,r17,r6
 402d7fc:	10c5883a 	add	r2,r2,r3
 402d800:	898d803a 	cmpltu	r6,r17,r6
 402d804:	118b883a 	add	r5,r2,r6
 402d808:	5021883a 	mov	r16,r10
 402d80c:	003ed506 	br	402d364 <__flash_rwdata_start+0xffffcaa0>
 402d810:	1984b03a 	or	r2,r3,r6
 402d814:	103e5926 	beq	r2,zero,402d17c <__flash_rwdata_start+0xffffc8b8>
 402d818:	8989c83a 	sub	r4,r17,r6
 402d81c:	8911803a 	cmpltu	r8,r17,r4
 402d820:	28c5c83a 	sub	r2,r5,r3
 402d824:	1205c83a 	sub	r2,r2,r8
 402d828:	1200202c 	andhi	r8,r2,128
 402d82c:	403ef926 	beq	r8,zero,402d414 <__flash_rwdata_start+0xffffcb50>
 402d830:	3463c83a 	sub	r17,r6,r17
 402d834:	194bc83a 	sub	r5,r3,r5
 402d838:	344d803a 	cmpltu	r6,r6,r17
 402d83c:	298bc83a 	sub	r5,r5,r6
 402d840:	3825883a 	mov	r18,r7
 402d844:	003e4d06 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d848:	1984b03a 	or	r2,r3,r6
 402d84c:	10002b26 	beq	r2,zero,402d8fc <__subdf3+0x80c>
 402d850:	2808d0fa 	srli	r4,r5,3
 402d854:	8822d0fa 	srli	r17,r17,3
 402d858:	280a977a 	slli	r5,r5,29
 402d85c:	2080022c 	andhi	r2,r4,8
 402d860:	2c62b03a 	or	r17,r5,r17
 402d864:	10000826 	beq	r2,zero,402d888 <__subdf3+0x798>
 402d868:	1810d0fa 	srli	r8,r3,3
 402d86c:	4080022c 	andhi	r2,r8,8
 402d870:	1000051e 	bne	r2,zero,402d888 <__subdf3+0x798>
 402d874:	300cd0fa 	srli	r6,r6,3
 402d878:	1804977a 	slli	r2,r3,29
 402d87c:	4009883a 	mov	r4,r8
 402d880:	3825883a 	mov	r18,r7
 402d884:	11a2b03a 	or	r17,r2,r6
 402d888:	880ad77a 	srli	r5,r17,29
 402d88c:	200890fa 	slli	r4,r4,3
 402d890:	882290fa 	slli	r17,r17,3
 402d894:	0401ffc4 	movi	r16,2047
 402d898:	290ab03a 	or	r5,r5,r4
 402d89c:	003e3706 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d8a0:	0101ffc4 	movi	r4,2047
 402d8a4:	513fc71e 	bne	r10,r4,402d7c4 <__flash_rwdata_start+0xffffcf00>
 402d8a8:	180b883a 	mov	r5,r3
 402d8ac:	3023883a 	mov	r17,r6
 402d8b0:	5021883a 	mov	r16,r10
 402d8b4:	003e3106 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d8b8:	10002d26 	beq	r2,zero,402d970 <__subdf3+0x880>
 402d8bc:	1984b03a 	or	r2,r3,r6
 402d8c0:	10000e26 	beq	r2,zero,402d8fc <__subdf3+0x80c>
 402d8c4:	2808d0fa 	srli	r4,r5,3
 402d8c8:	8822d0fa 	srli	r17,r17,3
 402d8cc:	280a977a 	slli	r5,r5,29
 402d8d0:	2080022c 	andhi	r2,r4,8
 402d8d4:	2c62b03a 	or	r17,r5,r17
 402d8d8:	103feb26 	beq	r2,zero,402d888 <__flash_rwdata_start+0xffffcfc4>
 402d8dc:	180ed0fa 	srli	r7,r3,3
 402d8e0:	3880022c 	andhi	r2,r7,8
 402d8e4:	103fe81e 	bne	r2,zero,402d888 <__flash_rwdata_start+0xffffcfc4>
 402d8e8:	300cd0fa 	srli	r6,r6,3
 402d8ec:	1804977a 	slli	r2,r3,29
 402d8f0:	3809883a 	mov	r4,r7
 402d8f4:	11a2b03a 	or	r17,r2,r6
 402d8f8:	003fe306 	br	402d888 <__flash_rwdata_start+0xffffcfc4>
 402d8fc:	0401ffc4 	movi	r16,2047
 402d900:	003e1e06 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d904:	0005883a 	mov	r2,zero
 402d908:	003f8306 	br	402d718 <__flash_rwdata_start+0xffffce54>
 402d90c:	113ff804 	addi	r4,r2,-32
 402d910:	02000804 	movi	r8,32
 402d914:	2908d83a 	srl	r4,r5,r4
 402d918:	12002526 	beq	r2,r8,402d9b0 <__subdf3+0x8c0>
 402d91c:	02001004 	movi	r8,64
 402d920:	4085c83a 	sub	r2,r8,r2
 402d924:	288a983a 	sll	r5,r5,r2
 402d928:	2c62b03a 	or	r17,r5,r17
 402d92c:	8822c03a 	cmpne	r17,r17,zero
 402d930:	8922b03a 	or	r17,r17,r4
 402d934:	0005883a 	mov	r2,zero
 402d938:	003f2406 	br	402d5cc <__flash_rwdata_start+0xffffcd08>
 402d93c:	01402034 	movhi	r5,128
 402d940:	0011883a 	mov	r8,zero
 402d944:	297fffc4 	addi	r5,r5,-1
 402d948:	047ffe04 	movi	r17,-8
 402d94c:	0401ffc4 	movi	r16,2047
 402d950:	003e6a06 	br	402d2fc <__flash_rwdata_start+0xffffca38>
 402d954:	2c62b03a 	or	r17,r5,r17
 402d958:	8822c03a 	cmpne	r17,r17,zero
 402d95c:	0005883a 	mov	r2,zero
 402d960:	003fa506 	br	402d7f8 <__flash_rwdata_start+0xffffcf34>
 402d964:	180b883a 	mov	r5,r3
 402d968:	3023883a 	mov	r17,r6
 402d96c:	003e0306 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d970:	180b883a 	mov	r5,r3
 402d974:	3023883a 	mov	r17,r6
 402d978:	0401ffc4 	movi	r16,2047
 402d97c:	003dff06 	br	402d17c <__flash_rwdata_start+0xffffc8b8>
 402d980:	113ff804 	addi	r4,r2,-32
 402d984:	01c00804 	movi	r7,32
 402d988:	2908d83a 	srl	r4,r5,r4
 402d98c:	11c00a26 	beq	r2,r7,402d9b8 <__subdf3+0x8c8>
 402d990:	01c01004 	movi	r7,64
 402d994:	3885c83a 	sub	r2,r7,r2
 402d998:	288a983a 	sll	r5,r5,r2
 402d99c:	2c62b03a 	or	r17,r5,r17
 402d9a0:	8822c03a 	cmpne	r17,r17,zero
 402d9a4:	8922b03a 	or	r17,r17,r4
 402d9a8:	0005883a 	mov	r2,zero
 402d9ac:	003f9206 	br	402d7f8 <__flash_rwdata_start+0xffffcf34>
 402d9b0:	000b883a 	mov	r5,zero
 402d9b4:	003fdc06 	br	402d928 <__flash_rwdata_start+0xffffd064>
 402d9b8:	000b883a 	mov	r5,zero
 402d9bc:	003ff706 	br	402d99c <__flash_rwdata_start+0xffffd0d8>

0402d9c0 <__fixdfsi>:
 402d9c0:	2806d53a 	srli	r3,r5,20
 402d9c4:	00800434 	movhi	r2,16
 402d9c8:	10bfffc4 	addi	r2,r2,-1
 402d9cc:	18c1ffcc 	andi	r3,r3,2047
 402d9d0:	0180ff84 	movi	r6,1022
 402d9d4:	2884703a 	and	r2,r5,r2
 402d9d8:	280ad7fa 	srli	r5,r5,31
 402d9dc:	30c0130e 	bge	r6,r3,402da2c <__fixdfsi+0x6c>
 402d9e0:	01810744 	movi	r6,1053
 402d9e4:	30c00d16 	blt	r6,r3,402da1c <__fixdfsi+0x5c>
 402d9e8:	01810cc4 	movi	r6,1075
 402d9ec:	30cdc83a 	sub	r6,r6,r3
 402d9f0:	01c007c4 	movi	r7,31
 402d9f4:	10800434 	orhi	r2,r2,16
 402d9f8:	39800e0e 	bge	r7,r6,402da34 <__fixdfsi+0x74>
 402d9fc:	010104c4 	movi	r4,1043
 402da00:	20c7c83a 	sub	r3,r4,r3
 402da04:	10c6d83a 	srl	r3,r2,r3
 402da08:	29403fcc 	andi	r5,r5,255
 402da0c:	0145c83a 	sub	r2,zero,r5
 402da10:	1884f03a 	xor	r2,r3,r2
 402da14:	1145883a 	add	r2,r2,r5
 402da18:	f800283a 	ret
 402da1c:	00a00034 	movhi	r2,32768
 402da20:	10bfffc4 	addi	r2,r2,-1
 402da24:	2885883a 	add	r2,r5,r2
 402da28:	f800283a 	ret
 402da2c:	0005883a 	mov	r2,zero
 402da30:	f800283a 	ret
 402da34:	18fefb44 	addi	r3,r3,-1043
 402da38:	2188d83a 	srl	r4,r4,r6
 402da3c:	10c6983a 	sll	r3,r2,r3
 402da40:	20c6b03a 	or	r3,r4,r3
 402da44:	003ff006 	br	402da08 <__flash_rwdata_start+0xffffd144>

0402da48 <__floatsidf>:
 402da48:	defffd04 	addi	sp,sp,-12
 402da4c:	dc400115 	stw	r17,4(sp)
 402da50:	dfc00215 	stw	ra,8(sp)
 402da54:	dc000015 	stw	r16,0(sp)
 402da58:	2023883a 	mov	r17,r4
 402da5c:	20001426 	beq	r4,zero,402dab0 <__floatsidf+0x68>
 402da60:	2020d7fa 	srli	r16,r4,31
 402da64:	80000126 	beq	r16,zero,402da6c <__floatsidf+0x24>
 402da68:	0123c83a 	sub	r17,zero,r4
 402da6c:	8809883a 	mov	r4,r17
 402da70:	402dbbc0 	call	402dbbc <__clzsi2>
 402da74:	01410784 	movi	r5,1054
 402da78:	00c00284 	movi	r3,10
 402da7c:	288bc83a 	sub	r5,r5,r2
 402da80:	18801c16 	blt	r3,r2,402daf4 <__floatsidf+0xac>
 402da84:	00c002c4 	movi	r3,11
 402da88:	1887c83a 	sub	r3,r3,r2
 402da8c:	88c8d83a 	srl	r4,r17,r3
 402da90:	00c00434 	movhi	r3,16
 402da94:	18ffffc4 	addi	r3,r3,-1
 402da98:	10800544 	addi	r2,r2,21
 402da9c:	20c8703a 	and	r4,r4,r3
 402daa0:	8884983a 	sll	r2,r17,r2
 402daa4:	28c1ffcc 	andi	r3,r5,2047
 402daa8:	800d883a 	mov	r6,r16
 402daac:	00000406 	br	402dac0 <__floatsidf+0x78>
 402dab0:	000d883a 	mov	r6,zero
 402dab4:	0007883a 	mov	r3,zero
 402dab8:	0009883a 	mov	r4,zero
 402dabc:	0005883a 	mov	r2,zero
 402dac0:	180a953a 	slli	r5,r3,20
 402dac4:	31803fcc 	andi	r6,r6,255
 402dac8:	00c00434 	movhi	r3,16
 402dacc:	300c97fa 	slli	r6,r6,31
 402dad0:	18ffffc4 	addi	r3,r3,-1
 402dad4:	20c6703a 	and	r3,r4,r3
 402dad8:	1946b03a 	or	r3,r3,r5
 402dadc:	1986b03a 	or	r3,r3,r6
 402dae0:	dfc00217 	ldw	ra,8(sp)
 402dae4:	dc400117 	ldw	r17,4(sp)
 402dae8:	dc000017 	ldw	r16,0(sp)
 402daec:	dec00304 	addi	sp,sp,12
 402daf0:	f800283a 	ret
 402daf4:	10fffd44 	addi	r3,r2,-11
 402daf8:	88c8983a 	sll	r4,r17,r3
 402dafc:	00800434 	movhi	r2,16
 402db00:	10bfffc4 	addi	r2,r2,-1
 402db04:	2088703a 	and	r4,r4,r2
 402db08:	28c1ffcc 	andi	r3,r5,2047
 402db0c:	800d883a 	mov	r6,r16
 402db10:	0005883a 	mov	r2,zero
 402db14:	003fea06 	br	402dac0 <__flash_rwdata_start+0xffffd1fc>

0402db18 <__floatunsidf>:
 402db18:	defffe04 	addi	sp,sp,-8
 402db1c:	dc000015 	stw	r16,0(sp)
 402db20:	dfc00115 	stw	ra,4(sp)
 402db24:	2021883a 	mov	r16,r4
 402db28:	20001026 	beq	r4,zero,402db6c <__floatunsidf+0x54>
 402db2c:	402dbbc0 	call	402dbbc <__clzsi2>
 402db30:	01410784 	movi	r5,1054
 402db34:	100d883a 	mov	r6,r2
 402db38:	288bc83a 	sub	r5,r5,r2
 402db3c:	00800284 	movi	r2,10
 402db40:	11801616 	blt	r2,r6,402db9c <__floatunsidf+0x84>
 402db44:	008002c4 	movi	r2,11
 402db48:	1185c83a 	sub	r2,r2,r6
 402db4c:	8084d83a 	srl	r2,r16,r2
 402db50:	00c00434 	movhi	r3,16
 402db54:	31c00544 	addi	r7,r6,21
 402db58:	18ffffc4 	addi	r3,r3,-1
 402db5c:	81e0983a 	sll	r16,r16,r7
 402db60:	10cc703a 	and	r6,r2,r3
 402db64:	2941ffcc 	andi	r5,r5,2047
 402db68:	00000206 	br	402db74 <__floatunsidf+0x5c>
 402db6c:	000b883a 	mov	r5,zero
 402db70:	000d883a 	mov	r6,zero
 402db74:	280a953a 	slli	r5,r5,20
 402db78:	00c00434 	movhi	r3,16
 402db7c:	18ffffc4 	addi	r3,r3,-1
 402db80:	30c6703a 	and	r3,r6,r3
 402db84:	8005883a 	mov	r2,r16
 402db88:	1946b03a 	or	r3,r3,r5
 402db8c:	dfc00117 	ldw	ra,4(sp)
 402db90:	dc000017 	ldw	r16,0(sp)
 402db94:	dec00204 	addi	sp,sp,8
 402db98:	f800283a 	ret
 402db9c:	31bffd44 	addi	r6,r6,-11
 402dba0:	818c983a 	sll	r6,r16,r6
 402dba4:	00800434 	movhi	r2,16
 402dba8:	10bfffc4 	addi	r2,r2,-1
 402dbac:	2941ffcc 	andi	r5,r5,2047
 402dbb0:	0021883a 	mov	r16,zero
 402dbb4:	308c703a 	and	r6,r6,r2
 402dbb8:	003fee06 	br	402db74 <__flash_rwdata_start+0xffffd2b0>

0402dbbc <__clzsi2>:
 402dbbc:	00bfffd4 	movui	r2,65535
 402dbc0:	11000b36 	bltu	r2,r4,402dbf0 <__clzsi2+0x34>
 402dbc4:	00803fc4 	movi	r2,255
 402dbc8:	1100122e 	bgeu	r2,r4,402dc14 <__clzsi2+0x58>
 402dbcc:	00c00204 	movi	r3,8
 402dbd0:	01400604 	movi	r5,24
 402dbd4:	20c8d83a 	srl	r4,r4,r3
 402dbd8:	00800034 	movhi	r2,0
 402dbdc:	10808804 	addi	r2,r2,544
 402dbe0:	1109883a 	add	r4,r2,r4
 402dbe4:	20800003 	ldbu	r2,0(r4)
 402dbe8:	2885c83a 	sub	r2,r5,r2
 402dbec:	f800283a 	ret
 402dbf0:	00804034 	movhi	r2,256
 402dbf4:	10bfffc4 	addi	r2,r2,-1
 402dbf8:	11000336 	bltu	r2,r4,402dc08 <__clzsi2+0x4c>
 402dbfc:	00c00404 	movi	r3,16
 402dc00:	180b883a 	mov	r5,r3
 402dc04:	003ff306 	br	402dbd4 <__flash_rwdata_start+0xffffd310>
 402dc08:	00c00604 	movi	r3,24
 402dc0c:	01400204 	movi	r5,8
 402dc10:	003ff006 	br	402dbd4 <__flash_rwdata_start+0xffffd310>
 402dc14:	0007883a 	mov	r3,zero
 402dc18:	01400804 	movi	r5,32
 402dc1c:	003fed06 	br	402dbd4 <__flash_rwdata_start+0xffffd310>

0402dc20 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402dc20:	defffe04 	addi	sp,sp,-8
 402dc24:	dfc00115 	stw	ra,4(sp)
 402dc28:	df000015 	stw	fp,0(sp)
 402dc2c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402dc30:	00800034 	movhi	r2,0
 402dc34:	10879004 	addi	r2,r2,7744
 402dc38:	10800017 	ldw	r2,0(r2)
 402dc3c:	10000526 	beq	r2,zero,402dc54 <alt_get_errno+0x34>
 402dc40:	00800034 	movhi	r2,0
 402dc44:	10879004 	addi	r2,r2,7744
 402dc48:	10800017 	ldw	r2,0(r2)
 402dc4c:	103ee83a 	callr	r2
 402dc50:	00000206 	br	402dc5c <alt_get_errno+0x3c>
 402dc54:	00800034 	movhi	r2,0
 402dc58:	10879e04 	addi	r2,r2,7800
}
 402dc5c:	e037883a 	mov	sp,fp
 402dc60:	dfc00117 	ldw	ra,4(sp)
 402dc64:	df000017 	ldw	fp,0(sp)
 402dc68:	dec00204 	addi	sp,sp,8
 402dc6c:	f800283a 	ret

0402dc70 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 402dc70:	defffb04 	addi	sp,sp,-20
 402dc74:	dfc00415 	stw	ra,16(sp)
 402dc78:	df000315 	stw	fp,12(sp)
 402dc7c:	df000304 	addi	fp,sp,12
 402dc80:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 402dc84:	e0bfff17 	ldw	r2,-4(fp)
 402dc88:	10000816 	blt	r2,zero,402dcac <close+0x3c>
 402dc8c:	e13fff17 	ldw	r4,-4(fp)
 402dc90:	01400304 	movi	r5,12
 402dc94:	402110c0 	call	402110c <__mulsi3>
 402dc98:	1007883a 	mov	r3,r2
 402dc9c:	00800034 	movhi	r2,0
 402dca0:	10830604 	addi	r2,r2,3096
 402dca4:	1885883a 	add	r2,r3,r2
 402dca8:	00000106 	br	402dcb0 <close+0x40>
 402dcac:	0005883a 	mov	r2,zero
 402dcb0:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 402dcb4:	e0bffd17 	ldw	r2,-12(fp)
 402dcb8:	10001926 	beq	r2,zero,402dd20 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 402dcbc:	e0bffd17 	ldw	r2,-12(fp)
 402dcc0:	10800017 	ldw	r2,0(r2)
 402dcc4:	10800417 	ldw	r2,16(r2)
 402dcc8:	10000626 	beq	r2,zero,402dce4 <close+0x74>
 402dccc:	e0bffd17 	ldw	r2,-12(fp)
 402dcd0:	10800017 	ldw	r2,0(r2)
 402dcd4:	10800417 	ldw	r2,16(r2)
 402dcd8:	e13ffd17 	ldw	r4,-12(fp)
 402dcdc:	103ee83a 	callr	r2
 402dce0:	00000106 	br	402dce8 <close+0x78>
 402dce4:	0005883a 	mov	r2,zero
 402dce8:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 402dcec:	e13fff17 	ldw	r4,-4(fp)
 402dcf0:	402e6800 	call	402e680 <alt_release_fd>
    if (rval < 0)
 402dcf4:	e0bffe17 	ldw	r2,-8(fp)
 402dcf8:	1000070e 	bge	r2,zero,402dd18 <close+0xa8>
    {
      ALT_ERRNO = -rval;
 402dcfc:	402dc200 	call	402dc20 <alt_get_errno>
 402dd00:	1007883a 	mov	r3,r2
 402dd04:	e0bffe17 	ldw	r2,-8(fp)
 402dd08:	0085c83a 	sub	r2,zero,r2
 402dd0c:	18800015 	stw	r2,0(r3)
      return -1;
 402dd10:	00bfffc4 	movi	r2,-1
 402dd14:	00000706 	br	402dd34 <close+0xc4>
    }
    return 0;
 402dd18:	0005883a 	mov	r2,zero
 402dd1c:	00000506 	br	402dd34 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 402dd20:	402dc200 	call	402dc20 <alt_get_errno>
 402dd24:	1007883a 	mov	r3,r2
 402dd28:	00801444 	movi	r2,81
 402dd2c:	18800015 	stw	r2,0(r3)
    return -1;
 402dd30:	00bfffc4 	movi	r2,-1
  }
}
 402dd34:	e037883a 	mov	sp,fp
 402dd38:	dfc00117 	ldw	ra,4(sp)
 402dd3c:	df000017 	ldw	fp,0(sp)
 402dd40:	dec00204 	addi	sp,sp,8
 402dd44:	f800283a 	ret

0402dd48 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 402dd48:	deffff04 	addi	sp,sp,-4
 402dd4c:	df000015 	stw	fp,0(sp)
 402dd50:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 402dd54:	e037883a 	mov	sp,fp
 402dd58:	df000017 	ldw	fp,0(sp)
 402dd5c:	dec00104 	addi	sp,sp,4
 402dd60:	f800283a 	ret

0402dd64 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 402dd64:	defffc04 	addi	sp,sp,-16
 402dd68:	df000315 	stw	fp,12(sp)
 402dd6c:	df000304 	addi	fp,sp,12
 402dd70:	e13ffd15 	stw	r4,-12(fp)
 402dd74:	e17ffe15 	stw	r5,-8(fp)
 402dd78:	e1bfff15 	stw	r6,-4(fp)
  return len;
 402dd7c:	e0bfff17 	ldw	r2,-4(fp)
}
 402dd80:	e037883a 	mov	sp,fp
 402dd84:	df000017 	ldw	fp,0(sp)
 402dd88:	dec00104 	addi	sp,sp,4
 402dd8c:	f800283a 	ret

0402dd90 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402dd90:	defffe04 	addi	sp,sp,-8
 402dd94:	dfc00115 	stw	ra,4(sp)
 402dd98:	df000015 	stw	fp,0(sp)
 402dd9c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402dda0:	00800034 	movhi	r2,0
 402dda4:	10879004 	addi	r2,r2,7744
 402dda8:	10800017 	ldw	r2,0(r2)
 402ddac:	10000526 	beq	r2,zero,402ddc4 <alt_get_errno+0x34>
 402ddb0:	00800034 	movhi	r2,0
 402ddb4:	10879004 	addi	r2,r2,7744
 402ddb8:	10800017 	ldw	r2,0(r2)
 402ddbc:	103ee83a 	callr	r2
 402ddc0:	00000206 	br	402ddcc <alt_get_errno+0x3c>
 402ddc4:	00800034 	movhi	r2,0
 402ddc8:	10879e04 	addi	r2,r2,7800
}
 402ddcc:	e037883a 	mov	sp,fp
 402ddd0:	dfc00117 	ldw	ra,4(sp)
 402ddd4:	df000017 	ldw	fp,0(sp)
 402ddd8:	dec00204 	addi	sp,sp,8
 402dddc:	f800283a 	ret

0402dde0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 402dde0:	defffb04 	addi	sp,sp,-20
 402dde4:	dfc00415 	stw	ra,16(sp)
 402dde8:	df000315 	stw	fp,12(sp)
 402ddec:	df000304 	addi	fp,sp,12
 402ddf0:	e13ffe15 	stw	r4,-8(fp)
 402ddf4:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402ddf8:	e0bffe17 	ldw	r2,-8(fp)
 402ddfc:	10000816 	blt	r2,zero,402de20 <fstat+0x40>
 402de00:	e13ffe17 	ldw	r4,-8(fp)
 402de04:	01400304 	movi	r5,12
 402de08:	402110c0 	call	402110c <__mulsi3>
 402de0c:	1007883a 	mov	r3,r2
 402de10:	00800034 	movhi	r2,0
 402de14:	10830604 	addi	r2,r2,3096
 402de18:	1885883a 	add	r2,r3,r2
 402de1c:	00000106 	br	402de24 <fstat+0x44>
 402de20:	0005883a 	mov	r2,zero
 402de24:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 402de28:	e0bffd17 	ldw	r2,-12(fp)
 402de2c:	10001026 	beq	r2,zero,402de70 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 402de30:	e0bffd17 	ldw	r2,-12(fp)
 402de34:	10800017 	ldw	r2,0(r2)
 402de38:	10800817 	ldw	r2,32(r2)
 402de3c:	10000726 	beq	r2,zero,402de5c <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 402de40:	e0bffd17 	ldw	r2,-12(fp)
 402de44:	10800017 	ldw	r2,0(r2)
 402de48:	10800817 	ldw	r2,32(r2)
 402de4c:	e13ffd17 	ldw	r4,-12(fp)
 402de50:	e17fff17 	ldw	r5,-4(fp)
 402de54:	103ee83a 	callr	r2
 402de58:	00000a06 	br	402de84 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 402de5c:	e0bfff17 	ldw	r2,-4(fp)
 402de60:	00c80004 	movi	r3,8192
 402de64:	10c00115 	stw	r3,4(r2)
      return 0;
 402de68:	0005883a 	mov	r2,zero
 402de6c:	00000506 	br	402de84 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 402de70:	402dd900 	call	402dd90 <alt_get_errno>
 402de74:	1007883a 	mov	r3,r2
 402de78:	00801444 	movi	r2,81
 402de7c:	18800015 	stw	r2,0(r3)
    return -1;
 402de80:	00bfffc4 	movi	r2,-1
  }
}
 402de84:	e037883a 	mov	sp,fp
 402de88:	dfc00117 	ldw	ra,4(sp)
 402de8c:	df000017 	ldw	fp,0(sp)
 402de90:	dec00204 	addi	sp,sp,8
 402de94:	f800283a 	ret

0402de98 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 402de98:	defff904 	addi	sp,sp,-28
 402de9c:	dfc00615 	stw	ra,24(sp)
 402dea0:	df000515 	stw	fp,20(sp)
 402dea4:	df000504 	addi	fp,sp,20
 402dea8:	e13ffc15 	stw	r4,-16(fp)
 402deac:	e17ffd15 	stw	r5,-12(fp)
 402deb0:	e1bffe15 	stw	r6,-8(fp)
 402deb4:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 402deb8:	e0800217 	ldw	r2,8(fp)
 402debc:	d8800015 	stw	r2,0(sp)
 402dec0:	e13ffc17 	ldw	r4,-16(fp)
 402dec4:	e17ffd17 	ldw	r5,-12(fp)
 402dec8:	e1bffe17 	ldw	r6,-8(fp)
 402decc:	e1ffff17 	ldw	r7,-4(fp)
 402ded0:	402e0780 	call	402e078 <alt_iic_isr_register>
}  
 402ded4:	e037883a 	mov	sp,fp
 402ded8:	dfc00117 	ldw	ra,4(sp)
 402dedc:	df000017 	ldw	fp,0(sp)
 402dee0:	dec00204 	addi	sp,sp,8
 402dee4:	f800283a 	ret

0402dee8 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 402dee8:	defff904 	addi	sp,sp,-28
 402deec:	df000615 	stw	fp,24(sp)
 402def0:	df000604 	addi	fp,sp,24
 402def4:	e13ffe15 	stw	r4,-8(fp)
 402def8:	e17fff15 	stw	r5,-4(fp)
 402defc:	e0bfff17 	ldw	r2,-4(fp)
 402df00:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402df04:	0005303a 	rdctl	r2,status
 402df08:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402df0c:	e0fffb17 	ldw	r3,-20(fp)
 402df10:	00bfff84 	movi	r2,-2
 402df14:	1884703a 	and	r2,r3,r2
 402df18:	1001703a 	wrctl	status,r2
  
  return context;
 402df1c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 402df20:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 402df24:	e0bffa17 	ldw	r2,-24(fp)
 402df28:	00c00044 	movi	r3,1
 402df2c:	1884983a 	sll	r2,r3,r2
 402df30:	1007883a 	mov	r3,r2
 402df34:	00800034 	movhi	r2,0
 402df38:	10879f04 	addi	r2,r2,7804
 402df3c:	10800017 	ldw	r2,0(r2)
 402df40:	1886b03a 	or	r3,r3,r2
 402df44:	00800034 	movhi	r2,0
 402df48:	10879f04 	addi	r2,r2,7804
 402df4c:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 402df50:	00800034 	movhi	r2,0
 402df54:	10879f04 	addi	r2,r2,7804
 402df58:	10800017 	ldw	r2,0(r2)
 402df5c:	100170fa 	wrctl	ienable,r2
 402df60:	e0bffc17 	ldw	r2,-16(fp)
 402df64:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402df68:	e0bffd17 	ldw	r2,-12(fp)
 402df6c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 402df70:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 402df74:	0001883a 	nop
}
 402df78:	e037883a 	mov	sp,fp
 402df7c:	df000017 	ldw	fp,0(sp)
 402df80:	dec00104 	addi	sp,sp,4
 402df84:	f800283a 	ret

0402df88 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 402df88:	defff904 	addi	sp,sp,-28
 402df8c:	df000615 	stw	fp,24(sp)
 402df90:	df000604 	addi	fp,sp,24
 402df94:	e13ffe15 	stw	r4,-8(fp)
 402df98:	e17fff15 	stw	r5,-4(fp)
 402df9c:	e0bfff17 	ldw	r2,-4(fp)
 402dfa0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402dfa4:	0005303a 	rdctl	r2,status
 402dfa8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402dfac:	e0fffb17 	ldw	r3,-20(fp)
 402dfb0:	00bfff84 	movi	r2,-2
 402dfb4:	1884703a 	and	r2,r3,r2
 402dfb8:	1001703a 	wrctl	status,r2
  
  return context;
 402dfbc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 402dfc0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 402dfc4:	e0bffa17 	ldw	r2,-24(fp)
 402dfc8:	00c00044 	movi	r3,1
 402dfcc:	1884983a 	sll	r2,r3,r2
 402dfd0:	0084303a 	nor	r2,zero,r2
 402dfd4:	1007883a 	mov	r3,r2
 402dfd8:	00800034 	movhi	r2,0
 402dfdc:	10879f04 	addi	r2,r2,7804
 402dfe0:	10800017 	ldw	r2,0(r2)
 402dfe4:	1886703a 	and	r3,r3,r2
 402dfe8:	00800034 	movhi	r2,0
 402dfec:	10879f04 	addi	r2,r2,7804
 402dff0:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 402dff4:	00800034 	movhi	r2,0
 402dff8:	10879f04 	addi	r2,r2,7804
 402dffc:	10800017 	ldw	r2,0(r2)
 402e000:	100170fa 	wrctl	ienable,r2
 402e004:	e0bffc17 	ldw	r2,-16(fp)
 402e008:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402e00c:	e0bffd17 	ldw	r2,-12(fp)
 402e010:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 402e014:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 402e018:	0001883a 	nop
}
 402e01c:	e037883a 	mov	sp,fp
 402e020:	df000017 	ldw	fp,0(sp)
 402e024:	dec00104 	addi	sp,sp,4
 402e028:	f800283a 	ret

0402e02c <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 402e02c:	defffc04 	addi	sp,sp,-16
 402e030:	df000315 	stw	fp,12(sp)
 402e034:	df000304 	addi	fp,sp,12
 402e038:	e13ffe15 	stw	r4,-8(fp)
 402e03c:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 402e040:	000530fa 	rdctl	r2,ienable
 402e044:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 402e048:	e0bfff17 	ldw	r2,-4(fp)
 402e04c:	00c00044 	movi	r3,1
 402e050:	1884983a 	sll	r2,r3,r2
 402e054:	1007883a 	mov	r3,r2
 402e058:	e0bffd17 	ldw	r2,-12(fp)
 402e05c:	1884703a 	and	r2,r3,r2
 402e060:	1004c03a 	cmpne	r2,r2,zero
 402e064:	10803fcc 	andi	r2,r2,255
}
 402e068:	e037883a 	mov	sp,fp
 402e06c:	df000017 	ldw	fp,0(sp)
 402e070:	dec00104 	addi	sp,sp,4
 402e074:	f800283a 	ret

0402e078 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 402e078:	defff504 	addi	sp,sp,-44
 402e07c:	dfc00a15 	stw	ra,40(sp)
 402e080:	df000915 	stw	fp,36(sp)
 402e084:	df000904 	addi	fp,sp,36
 402e088:	e13ffc15 	stw	r4,-16(fp)
 402e08c:	e17ffd15 	stw	r5,-12(fp)
 402e090:	e1bffe15 	stw	r6,-8(fp)
 402e094:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 402e098:	00bffa84 	movi	r2,-22
 402e09c:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 402e0a0:	e0bffd17 	ldw	r2,-12(fp)
 402e0a4:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 402e0a8:	e0bff817 	ldw	r2,-32(fp)
 402e0ac:	10800808 	cmpgei	r2,r2,32
 402e0b0:	1000271e 	bne	r2,zero,402e150 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402e0b4:	0005303a 	rdctl	r2,status
 402e0b8:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402e0bc:	e0fffa17 	ldw	r3,-24(fp)
 402e0c0:	00bfff84 	movi	r2,-2
 402e0c4:	1884703a 	and	r2,r3,r2
 402e0c8:	1001703a 	wrctl	status,r2
  
  return context;
 402e0cc:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 402e0d0:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
 402e0d4:	00800034 	movhi	r2,0
 402e0d8:	1087af04 	addi	r2,r2,7868
 402e0dc:	e0fff817 	ldw	r3,-32(fp)
 402e0e0:	180690fa 	slli	r3,r3,3
 402e0e4:	10c5883a 	add	r2,r2,r3
 402e0e8:	e0fffe17 	ldw	r3,-8(fp)
 402e0ec:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 402e0f0:	00800034 	movhi	r2,0
 402e0f4:	1087af04 	addi	r2,r2,7868
 402e0f8:	e0fff817 	ldw	r3,-32(fp)
 402e0fc:	180690fa 	slli	r3,r3,3
 402e100:	18c00104 	addi	r3,r3,4
 402e104:	10c5883a 	add	r2,r2,r3
 402e108:	e0ffff17 	ldw	r3,-4(fp)
 402e10c:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 402e110:	e0bffe17 	ldw	r2,-8(fp)
 402e114:	10000526 	beq	r2,zero,402e12c <alt_iic_isr_register+0xb4>
 402e118:	e0bff817 	ldw	r2,-32(fp)
 402e11c:	e13ffc17 	ldw	r4,-16(fp)
 402e120:	100b883a 	mov	r5,r2
 402e124:	402dee80 	call	402dee8 <alt_ic_irq_enable>
 402e128:	00000406 	br	402e13c <alt_iic_isr_register+0xc4>
 402e12c:	e0bff817 	ldw	r2,-32(fp)
 402e130:	e13ffc17 	ldw	r4,-16(fp)
 402e134:	100b883a 	mov	r5,r2
 402e138:	402df880 	call	402df88 <alt_ic_irq_disable>
 402e13c:	e0bff715 	stw	r2,-36(fp)
 402e140:	e0bff917 	ldw	r2,-28(fp)
 402e144:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402e148:	e0bffb17 	ldw	r2,-20(fp)
 402e14c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 402e150:	e0bff717 	ldw	r2,-36(fp)
}
 402e154:	e037883a 	mov	sp,fp
 402e158:	dfc00117 	ldw	ra,4(sp)
 402e15c:	df000017 	ldw	fp,0(sp)
 402e160:	dec00204 	addi	sp,sp,8
 402e164:	f800283a 	ret

0402e168 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402e168:	defffe04 	addi	sp,sp,-8
 402e16c:	dfc00115 	stw	ra,4(sp)
 402e170:	df000015 	stw	fp,0(sp)
 402e174:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402e178:	00800034 	movhi	r2,0
 402e17c:	10879004 	addi	r2,r2,7744
 402e180:	10800017 	ldw	r2,0(r2)
 402e184:	10000526 	beq	r2,zero,402e19c <alt_get_errno+0x34>
 402e188:	00800034 	movhi	r2,0
 402e18c:	10879004 	addi	r2,r2,7744
 402e190:	10800017 	ldw	r2,0(r2)
 402e194:	103ee83a 	callr	r2
 402e198:	00000206 	br	402e1a4 <alt_get_errno+0x3c>
 402e19c:	00800034 	movhi	r2,0
 402e1a0:	10879e04 	addi	r2,r2,7800
}
 402e1a4:	e037883a 	mov	sp,fp
 402e1a8:	dfc00117 	ldw	ra,4(sp)
 402e1ac:	df000017 	ldw	fp,0(sp)
 402e1b0:	dec00204 	addi	sp,sp,8
 402e1b4:	f800283a 	ret

0402e1b8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 402e1b8:	deffed04 	addi	sp,sp,-76
 402e1bc:	dfc01215 	stw	ra,72(sp)
 402e1c0:	df001115 	stw	fp,68(sp)
 402e1c4:	df001104 	addi	fp,sp,68
 402e1c8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402e1cc:	e0bfff17 	ldw	r2,-4(fp)
 402e1d0:	10000816 	blt	r2,zero,402e1f4 <isatty+0x3c>
 402e1d4:	e13fff17 	ldw	r4,-4(fp)
 402e1d8:	01400304 	movi	r5,12
 402e1dc:	402110c0 	call	402110c <__mulsi3>
 402e1e0:	1007883a 	mov	r3,r2
 402e1e4:	00800034 	movhi	r2,0
 402e1e8:	10830604 	addi	r2,r2,3096
 402e1ec:	1885883a 	add	r2,r3,r2
 402e1f0:	00000106 	br	402e1f8 <isatty+0x40>
 402e1f4:	0005883a 	mov	r2,zero
 402e1f8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 402e1fc:	e0bfef17 	ldw	r2,-68(fp)
 402e200:	10000e26 	beq	r2,zero,402e23c <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 402e204:	e0bfef17 	ldw	r2,-68(fp)
 402e208:	10800017 	ldw	r2,0(r2)
 402e20c:	10800817 	ldw	r2,32(r2)
 402e210:	1000021e 	bne	r2,zero,402e21c <isatty+0x64>
    {
      return 1;
 402e214:	00800044 	movi	r2,1
 402e218:	00000d06 	br	402e250 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 402e21c:	e0bff004 	addi	r2,fp,-64
 402e220:	e13fff17 	ldw	r4,-4(fp)
 402e224:	100b883a 	mov	r5,r2
 402e228:	402dde00 	call	402dde0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 402e22c:	e0bff117 	ldw	r2,-60(fp)
 402e230:	10880020 	cmpeqi	r2,r2,8192
 402e234:	10803fcc 	andi	r2,r2,255
 402e238:	00000506 	br	402e250 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 402e23c:	402e1680 	call	402e168 <alt_get_errno>
 402e240:	1007883a 	mov	r3,r2
 402e244:	00801444 	movi	r2,81
 402e248:	18800015 	stw	r2,0(r3)
    return 0;
 402e24c:	0005883a 	mov	r2,zero
  }
}
 402e250:	e037883a 	mov	sp,fp
 402e254:	dfc00117 	ldw	ra,4(sp)
 402e258:	df000017 	ldw	fp,0(sp)
 402e25c:	dec00204 	addi	sp,sp,8
 402e260:	f800283a 	ret

0402e264 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 402e264:	defffc04 	addi	sp,sp,-16
 402e268:	df000315 	stw	fp,12(sp)
 402e26c:	df000304 	addi	fp,sp,12
 402e270:	e13ffd15 	stw	r4,-12(fp)
 402e274:	e17ffe15 	stw	r5,-8(fp)
 402e278:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 402e27c:	e0fffe17 	ldw	r3,-8(fp)
 402e280:	e0bffd17 	ldw	r2,-12(fp)
 402e284:	18800c26 	beq	r3,r2,402e2b8 <alt_load_section+0x54>
  {
    while( to != end )
 402e288:	00000806 	br	402e2ac <alt_load_section+0x48>
    {
      *to++ = *from++;
 402e28c:	e0bffe17 	ldw	r2,-8(fp)
 402e290:	10c00104 	addi	r3,r2,4
 402e294:	e0fffe15 	stw	r3,-8(fp)
 402e298:	e0fffd17 	ldw	r3,-12(fp)
 402e29c:	19000104 	addi	r4,r3,4
 402e2a0:	e13ffd15 	stw	r4,-12(fp)
 402e2a4:	18c00017 	ldw	r3,0(r3)
 402e2a8:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 402e2ac:	e0fffe17 	ldw	r3,-8(fp)
 402e2b0:	e0bfff17 	ldw	r2,-4(fp)
 402e2b4:	18bff51e 	bne	r3,r2,402e28c <__flash_rwdata_start+0xffffd9c8>
    {
      *to++ = *from++;
    }
  }
}
 402e2b8:	e037883a 	mov	sp,fp
 402e2bc:	df000017 	ldw	fp,0(sp)
 402e2c0:	dec00104 	addi	sp,sp,4
 402e2c4:	f800283a 	ret

0402e2c8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 402e2c8:	defffe04 	addi	sp,sp,-8
 402e2cc:	dfc00115 	stw	ra,4(sp)
 402e2d0:	df000015 	stw	fp,0(sp)
 402e2d4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 402e2d8:	010100f4 	movhi	r4,1027
 402e2dc:	21023104 	addi	r4,r4,2244
 402e2e0:	01400034 	movhi	r5,0
 402e2e4:	2940d304 	addi	r5,r5,844
 402e2e8:	01800034 	movhi	r6,0
 402e2ec:	31879504 	addi	r6,r6,7764
 402e2f0:	402e2640 	call	402e264 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 402e2f4:	010100b4 	movhi	r4,1026
 402e2f8:	21000804 	addi	r4,r4,32
 402e2fc:	014100b4 	movhi	r5,1026
 402e300:	29400804 	addi	r5,r5,32
 402e304:	018100b4 	movhi	r6,1026
 402e308:	31806f04 	addi	r6,r6,444
 402e30c:	402e2640 	call	402e264 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 402e310:	010100f4 	movhi	r4,1027
 402e314:	21015e04 	addi	r4,r4,1400
 402e318:	01400034 	movhi	r5,0
 402e31c:	29400004 	addi	r5,r5,0
 402e320:	01800034 	movhi	r6,0
 402e324:	3180d304 	addi	r6,r6,844
 402e328:	402e2640 	call	402e264 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 402e32c:	402dd480 	call	402dd48 <alt_dcache_flush_all>
  alt_icache_flush_all();
 402e330:	402fb240 	call	402fb24 <alt_icache_flush_all>
}
 402e334:	e037883a 	mov	sp,fp
 402e338:	dfc00117 	ldw	ra,4(sp)
 402e33c:	df000017 	ldw	fp,0(sp)
 402e340:	dec00204 	addi	sp,sp,8
 402e344:	f800283a 	ret

0402e348 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402e348:	defffe04 	addi	sp,sp,-8
 402e34c:	dfc00115 	stw	ra,4(sp)
 402e350:	df000015 	stw	fp,0(sp)
 402e354:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402e358:	00800034 	movhi	r2,0
 402e35c:	10879004 	addi	r2,r2,7744
 402e360:	10800017 	ldw	r2,0(r2)
 402e364:	10000526 	beq	r2,zero,402e37c <alt_get_errno+0x34>
 402e368:	00800034 	movhi	r2,0
 402e36c:	10879004 	addi	r2,r2,7744
 402e370:	10800017 	ldw	r2,0(r2)
 402e374:	103ee83a 	callr	r2
 402e378:	00000206 	br	402e384 <alt_get_errno+0x3c>
 402e37c:	00800034 	movhi	r2,0
 402e380:	10879e04 	addi	r2,r2,7800
}
 402e384:	e037883a 	mov	sp,fp
 402e388:	dfc00117 	ldw	ra,4(sp)
 402e38c:	df000017 	ldw	fp,0(sp)
 402e390:	dec00204 	addi	sp,sp,8
 402e394:	f800283a 	ret

0402e398 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 402e398:	defff904 	addi	sp,sp,-28
 402e39c:	dfc00615 	stw	ra,24(sp)
 402e3a0:	df000515 	stw	fp,20(sp)
 402e3a4:	df000504 	addi	fp,sp,20
 402e3a8:	e13ffd15 	stw	r4,-12(fp)
 402e3ac:	e17ffe15 	stw	r5,-8(fp)
 402e3b0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 402e3b4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402e3b8:	e0bffd17 	ldw	r2,-12(fp)
 402e3bc:	10000816 	blt	r2,zero,402e3e0 <lseek+0x48>
 402e3c0:	e13ffd17 	ldw	r4,-12(fp)
 402e3c4:	01400304 	movi	r5,12
 402e3c8:	402110c0 	call	402110c <__mulsi3>
 402e3cc:	1007883a 	mov	r3,r2
 402e3d0:	00800034 	movhi	r2,0
 402e3d4:	10830604 	addi	r2,r2,3096
 402e3d8:	1885883a 	add	r2,r3,r2
 402e3dc:	00000106 	br	402e3e4 <lseek+0x4c>
 402e3e0:	0005883a 	mov	r2,zero
 402e3e4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 402e3e8:	e0bffc17 	ldw	r2,-16(fp)
 402e3ec:	10001026 	beq	r2,zero,402e430 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 402e3f0:	e0bffc17 	ldw	r2,-16(fp)
 402e3f4:	10800017 	ldw	r2,0(r2)
 402e3f8:	10800717 	ldw	r2,28(r2)
 402e3fc:	10000926 	beq	r2,zero,402e424 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 402e400:	e0bffc17 	ldw	r2,-16(fp)
 402e404:	10800017 	ldw	r2,0(r2)
 402e408:	10800717 	ldw	r2,28(r2)
 402e40c:	e13ffc17 	ldw	r4,-16(fp)
 402e410:	e17ffe17 	ldw	r5,-8(fp)
 402e414:	e1bfff17 	ldw	r6,-4(fp)
 402e418:	103ee83a 	callr	r2
 402e41c:	e0bffb15 	stw	r2,-20(fp)
 402e420:	00000506 	br	402e438 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 402e424:	00bfde84 	movi	r2,-134
 402e428:	e0bffb15 	stw	r2,-20(fp)
 402e42c:	00000206 	br	402e438 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 402e430:	00bfebc4 	movi	r2,-81
 402e434:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 402e438:	e0bffb17 	ldw	r2,-20(fp)
 402e43c:	1000070e 	bge	r2,zero,402e45c <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 402e440:	402e3480 	call	402e348 <alt_get_errno>
 402e444:	1007883a 	mov	r3,r2
 402e448:	e0bffb17 	ldw	r2,-20(fp)
 402e44c:	0085c83a 	sub	r2,zero,r2
 402e450:	18800015 	stw	r2,0(r3)
    rc = -1;
 402e454:	00bfffc4 	movi	r2,-1
 402e458:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 402e45c:	e0bffb17 	ldw	r2,-20(fp)
}
 402e460:	e037883a 	mov	sp,fp
 402e464:	dfc00117 	ldw	ra,4(sp)
 402e468:	df000017 	ldw	fp,0(sp)
 402e46c:	dec00204 	addi	sp,sp,8
 402e470:	f800283a 	ret

0402e474 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 402e474:	defffd04 	addi	sp,sp,-12
 402e478:	dfc00215 	stw	ra,8(sp)
 402e47c:	df000115 	stw	fp,4(sp)
 402e480:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 402e484:	0009883a 	mov	r4,zero
 402e488:	402eb040 	call	402eb04 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 402e48c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 402e490:	402eb380 	call	402eb38 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 402e494:	01000034 	movhi	r4,0
 402e498:	2100cb04 	addi	r4,r4,812
 402e49c:	01400034 	movhi	r5,0
 402e4a0:	2940cb04 	addi	r5,r5,812
 402e4a4:	01800034 	movhi	r6,0
 402e4a8:	3180cb04 	addi	r6,r6,812
 402e4ac:	402fc200 	call	402fc20 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 402e4b0:	402fa6c0 	call	402fa6c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 402e4b4:	010100f4 	movhi	r4,1027
 402e4b8:	213eb204 	addi	r4,r4,-1336
 402e4bc:	40301d40 	call	40301d4 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 402e4c0:	d1202217 	ldw	r4,-32632(gp)
 402e4c4:	d0e02317 	ldw	r3,-32628(gp)
 402e4c8:	d0a02417 	ldw	r2,-32624(gp)
 402e4cc:	180b883a 	mov	r5,r3
 402e4d0:	100d883a 	mov	r6,r2
 402e4d4:	402077c0 	call	402077c <main>
 402e4d8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 402e4dc:	01000044 	movi	r4,1
 402e4e0:	402dc700 	call	402dc70 <close>
  exit (result);
 402e4e4:	e13fff17 	ldw	r4,-4(fp)
 402e4e8:	40301e80 	call	40301e8 <exit>

0402e4ec <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 402e4ec:	defffe04 	addi	sp,sp,-8
 402e4f0:	df000115 	stw	fp,4(sp)
 402e4f4:	df000104 	addi	fp,sp,4
 402e4f8:	e13fff15 	stw	r4,-4(fp)
}
 402e4fc:	e037883a 	mov	sp,fp
 402e500:	df000017 	ldw	fp,0(sp)
 402e504:	dec00104 	addi	sp,sp,4
 402e508:	f800283a 	ret

0402e50c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 402e50c:	defffe04 	addi	sp,sp,-8
 402e510:	df000115 	stw	fp,4(sp)
 402e514:	df000104 	addi	fp,sp,4
 402e518:	e13fff15 	stw	r4,-4(fp)
}
 402e51c:	e037883a 	mov	sp,fp
 402e520:	df000017 	ldw	fp,0(sp)
 402e524:	dec00104 	addi	sp,sp,4
 402e528:	f800283a 	ret

0402e52c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402e52c:	defffe04 	addi	sp,sp,-8
 402e530:	dfc00115 	stw	ra,4(sp)
 402e534:	df000015 	stw	fp,0(sp)
 402e538:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402e53c:	00800034 	movhi	r2,0
 402e540:	10879004 	addi	r2,r2,7744
 402e544:	10800017 	ldw	r2,0(r2)
 402e548:	10000526 	beq	r2,zero,402e560 <alt_get_errno+0x34>
 402e54c:	00800034 	movhi	r2,0
 402e550:	10879004 	addi	r2,r2,7744
 402e554:	10800017 	ldw	r2,0(r2)
 402e558:	103ee83a 	callr	r2
 402e55c:	00000206 	br	402e568 <alt_get_errno+0x3c>
 402e560:	00800034 	movhi	r2,0
 402e564:	10879e04 	addi	r2,r2,7800
}
 402e568:	e037883a 	mov	sp,fp
 402e56c:	dfc00117 	ldw	ra,4(sp)
 402e570:	df000017 	ldw	fp,0(sp)
 402e574:	dec00204 	addi	sp,sp,8
 402e578:	f800283a 	ret

0402e57c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 402e57c:	defff904 	addi	sp,sp,-28
 402e580:	dfc00615 	stw	ra,24(sp)
 402e584:	df000515 	stw	fp,20(sp)
 402e588:	df000504 	addi	fp,sp,20
 402e58c:	e13ffd15 	stw	r4,-12(fp)
 402e590:	e17ffe15 	stw	r5,-8(fp)
 402e594:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402e598:	e0bffd17 	ldw	r2,-12(fp)
 402e59c:	10000816 	blt	r2,zero,402e5c0 <read+0x44>
 402e5a0:	e13ffd17 	ldw	r4,-12(fp)
 402e5a4:	01400304 	movi	r5,12
 402e5a8:	402110c0 	call	402110c <__mulsi3>
 402e5ac:	1007883a 	mov	r3,r2
 402e5b0:	00800034 	movhi	r2,0
 402e5b4:	10830604 	addi	r2,r2,3096
 402e5b8:	1885883a 	add	r2,r3,r2
 402e5bc:	00000106 	br	402e5c4 <read+0x48>
 402e5c0:	0005883a 	mov	r2,zero
 402e5c4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 402e5c8:	e0bffb17 	ldw	r2,-20(fp)
 402e5cc:	10002226 	beq	r2,zero,402e658 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 402e5d0:	e0bffb17 	ldw	r2,-20(fp)
 402e5d4:	10800217 	ldw	r2,8(r2)
 402e5d8:	108000cc 	andi	r2,r2,3
 402e5dc:	10800060 	cmpeqi	r2,r2,1
 402e5e0:	1000181e 	bne	r2,zero,402e644 <read+0xc8>
        (fd->dev->read))
 402e5e4:	e0bffb17 	ldw	r2,-20(fp)
 402e5e8:	10800017 	ldw	r2,0(r2)
 402e5ec:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 402e5f0:	10001426 	beq	r2,zero,402e644 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 402e5f4:	e0bffb17 	ldw	r2,-20(fp)
 402e5f8:	10800017 	ldw	r2,0(r2)
 402e5fc:	10800517 	ldw	r2,20(r2)
 402e600:	e0ffff17 	ldw	r3,-4(fp)
 402e604:	e13ffb17 	ldw	r4,-20(fp)
 402e608:	e17ffe17 	ldw	r5,-8(fp)
 402e60c:	180d883a 	mov	r6,r3
 402e610:	103ee83a 	callr	r2
 402e614:	e0bffc15 	stw	r2,-16(fp)
 402e618:	e0bffc17 	ldw	r2,-16(fp)
 402e61c:	1000070e 	bge	r2,zero,402e63c <read+0xc0>
        {
          ALT_ERRNO = -rval;
 402e620:	402e52c0 	call	402e52c <alt_get_errno>
 402e624:	1007883a 	mov	r3,r2
 402e628:	e0bffc17 	ldw	r2,-16(fp)
 402e62c:	0085c83a 	sub	r2,zero,r2
 402e630:	18800015 	stw	r2,0(r3)
          return -1;
 402e634:	00bfffc4 	movi	r2,-1
 402e638:	00000c06 	br	402e66c <read+0xf0>
        }
        return rval;
 402e63c:	e0bffc17 	ldw	r2,-16(fp)
 402e640:	00000a06 	br	402e66c <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 402e644:	402e52c0 	call	402e52c <alt_get_errno>
 402e648:	1007883a 	mov	r3,r2
 402e64c:	00800344 	movi	r2,13
 402e650:	18800015 	stw	r2,0(r3)
 402e654:	00000406 	br	402e668 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 402e658:	402e52c0 	call	402e52c <alt_get_errno>
 402e65c:	1007883a 	mov	r3,r2
 402e660:	00801444 	movi	r2,81
 402e664:	18800015 	stw	r2,0(r3)
  }
  return -1;
 402e668:	00bfffc4 	movi	r2,-1
}
 402e66c:	e037883a 	mov	sp,fp
 402e670:	dfc00117 	ldw	ra,4(sp)
 402e674:	df000017 	ldw	fp,0(sp)
 402e678:	dec00204 	addi	sp,sp,8
 402e67c:	f800283a 	ret

0402e680 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 402e680:	defffc04 	addi	sp,sp,-16
 402e684:	dfc00315 	stw	ra,12(sp)
 402e688:	df000215 	stw	fp,8(sp)
 402e68c:	dc000115 	stw	r16,4(sp)
 402e690:	df000204 	addi	fp,sp,8
 402e694:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 402e698:	e0bffe17 	ldw	r2,-8(fp)
 402e69c:	108000d0 	cmplti	r2,r2,3
 402e6a0:	1000111e 	bne	r2,zero,402e6e8 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 402e6a4:	04000034 	movhi	r16,0
 402e6a8:	84030604 	addi	r16,r16,3096
 402e6ac:	e0bffe17 	ldw	r2,-8(fp)
 402e6b0:	1009883a 	mov	r4,r2
 402e6b4:	01400304 	movi	r5,12
 402e6b8:	402110c0 	call	402110c <__mulsi3>
 402e6bc:	10800204 	addi	r2,r2,8
 402e6c0:	8085883a 	add	r2,r16,r2
 402e6c4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 402e6c8:	04000034 	movhi	r16,0
 402e6cc:	84030604 	addi	r16,r16,3096
 402e6d0:	e0bffe17 	ldw	r2,-8(fp)
 402e6d4:	1009883a 	mov	r4,r2
 402e6d8:	01400304 	movi	r5,12
 402e6dc:	402110c0 	call	402110c <__mulsi3>
 402e6e0:	8085883a 	add	r2,r16,r2
 402e6e4:	10000015 	stw	zero,0(r2)
  }
}
 402e6e8:	e6ffff04 	addi	sp,fp,-4
 402e6ec:	dfc00217 	ldw	ra,8(sp)
 402e6f0:	df000117 	ldw	fp,4(sp)
 402e6f4:	dc000017 	ldw	r16,0(sp)
 402e6f8:	dec00304 	addi	sp,sp,12
 402e6fc:	f800283a 	ret

0402e700 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 402e700:	defff904 	addi	sp,sp,-28
 402e704:	df000615 	stw	fp,24(sp)
 402e708:	df000604 	addi	fp,sp,24
 402e70c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402e710:	0005303a 	rdctl	r2,status
 402e714:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402e718:	e0fffc17 	ldw	r3,-16(fp)
 402e71c:	00bfff84 	movi	r2,-2
 402e720:	1884703a 	and	r2,r3,r2
 402e724:	1001703a 	wrctl	status,r2
  
  return context;
 402e728:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 402e72c:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 402e730:	d0a01417 	ldw	r2,-32688(gp)
 402e734:	10c000c4 	addi	r3,r2,3
 402e738:	00bfff04 	movi	r2,-4
 402e73c:	1884703a 	and	r2,r3,r2
 402e740:	d0a01415 	stw	r2,-32688(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 402e744:	d0e01417 	ldw	r3,-32688(gp)
 402e748:	e0bfff17 	ldw	r2,-4(fp)
 402e74c:	1887883a 	add	r3,r3,r2
 402e750:	00810034 	movhi	r2,1024
 402e754:	10800004 	addi	r2,r2,0
 402e758:	10c0062e 	bgeu	r2,r3,402e774 <sbrk+0x74>
 402e75c:	e0bffa17 	ldw	r2,-24(fp)
 402e760:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402e764:	e0bffd17 	ldw	r2,-12(fp)
 402e768:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 402e76c:	00bfffc4 	movi	r2,-1
 402e770:	00000b06 	br	402e7a0 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 402e774:	d0a01417 	ldw	r2,-32688(gp)
 402e778:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
 402e77c:	d0e01417 	ldw	r3,-32688(gp)
 402e780:	e0bfff17 	ldw	r2,-4(fp)
 402e784:	1885883a 	add	r2,r3,r2
 402e788:	d0a01415 	stw	r2,-32688(gp)
 402e78c:	e0bffa17 	ldw	r2,-24(fp)
 402e790:	e0bffe15 	stw	r2,-8(fp)
 402e794:	e0bffe17 	ldw	r2,-8(fp)
 402e798:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 402e79c:	e0bffb17 	ldw	r2,-20(fp)
} 
 402e7a0:	e037883a 	mov	sp,fp
 402e7a4:	df000017 	ldw	fp,0(sp)
 402e7a8:	dec00104 	addi	sp,sp,4
 402e7ac:	f800283a 	ret

0402e7b0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 402e7b0:	defffa04 	addi	sp,sp,-24
 402e7b4:	df000515 	stw	fp,20(sp)
 402e7b8:	df000504 	addi	fp,sp,20
 402e7bc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402e7c0:	0005303a 	rdctl	r2,status
 402e7c4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402e7c8:	e0fffc17 	ldw	r3,-16(fp)
 402e7cc:	00bfff84 	movi	r2,-2
 402e7d0:	1884703a 	and	r2,r3,r2
 402e7d4:	1001703a 	wrctl	status,r2
  
  return context;
 402e7d8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 402e7dc:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 402e7e0:	e0bfff17 	ldw	r2,-4(fp)
 402e7e4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 402e7e8:	e0bffd17 	ldw	r2,-12(fp)
 402e7ec:	10800017 	ldw	r2,0(r2)
 402e7f0:	e0fffd17 	ldw	r3,-12(fp)
 402e7f4:	18c00117 	ldw	r3,4(r3)
 402e7f8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 402e7fc:	e0bffd17 	ldw	r2,-12(fp)
 402e800:	10800117 	ldw	r2,4(r2)
 402e804:	e0fffd17 	ldw	r3,-12(fp)
 402e808:	18c00017 	ldw	r3,0(r3)
 402e80c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 402e810:	e0bffd17 	ldw	r2,-12(fp)
 402e814:	e0fffd17 	ldw	r3,-12(fp)
 402e818:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 402e81c:	e0bffd17 	ldw	r2,-12(fp)
 402e820:	e0fffd17 	ldw	r3,-12(fp)
 402e824:	10c00015 	stw	r3,0(r2)
 402e828:	e0bffb17 	ldw	r2,-20(fp)
 402e82c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402e830:	e0bffe17 	ldw	r2,-8(fp)
 402e834:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 402e838:	e037883a 	mov	sp,fp
 402e83c:	df000017 	ldw	fp,0(sp)
 402e840:	dec00104 	addi	sp,sp,4
 402e844:	f800283a 	ret

0402e848 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 402e848:	defffb04 	addi	sp,sp,-20
 402e84c:	dfc00415 	stw	ra,16(sp)
 402e850:	df000315 	stw	fp,12(sp)
 402e854:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 402e858:	d0a01517 	ldw	r2,-32684(gp)
 402e85c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 402e860:	d0a02617 	ldw	r2,-32616(gp)
 402e864:	10800044 	addi	r2,r2,1
 402e868:	d0a02615 	stw	r2,-32616(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 402e86c:	00002e06 	br	402e928 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 402e870:	e0bffd17 	ldw	r2,-12(fp)
 402e874:	10800017 	ldw	r2,0(r2)
 402e878:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 402e87c:	e0bffd17 	ldw	r2,-12(fp)
 402e880:	10800403 	ldbu	r2,16(r2)
 402e884:	10803fcc 	andi	r2,r2,255
 402e888:	10000426 	beq	r2,zero,402e89c <alt_tick+0x54>
 402e88c:	d0a02617 	ldw	r2,-32616(gp)
 402e890:	1000021e 	bne	r2,zero,402e89c <alt_tick+0x54>
    {
      alarm->rollover = 0;
 402e894:	e0bffd17 	ldw	r2,-12(fp)
 402e898:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 402e89c:	e0bffd17 	ldw	r2,-12(fp)
 402e8a0:	10800217 	ldw	r2,8(r2)
 402e8a4:	d0e02617 	ldw	r3,-32616(gp)
 402e8a8:	18801d36 	bltu	r3,r2,402e920 <alt_tick+0xd8>
 402e8ac:	e0bffd17 	ldw	r2,-12(fp)
 402e8b0:	10800403 	ldbu	r2,16(r2)
 402e8b4:	10803fcc 	andi	r2,r2,255
 402e8b8:	1000191e 	bne	r2,zero,402e920 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 402e8bc:	e0bffd17 	ldw	r2,-12(fp)
 402e8c0:	10800317 	ldw	r2,12(r2)
 402e8c4:	e0fffd17 	ldw	r3,-12(fp)
 402e8c8:	18c00517 	ldw	r3,20(r3)
 402e8cc:	1809883a 	mov	r4,r3
 402e8d0:	103ee83a 	callr	r2
 402e8d4:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 402e8d8:	e0bfff17 	ldw	r2,-4(fp)
 402e8dc:	1000031e 	bne	r2,zero,402e8ec <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 402e8e0:	e13ffd17 	ldw	r4,-12(fp)
 402e8e4:	402e7b00 	call	402e7b0 <alt_alarm_stop>
 402e8e8:	00000d06 	br	402e920 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 402e8ec:	e0bffd17 	ldw	r2,-12(fp)
 402e8f0:	10c00217 	ldw	r3,8(r2)
 402e8f4:	e0bfff17 	ldw	r2,-4(fp)
 402e8f8:	1887883a 	add	r3,r3,r2
 402e8fc:	e0bffd17 	ldw	r2,-12(fp)
 402e900:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 402e904:	e0bffd17 	ldw	r2,-12(fp)
 402e908:	10c00217 	ldw	r3,8(r2)
 402e90c:	d0a02617 	ldw	r2,-32616(gp)
 402e910:	1880032e 	bgeu	r3,r2,402e920 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 402e914:	e0bffd17 	ldw	r2,-12(fp)
 402e918:	00c00044 	movi	r3,1
 402e91c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 402e920:	e0bffe17 	ldw	r2,-8(fp)
 402e924:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 402e928:	e0fffd17 	ldw	r3,-12(fp)
 402e92c:	d0a01504 	addi	r2,gp,-32684
 402e930:	18bfcf1e 	bne	r3,r2,402e870 <__flash_rwdata_start+0xffffdfac>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 402e934:	0001883a 	nop
}
 402e938:	e037883a 	mov	sp,fp
 402e93c:	dfc00117 	ldw	ra,4(sp)
 402e940:	df000017 	ldw	fp,0(sp)
 402e944:	dec00204 	addi	sp,sp,8
 402e948:	f800283a 	ret

0402e94c <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 402e94c:	defffd04 	addi	sp,sp,-12
 402e950:	dfc00215 	stw	ra,8(sp)
 402e954:	df000115 	stw	fp,4(sp)
 402e958:	df000104 	addi	fp,sp,4
 402e95c:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 402e960:	e13fff17 	ldw	r4,-4(fp)
 402e964:	402f8200 	call	402f820 <alt_busy_sleep>
}
 402e968:	e037883a 	mov	sp,fp
 402e96c:	dfc00117 	ldw	ra,4(sp)
 402e970:	df000017 	ldw	fp,0(sp)
 402e974:	dec00204 	addi	sp,sp,8
 402e978:	f800283a 	ret

0402e97c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402e97c:	defffe04 	addi	sp,sp,-8
 402e980:	dfc00115 	stw	ra,4(sp)
 402e984:	df000015 	stw	fp,0(sp)
 402e988:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402e98c:	00800034 	movhi	r2,0
 402e990:	10879004 	addi	r2,r2,7744
 402e994:	10800017 	ldw	r2,0(r2)
 402e998:	10000526 	beq	r2,zero,402e9b0 <alt_get_errno+0x34>
 402e99c:	00800034 	movhi	r2,0
 402e9a0:	10879004 	addi	r2,r2,7744
 402e9a4:	10800017 	ldw	r2,0(r2)
 402e9a8:	103ee83a 	callr	r2
 402e9ac:	00000206 	br	402e9b8 <alt_get_errno+0x3c>
 402e9b0:	00800034 	movhi	r2,0
 402e9b4:	10879e04 	addi	r2,r2,7800
}
 402e9b8:	e037883a 	mov	sp,fp
 402e9bc:	dfc00117 	ldw	ra,4(sp)
 402e9c0:	df000017 	ldw	fp,0(sp)
 402e9c4:	dec00204 	addi	sp,sp,8
 402e9c8:	f800283a 	ret

0402e9cc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 402e9cc:	defff904 	addi	sp,sp,-28
 402e9d0:	dfc00615 	stw	ra,24(sp)
 402e9d4:	df000515 	stw	fp,20(sp)
 402e9d8:	df000504 	addi	fp,sp,20
 402e9dc:	e13ffd15 	stw	r4,-12(fp)
 402e9e0:	e17ffe15 	stw	r5,-8(fp)
 402e9e4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402e9e8:	e0bffd17 	ldw	r2,-12(fp)
 402e9ec:	10000816 	blt	r2,zero,402ea10 <write+0x44>
 402e9f0:	e13ffd17 	ldw	r4,-12(fp)
 402e9f4:	01400304 	movi	r5,12
 402e9f8:	402110c0 	call	402110c <__mulsi3>
 402e9fc:	1007883a 	mov	r3,r2
 402ea00:	00800034 	movhi	r2,0
 402ea04:	10830604 	addi	r2,r2,3096
 402ea08:	1885883a 	add	r2,r3,r2
 402ea0c:	00000106 	br	402ea14 <write+0x48>
 402ea10:	0005883a 	mov	r2,zero
 402ea14:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 402ea18:	e0bffb17 	ldw	r2,-20(fp)
 402ea1c:	10002126 	beq	r2,zero,402eaa4 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 402ea20:	e0bffb17 	ldw	r2,-20(fp)
 402ea24:	10800217 	ldw	r2,8(r2)
 402ea28:	108000cc 	andi	r2,r2,3
 402ea2c:	10001826 	beq	r2,zero,402ea90 <write+0xc4>
 402ea30:	e0bffb17 	ldw	r2,-20(fp)
 402ea34:	10800017 	ldw	r2,0(r2)
 402ea38:	10800617 	ldw	r2,24(r2)
 402ea3c:	10001426 	beq	r2,zero,402ea90 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 402ea40:	e0bffb17 	ldw	r2,-20(fp)
 402ea44:	10800017 	ldw	r2,0(r2)
 402ea48:	10800617 	ldw	r2,24(r2)
 402ea4c:	e0ffff17 	ldw	r3,-4(fp)
 402ea50:	e13ffb17 	ldw	r4,-20(fp)
 402ea54:	e17ffe17 	ldw	r5,-8(fp)
 402ea58:	180d883a 	mov	r6,r3
 402ea5c:	103ee83a 	callr	r2
 402ea60:	e0bffc15 	stw	r2,-16(fp)
 402ea64:	e0bffc17 	ldw	r2,-16(fp)
 402ea68:	1000070e 	bge	r2,zero,402ea88 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 402ea6c:	402e97c0 	call	402e97c <alt_get_errno>
 402ea70:	1007883a 	mov	r3,r2
 402ea74:	e0bffc17 	ldw	r2,-16(fp)
 402ea78:	0085c83a 	sub	r2,zero,r2
 402ea7c:	18800015 	stw	r2,0(r3)
        return -1;
 402ea80:	00bfffc4 	movi	r2,-1
 402ea84:	00000c06 	br	402eab8 <write+0xec>
      }
      return rval;
 402ea88:	e0bffc17 	ldw	r2,-16(fp)
 402ea8c:	00000a06 	br	402eab8 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 402ea90:	402e97c0 	call	402e97c <alt_get_errno>
 402ea94:	1007883a 	mov	r3,r2
 402ea98:	00800344 	movi	r2,13
 402ea9c:	18800015 	stw	r2,0(r3)
 402eaa0:	00000406 	br	402eab4 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 402eaa4:	402e97c0 	call	402e97c <alt_get_errno>
 402eaa8:	1007883a 	mov	r3,r2
 402eaac:	00801444 	movi	r2,81
 402eab0:	18800015 	stw	r2,0(r3)
  }
  return -1;
 402eab4:	00bfffc4 	movi	r2,-1
}
 402eab8:	e037883a 	mov	sp,fp
 402eabc:	dfc00117 	ldw	ra,4(sp)
 402eac0:	df000017 	ldw	fp,0(sp)
 402eac4:	dec00204 	addi	sp,sp,8
 402eac8:	f800283a 	ret

0402eacc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 402eacc:	defffd04 	addi	sp,sp,-12
 402ead0:	dfc00215 	stw	ra,8(sp)
 402ead4:	df000115 	stw	fp,4(sp)
 402ead8:	df000104 	addi	fp,sp,4
 402eadc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 402eae0:	e13fff17 	ldw	r4,-4(fp)
 402eae4:	01400034 	movhi	r5,0
 402eae8:	29478d04 	addi	r5,r5,7732
 402eaec:	402f9c80 	call	402f9c8 <alt_dev_llist_insert>
}
 402eaf0:	e037883a 	mov	sp,fp
 402eaf4:	dfc00117 	ldw	ra,4(sp)
 402eaf8:	df000017 	ldw	fp,0(sp)
 402eafc:	dec00204 	addi	sp,sp,8
 402eb00:	f800283a 	ret

0402eb04 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 402eb04:	defffd04 	addi	sp,sp,-12
 402eb08:	dfc00215 	stw	ra,8(sp)
 402eb0c:	df000115 	stw	fp,4(sp)
 402eb10:	df000104 	addi	fp,sp,4
 402eb14:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_QSYS, nios2_qsys);
 402eb18:	402ff3c0 	call	402ff3c <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 402eb1c:	00800044 	movi	r2,1
 402eb20:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 402eb24:	e037883a 	mov	sp,fp
 402eb28:	dfc00117 	ldw	ra,4(sp)
 402eb2c:	df000017 	ldw	fp,0(sp)
 402eb30:	dec00204 	addi	sp,sp,8
 402eb34:	f800283a 	ret

0402eb38 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 402eb38:	defffe04 	addi	sp,sp,-8
 402eb3c:	dfc00115 	stw	ra,4(sp)
 402eb40:	df000015 	stw	fp,0(sp)
 402eb44:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
 402eb48:	01010134 	movhi	r4,1028
 402eb4c:	21040004 	addi	r4,r4,4096
 402eb50:	000b883a 	mov	r5,zero
 402eb54:	000d883a 	mov	r6,zero
 402eb58:	01c0fa04 	movi	r7,1000
 402eb5c:	402f6580 	call	402f658 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 402eb60:	01000034 	movhi	r4,0
 402eb64:	21037004 	addi	r4,r4,3520
 402eb68:	000b883a 	mov	r5,zero
 402eb6c:	01800044 	movi	r6,1
 402eb70:	402ecfc0 	call	402ecfc <altera_avalon_jtag_uart_init>
 402eb74:	01000034 	movhi	r4,0
 402eb78:	21036604 	addi	r4,r4,3480
 402eb7c:	402eacc0 	call	402eacc <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
 402eb80:	0001883a 	nop
}
 402eb84:	e037883a 	mov	sp,fp
 402eb88:	dfc00117 	ldw	ra,4(sp)
 402eb8c:	df000017 	ldw	fp,0(sp)
 402eb90:	dec00204 	addi	sp,sp,8
 402eb94:	f800283a 	ret

0402eb98 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 402eb98:	defffa04 	addi	sp,sp,-24
 402eb9c:	dfc00515 	stw	ra,20(sp)
 402eba0:	df000415 	stw	fp,16(sp)
 402eba4:	df000404 	addi	fp,sp,16
 402eba8:	e13ffd15 	stw	r4,-12(fp)
 402ebac:	e17ffe15 	stw	r5,-8(fp)
 402ebb0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 402ebb4:	e0bffd17 	ldw	r2,-12(fp)
 402ebb8:	10800017 	ldw	r2,0(r2)
 402ebbc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 402ebc0:	e0bffc17 	ldw	r2,-16(fp)
 402ebc4:	10c00a04 	addi	r3,r2,40
 402ebc8:	e0bffd17 	ldw	r2,-12(fp)
 402ebcc:	10800217 	ldw	r2,8(r2)
 402ebd0:	1809883a 	mov	r4,r3
 402ebd4:	e17ffe17 	ldw	r5,-8(fp)
 402ebd8:	e1bfff17 	ldw	r6,-4(fp)
 402ebdc:	100f883a 	mov	r7,r2
 402ebe0:	402f1c00 	call	402f1c0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 402ebe4:	e037883a 	mov	sp,fp
 402ebe8:	dfc00117 	ldw	ra,4(sp)
 402ebec:	df000017 	ldw	fp,0(sp)
 402ebf0:	dec00204 	addi	sp,sp,8
 402ebf4:	f800283a 	ret

0402ebf8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 402ebf8:	defffa04 	addi	sp,sp,-24
 402ebfc:	dfc00515 	stw	ra,20(sp)
 402ec00:	df000415 	stw	fp,16(sp)
 402ec04:	df000404 	addi	fp,sp,16
 402ec08:	e13ffd15 	stw	r4,-12(fp)
 402ec0c:	e17ffe15 	stw	r5,-8(fp)
 402ec10:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 402ec14:	e0bffd17 	ldw	r2,-12(fp)
 402ec18:	10800017 	ldw	r2,0(r2)
 402ec1c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 402ec20:	e0bffc17 	ldw	r2,-16(fp)
 402ec24:	10c00a04 	addi	r3,r2,40
 402ec28:	e0bffd17 	ldw	r2,-12(fp)
 402ec2c:	10800217 	ldw	r2,8(r2)
 402ec30:	1809883a 	mov	r4,r3
 402ec34:	e17ffe17 	ldw	r5,-8(fp)
 402ec38:	e1bfff17 	ldw	r6,-4(fp)
 402ec3c:	100f883a 	mov	r7,r2
 402ec40:	402f3cc0 	call	402f3cc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 402ec44:	e037883a 	mov	sp,fp
 402ec48:	dfc00117 	ldw	ra,4(sp)
 402ec4c:	df000017 	ldw	fp,0(sp)
 402ec50:	dec00204 	addi	sp,sp,8
 402ec54:	f800283a 	ret

0402ec58 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 402ec58:	defffc04 	addi	sp,sp,-16
 402ec5c:	dfc00315 	stw	ra,12(sp)
 402ec60:	df000215 	stw	fp,8(sp)
 402ec64:	df000204 	addi	fp,sp,8
 402ec68:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 402ec6c:	e0bfff17 	ldw	r2,-4(fp)
 402ec70:	10800017 	ldw	r2,0(r2)
 402ec74:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 402ec78:	e0bffe17 	ldw	r2,-8(fp)
 402ec7c:	10c00a04 	addi	r3,r2,40
 402ec80:	e0bfff17 	ldw	r2,-4(fp)
 402ec84:	10800217 	ldw	r2,8(r2)
 402ec88:	1809883a 	mov	r4,r3
 402ec8c:	100b883a 	mov	r5,r2
 402ec90:	402f06c0 	call	402f06c <altera_avalon_jtag_uart_close>
}
 402ec94:	e037883a 	mov	sp,fp
 402ec98:	dfc00117 	ldw	ra,4(sp)
 402ec9c:	df000017 	ldw	fp,0(sp)
 402eca0:	dec00204 	addi	sp,sp,8
 402eca4:	f800283a 	ret

0402eca8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 402eca8:	defffa04 	addi	sp,sp,-24
 402ecac:	dfc00515 	stw	ra,20(sp)
 402ecb0:	df000415 	stw	fp,16(sp)
 402ecb4:	df000404 	addi	fp,sp,16
 402ecb8:	e13ffd15 	stw	r4,-12(fp)
 402ecbc:	e17ffe15 	stw	r5,-8(fp)
 402ecc0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 402ecc4:	e0bffd17 	ldw	r2,-12(fp)
 402ecc8:	10800017 	ldw	r2,0(r2)
 402eccc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 402ecd0:	e0bffc17 	ldw	r2,-16(fp)
 402ecd4:	10800a04 	addi	r2,r2,40
 402ecd8:	1009883a 	mov	r4,r2
 402ecdc:	e17ffe17 	ldw	r5,-8(fp)
 402ece0:	e1bfff17 	ldw	r6,-4(fp)
 402ece4:	402f0d40 	call	402f0d4 <altera_avalon_jtag_uart_ioctl>
}
 402ece8:	e037883a 	mov	sp,fp
 402ecec:	dfc00117 	ldw	ra,4(sp)
 402ecf0:	df000017 	ldw	fp,0(sp)
 402ecf4:	dec00204 	addi	sp,sp,8
 402ecf8:	f800283a 	ret

0402ecfc <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 402ecfc:	defffa04 	addi	sp,sp,-24
 402ed00:	dfc00515 	stw	ra,20(sp)
 402ed04:	df000415 	stw	fp,16(sp)
 402ed08:	df000404 	addi	fp,sp,16
 402ed0c:	e13ffd15 	stw	r4,-12(fp)
 402ed10:	e17ffe15 	stw	r5,-8(fp)
 402ed14:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 402ed18:	e0bffd17 	ldw	r2,-12(fp)
 402ed1c:	00c00044 	movi	r3,1
 402ed20:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 402ed24:	e0bffd17 	ldw	r2,-12(fp)
 402ed28:	10800017 	ldw	r2,0(r2)
 402ed2c:	10800104 	addi	r2,r2,4
 402ed30:	1007883a 	mov	r3,r2
 402ed34:	e0bffd17 	ldw	r2,-12(fp)
 402ed38:	10800817 	ldw	r2,32(r2)
 402ed3c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 402ed40:	e0fffe17 	ldw	r3,-8(fp)
 402ed44:	e0bfff17 	ldw	r2,-4(fp)
 402ed48:	d8000015 	stw	zero,0(sp)
 402ed4c:	1809883a 	mov	r4,r3
 402ed50:	100b883a 	mov	r5,r2
 402ed54:	018100f4 	movhi	r6,1027
 402ed58:	31bb7004 	addi	r6,r6,-4672
 402ed5c:	e1fffd17 	ldw	r7,-12(fp)
 402ed60:	402de980 	call	402de98 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 402ed64:	e0bffd17 	ldw	r2,-12(fp)
 402ed68:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 402ed6c:	e0bffd17 	ldw	r2,-12(fp)
 402ed70:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 402ed74:	00800034 	movhi	r2,0
 402ed78:	1087a304 	addi	r2,r2,7820
 402ed7c:	10800017 	ldw	r2,0(r2)
 402ed80:	1809883a 	mov	r4,r3
 402ed84:	100b883a 	mov	r5,r2
 402ed88:	018100f4 	movhi	r6,1027
 402ed8c:	31bbf104 	addi	r6,r6,-4156
 402ed90:	e1fffd17 	ldw	r7,-12(fp)
 402ed94:	402f6e00 	call	402f6e0 <alt_alarm_start>
 402ed98:	1000040e 	bge	r2,zero,402edac <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 402ed9c:	e0fffd17 	ldw	r3,-12(fp)
 402eda0:	00a00034 	movhi	r2,32768
 402eda4:	10bfffc4 	addi	r2,r2,-1
 402eda8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 402edac:	e037883a 	mov	sp,fp
 402edb0:	dfc00117 	ldw	ra,4(sp)
 402edb4:	df000017 	ldw	fp,0(sp)
 402edb8:	dec00204 	addi	sp,sp,8
 402edbc:	f800283a 	ret

0402edc0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 402edc0:	defff804 	addi	sp,sp,-32
 402edc4:	df000715 	stw	fp,28(sp)
 402edc8:	df000704 	addi	fp,sp,28
 402edcc:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 402edd0:	e0bfff17 	ldw	r2,-4(fp)
 402edd4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 402edd8:	e0bffb17 	ldw	r2,-20(fp)
 402eddc:	10800017 	ldw	r2,0(r2)
 402ede0:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 402ede4:	e0bffc17 	ldw	r2,-16(fp)
 402ede8:	10800104 	addi	r2,r2,4
 402edec:	10800037 	ldwio	r2,0(r2)
 402edf0:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 402edf4:	e0bffd17 	ldw	r2,-12(fp)
 402edf8:	1080c00c 	andi	r2,r2,768
 402edfc:	1000011e 	bne	r2,zero,402ee04 <altera_avalon_jtag_uart_irq+0x44>
      break;
 402ee00:	00006c06 	br	402efb4 <altera_avalon_jtag_uart_irq+0x1f4>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 402ee04:	e0bffd17 	ldw	r2,-12(fp)
 402ee08:	1080400c 	andi	r2,r2,256
 402ee0c:	10003426 	beq	r2,zero,402eee0 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 402ee10:	00800074 	movhi	r2,1
 402ee14:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402ee18:	e0bffb17 	ldw	r2,-20(fp)
 402ee1c:	10800a17 	ldw	r2,40(r2)
 402ee20:	10800044 	addi	r2,r2,1
 402ee24:	1081ffcc 	andi	r2,r2,2047
 402ee28:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 402ee2c:	e0bffb17 	ldw	r2,-20(fp)
 402ee30:	10c00b17 	ldw	r3,44(r2)
 402ee34:	e0bffe17 	ldw	r2,-8(fp)
 402ee38:	1880011e 	bne	r3,r2,402ee40 <altera_avalon_jtag_uart_irq+0x80>
          break;
 402ee3c:	00001606 	br	402ee98 <altera_avalon_jtag_uart_irq+0xd8>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 402ee40:	e0bffc17 	ldw	r2,-16(fp)
 402ee44:	10800037 	ldwio	r2,0(r2)
 402ee48:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 402ee4c:	e0bff917 	ldw	r2,-28(fp)
 402ee50:	10a0000c 	andi	r2,r2,32768
 402ee54:	1000011e 	bne	r2,zero,402ee5c <altera_avalon_jtag_uart_irq+0x9c>
          break;
 402ee58:	00000f06 	br	402ee98 <altera_avalon_jtag_uart_irq+0xd8>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 402ee5c:	e0bffb17 	ldw	r2,-20(fp)
 402ee60:	10800a17 	ldw	r2,40(r2)
 402ee64:	e0fff917 	ldw	r3,-28(fp)
 402ee68:	1809883a 	mov	r4,r3
 402ee6c:	e0fffb17 	ldw	r3,-20(fp)
 402ee70:	1885883a 	add	r2,r3,r2
 402ee74:	10800e04 	addi	r2,r2,56
 402ee78:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402ee7c:	e0bffb17 	ldw	r2,-20(fp)
 402ee80:	10800a17 	ldw	r2,40(r2)
 402ee84:	10800044 	addi	r2,r2,1
 402ee88:	10c1ffcc 	andi	r3,r2,2047
 402ee8c:	e0bffb17 	ldw	r2,-20(fp)
 402ee90:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 402ee94:	003fe006 	br	402ee18 <__flash_rwdata_start+0xffffe554>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 402ee98:	e0bff917 	ldw	r2,-28(fp)
 402ee9c:	10bfffec 	andhi	r2,r2,65535
 402eea0:	10000f26 	beq	r2,zero,402eee0 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 402eea4:	e0bffb17 	ldw	r2,-20(fp)
 402eea8:	10c00817 	ldw	r3,32(r2)
 402eeac:	00bfff84 	movi	r2,-2
 402eeb0:	1886703a 	and	r3,r3,r2
 402eeb4:	e0bffb17 	ldw	r2,-20(fp)
 402eeb8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 402eebc:	e0bffc17 	ldw	r2,-16(fp)
 402eec0:	10800104 	addi	r2,r2,4
 402eec4:	1007883a 	mov	r3,r2
 402eec8:	e0bffb17 	ldw	r2,-20(fp)
 402eecc:	10800817 	ldw	r2,32(r2)
 402eed0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 402eed4:	e0bffc17 	ldw	r2,-16(fp)
 402eed8:	10800104 	addi	r2,r2,4
 402eedc:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 402eee0:	e0bffd17 	ldw	r2,-12(fp)
 402eee4:	1080800c 	andi	r2,r2,512
 402eee8:	10003126 	beq	r2,zero,402efb0 <altera_avalon_jtag_uart_irq+0x1f0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 402eeec:	e0bffd17 	ldw	r2,-12(fp)
 402eef0:	1004d43a 	srli	r2,r2,16
 402eef4:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 402eef8:	00001406 	br	402ef4c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 402eefc:	e0bffc17 	ldw	r2,-16(fp)
 402ef00:	e0fffb17 	ldw	r3,-20(fp)
 402ef04:	18c00d17 	ldw	r3,52(r3)
 402ef08:	e13ffb17 	ldw	r4,-20(fp)
 402ef0c:	20c7883a 	add	r3,r4,r3
 402ef10:	18c20e04 	addi	r3,r3,2104
 402ef14:	18c00003 	ldbu	r3,0(r3)
 402ef18:	18c03fcc 	andi	r3,r3,255
 402ef1c:	18c0201c 	xori	r3,r3,128
 402ef20:	18ffe004 	addi	r3,r3,-128
 402ef24:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402ef28:	e0bffb17 	ldw	r2,-20(fp)
 402ef2c:	10800d17 	ldw	r2,52(r2)
 402ef30:	10800044 	addi	r2,r2,1
 402ef34:	10c1ffcc 	andi	r3,r2,2047
 402ef38:	e0bffb17 	ldw	r2,-20(fp)
 402ef3c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 402ef40:	e0bffa17 	ldw	r2,-24(fp)
 402ef44:	10bfffc4 	addi	r2,r2,-1
 402ef48:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 402ef4c:	e0bffa17 	ldw	r2,-24(fp)
 402ef50:	10000526 	beq	r2,zero,402ef68 <altera_avalon_jtag_uart_irq+0x1a8>
 402ef54:	e0bffb17 	ldw	r2,-20(fp)
 402ef58:	10c00d17 	ldw	r3,52(r2)
 402ef5c:	e0bffb17 	ldw	r2,-20(fp)
 402ef60:	10800c17 	ldw	r2,48(r2)
 402ef64:	18bfe51e 	bne	r3,r2,402eefc <__flash_rwdata_start+0xffffe638>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 402ef68:	e0bffa17 	ldw	r2,-24(fp)
 402ef6c:	10001026 	beq	r2,zero,402efb0 <altera_avalon_jtag_uart_irq+0x1f0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 402ef70:	e0bffb17 	ldw	r2,-20(fp)
 402ef74:	10c00817 	ldw	r3,32(r2)
 402ef78:	00bfff44 	movi	r2,-3
 402ef7c:	1886703a 	and	r3,r3,r2
 402ef80:	e0bffb17 	ldw	r2,-20(fp)
 402ef84:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 402ef88:	e0bffb17 	ldw	r2,-20(fp)
 402ef8c:	10800017 	ldw	r2,0(r2)
 402ef90:	10800104 	addi	r2,r2,4
 402ef94:	1007883a 	mov	r3,r2
 402ef98:	e0bffb17 	ldw	r2,-20(fp)
 402ef9c:	10800817 	ldw	r2,32(r2)
 402efa0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 402efa4:	e0bffc17 	ldw	r2,-16(fp)
 402efa8:	10800104 	addi	r2,r2,4
 402efac:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 402efb0:	003f8c06 	br	402ede4 <__flash_rwdata_start+0xffffe520>
}
 402efb4:	e037883a 	mov	sp,fp
 402efb8:	df000017 	ldw	fp,0(sp)
 402efbc:	dec00104 	addi	sp,sp,4
 402efc0:	f800283a 	ret

0402efc4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 402efc4:	defff804 	addi	sp,sp,-32
 402efc8:	df000715 	stw	fp,28(sp)
 402efcc:	df000704 	addi	fp,sp,28
 402efd0:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 402efd4:	e0bffb17 	ldw	r2,-20(fp)
 402efd8:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 402efdc:	e0bff917 	ldw	r2,-28(fp)
 402efe0:	10800017 	ldw	r2,0(r2)
 402efe4:	10800104 	addi	r2,r2,4
 402efe8:	10800037 	ldwio	r2,0(r2)
 402efec:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 402eff0:	e0bffa17 	ldw	r2,-24(fp)
 402eff4:	1081000c 	andi	r2,r2,1024
 402eff8:	10000b26 	beq	r2,zero,402f028 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 402effc:	e0bff917 	ldw	r2,-28(fp)
 402f000:	10800017 	ldw	r2,0(r2)
 402f004:	10800104 	addi	r2,r2,4
 402f008:	1007883a 	mov	r3,r2
 402f00c:	e0bff917 	ldw	r2,-28(fp)
 402f010:	10800817 	ldw	r2,32(r2)
 402f014:	10810014 	ori	r2,r2,1024
 402f018:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 402f01c:	e0bff917 	ldw	r2,-28(fp)
 402f020:	10000915 	stw	zero,36(r2)
 402f024:	00000a06 	br	402f050 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 402f028:	e0bff917 	ldw	r2,-28(fp)
 402f02c:	10c00917 	ldw	r3,36(r2)
 402f030:	00a00034 	movhi	r2,32768
 402f034:	10bfff04 	addi	r2,r2,-4
 402f038:	10c00536 	bltu	r2,r3,402f050 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 402f03c:	e0bff917 	ldw	r2,-28(fp)
 402f040:	10800917 	ldw	r2,36(r2)
 402f044:	10c00044 	addi	r3,r2,1
 402f048:	e0bff917 	ldw	r2,-28(fp)
 402f04c:	10c00915 	stw	r3,36(r2)
 402f050:	00800034 	movhi	r2,0
 402f054:	1087a304 	addi	r2,r2,7820
 402f058:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 402f05c:	e037883a 	mov	sp,fp
 402f060:	df000017 	ldw	fp,0(sp)
 402f064:	dec00104 	addi	sp,sp,4
 402f068:	f800283a 	ret

0402f06c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 402f06c:	defffd04 	addi	sp,sp,-12
 402f070:	df000215 	stw	fp,8(sp)
 402f074:	df000204 	addi	fp,sp,8
 402f078:	e13ffe15 	stw	r4,-8(fp)
 402f07c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 402f080:	00000506 	br	402f098 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 402f084:	e0bfff17 	ldw	r2,-4(fp)
 402f088:	1090000c 	andi	r2,r2,16384
 402f08c:	10000226 	beq	r2,zero,402f098 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 402f090:	00bffd44 	movi	r2,-11
 402f094:	00000b06 	br	402f0c4 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 402f098:	e0bffe17 	ldw	r2,-8(fp)
 402f09c:	10c00d17 	ldw	r3,52(r2)
 402f0a0:	e0bffe17 	ldw	r2,-8(fp)
 402f0a4:	10800c17 	ldw	r2,48(r2)
 402f0a8:	18800526 	beq	r3,r2,402f0c0 <altera_avalon_jtag_uart_close+0x54>
 402f0ac:	e0bffe17 	ldw	r2,-8(fp)
 402f0b0:	10c00917 	ldw	r3,36(r2)
 402f0b4:	e0bffe17 	ldw	r2,-8(fp)
 402f0b8:	10800117 	ldw	r2,4(r2)
 402f0bc:	18bff136 	bltu	r3,r2,402f084 <__flash_rwdata_start+0xffffe7c0>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 402f0c0:	0005883a 	mov	r2,zero
}
 402f0c4:	e037883a 	mov	sp,fp
 402f0c8:	df000017 	ldw	fp,0(sp)
 402f0cc:	dec00104 	addi	sp,sp,4
 402f0d0:	f800283a 	ret

0402f0d4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 402f0d4:	defffa04 	addi	sp,sp,-24
 402f0d8:	df000515 	stw	fp,20(sp)
 402f0dc:	df000504 	addi	fp,sp,20
 402f0e0:	e13ffd15 	stw	r4,-12(fp)
 402f0e4:	e17ffe15 	stw	r5,-8(fp)
 402f0e8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 402f0ec:	00bff9c4 	movi	r2,-25
 402f0f0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 402f0f4:	e0bffe17 	ldw	r2,-8(fp)
 402f0f8:	10da8060 	cmpeqi	r3,r2,27137
 402f0fc:	1800031e 	bne	r3,zero,402f10c <altera_avalon_jtag_uart_ioctl+0x38>
 402f100:	109a80a0 	cmpeqi	r2,r2,27138
 402f104:	1000191e 	bne	r2,zero,402f16c <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
 402f108:	00002806 	br	402f1ac <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 402f10c:	e0bffd17 	ldw	r2,-12(fp)
 402f110:	10c00117 	ldw	r3,4(r2)
 402f114:	00a00034 	movhi	r2,32768
 402f118:	10bfffc4 	addi	r2,r2,-1
 402f11c:	18801226 	beq	r3,r2,402f168 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
 402f120:	e0bfff17 	ldw	r2,-4(fp)
 402f124:	10800017 	ldw	r2,0(r2)
 402f128:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 402f12c:	e0bffc17 	ldw	r2,-16(fp)
 402f130:	10800090 	cmplti	r2,r2,2
 402f134:	1000061e 	bne	r2,zero,402f150 <altera_avalon_jtag_uart_ioctl+0x7c>
 402f138:	e0fffc17 	ldw	r3,-16(fp)
 402f13c:	00a00034 	movhi	r2,32768
 402f140:	10bfffc4 	addi	r2,r2,-1
 402f144:	18800226 	beq	r3,r2,402f150 <altera_avalon_jtag_uart_ioctl+0x7c>
 402f148:	e0bffc17 	ldw	r2,-16(fp)
 402f14c:	00000206 	br	402f158 <altera_avalon_jtag_uart_ioctl+0x84>
 402f150:	00a00034 	movhi	r2,32768
 402f154:	10bfff84 	addi	r2,r2,-2
 402f158:	e0fffd17 	ldw	r3,-12(fp)
 402f15c:	18800115 	stw	r2,4(r3)
      rc = 0;
 402f160:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 402f164:	00001106 	br	402f1ac <altera_avalon_jtag_uart_ioctl+0xd8>
 402f168:	00001006 	br	402f1ac <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 402f16c:	e0bffd17 	ldw	r2,-12(fp)
 402f170:	10c00117 	ldw	r3,4(r2)
 402f174:	00a00034 	movhi	r2,32768
 402f178:	10bfffc4 	addi	r2,r2,-1
 402f17c:	18800a26 	beq	r3,r2,402f1a8 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 402f180:	e0bffd17 	ldw	r2,-12(fp)
 402f184:	10c00917 	ldw	r3,36(r2)
 402f188:	e0bffd17 	ldw	r2,-12(fp)
 402f18c:	10800117 	ldw	r2,4(r2)
 402f190:	1885803a 	cmpltu	r2,r3,r2
 402f194:	10c03fcc 	andi	r3,r2,255
 402f198:	e0bfff17 	ldw	r2,-4(fp)
 402f19c:	10c00015 	stw	r3,0(r2)
      rc = 0;
 402f1a0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 402f1a4:	00000006 	br	402f1a8 <altera_avalon_jtag_uart_ioctl+0xd4>
 402f1a8:	0001883a 	nop

  default:
    break;
  }

  return rc;
 402f1ac:	e0bffb17 	ldw	r2,-20(fp)
}
 402f1b0:	e037883a 	mov	sp,fp
 402f1b4:	df000017 	ldw	fp,0(sp)
 402f1b8:	dec00104 	addi	sp,sp,4
 402f1bc:	f800283a 	ret

0402f1c0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 402f1c0:	defff304 	addi	sp,sp,-52
 402f1c4:	dfc00c15 	stw	ra,48(sp)
 402f1c8:	df000b15 	stw	fp,44(sp)
 402f1cc:	df000b04 	addi	fp,sp,44
 402f1d0:	e13ffc15 	stw	r4,-16(fp)
 402f1d4:	e17ffd15 	stw	r5,-12(fp)
 402f1d8:	e1bffe15 	stw	r6,-8(fp)
 402f1dc:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 402f1e0:	e0bffd17 	ldw	r2,-12(fp)
 402f1e4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 402f1e8:	00004906 	br	402f310 <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 402f1ec:	e0bffc17 	ldw	r2,-16(fp)
 402f1f0:	10800a17 	ldw	r2,40(r2)
 402f1f4:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 402f1f8:	e0bffc17 	ldw	r2,-16(fp)
 402f1fc:	10800b17 	ldw	r2,44(r2)
 402f200:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 402f204:	e0fff717 	ldw	r3,-36(fp)
 402f208:	e0bff817 	ldw	r2,-32(fp)
 402f20c:	18800536 	bltu	r3,r2,402f224 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 402f210:	e0fff717 	ldw	r3,-36(fp)
 402f214:	e0bff817 	ldw	r2,-32(fp)
 402f218:	1885c83a 	sub	r2,r3,r2
 402f21c:	e0bff615 	stw	r2,-40(fp)
 402f220:	00000406 	br	402f234 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 402f224:	00c20004 	movi	r3,2048
 402f228:	e0bff817 	ldw	r2,-32(fp)
 402f22c:	1885c83a 	sub	r2,r3,r2
 402f230:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 402f234:	e0bff617 	ldw	r2,-40(fp)
 402f238:	1000011e 	bne	r2,zero,402f240 <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
 402f23c:	00001d06 	br	402f2b4 <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
 402f240:	e0fffe17 	ldw	r3,-8(fp)
 402f244:	e0bff617 	ldw	r2,-40(fp)
 402f248:	1880022e 	bgeu	r3,r2,402f254 <altera_avalon_jtag_uart_read+0x94>
        n = space;
 402f24c:	e0bffe17 	ldw	r2,-8(fp)
 402f250:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 402f254:	e0bff817 	ldw	r2,-32(fp)
 402f258:	10800e04 	addi	r2,r2,56
 402f25c:	e0fffc17 	ldw	r3,-16(fp)
 402f260:	1885883a 	add	r2,r3,r2
 402f264:	e13ff517 	ldw	r4,-44(fp)
 402f268:	100b883a 	mov	r5,r2
 402f26c:	e1bff617 	ldw	r6,-40(fp)
 402f270:	40211340 	call	4021134 <memcpy>
      ptr   += n;
 402f274:	e0fff517 	ldw	r3,-44(fp)
 402f278:	e0bff617 	ldw	r2,-40(fp)
 402f27c:	1885883a 	add	r2,r3,r2
 402f280:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 402f284:	e0fffe17 	ldw	r3,-8(fp)
 402f288:	e0bff617 	ldw	r2,-40(fp)
 402f28c:	1885c83a 	sub	r2,r3,r2
 402f290:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402f294:	e0fff817 	ldw	r3,-32(fp)
 402f298:	e0bff617 	ldw	r2,-40(fp)
 402f29c:	1885883a 	add	r2,r3,r2
 402f2a0:	10c1ffcc 	andi	r3,r2,2047
 402f2a4:	e0bffc17 	ldw	r2,-16(fp)
 402f2a8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 402f2ac:	e0bffe17 	ldw	r2,-8(fp)
 402f2b0:	00bfce16 	blt	zero,r2,402f1ec <__flash_rwdata_start+0xffffe928>

    /* If we read any data then return it */
    if (ptr != buffer)
 402f2b4:	e0fff517 	ldw	r3,-44(fp)
 402f2b8:	e0bffd17 	ldw	r2,-12(fp)
 402f2bc:	18800126 	beq	r3,r2,402f2c4 <altera_avalon_jtag_uart_read+0x104>
      break;
 402f2c0:	00001506 	br	402f318 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 402f2c4:	e0bfff17 	ldw	r2,-4(fp)
 402f2c8:	1090000c 	andi	r2,r2,16384
 402f2cc:	10000126 	beq	r2,zero,402f2d4 <altera_avalon_jtag_uart_read+0x114>
      break;
 402f2d0:	00001106 	br	402f318 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 402f2d4:	0001883a 	nop
 402f2d8:	e0bffc17 	ldw	r2,-16(fp)
 402f2dc:	10c00a17 	ldw	r3,40(r2)
 402f2e0:	e0bff717 	ldw	r2,-36(fp)
 402f2e4:	1880051e 	bne	r3,r2,402f2fc <altera_avalon_jtag_uart_read+0x13c>
 402f2e8:	e0bffc17 	ldw	r2,-16(fp)
 402f2ec:	10c00917 	ldw	r3,36(r2)
 402f2f0:	e0bffc17 	ldw	r2,-16(fp)
 402f2f4:	10800117 	ldw	r2,4(r2)
 402f2f8:	18bff736 	bltu	r3,r2,402f2d8 <__flash_rwdata_start+0xffffea14>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 402f2fc:	e0bffc17 	ldw	r2,-16(fp)
 402f300:	10c00a17 	ldw	r3,40(r2)
 402f304:	e0bff717 	ldw	r2,-36(fp)
 402f308:	1880011e 	bne	r3,r2,402f310 <altera_avalon_jtag_uart_read+0x150>
      break;
 402f30c:	00000206 	br	402f318 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 402f310:	e0bffe17 	ldw	r2,-8(fp)
 402f314:	00bfb516 	blt	zero,r2,402f1ec <__flash_rwdata_start+0xffffe928>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 402f318:	e0fff517 	ldw	r3,-44(fp)
 402f31c:	e0bffd17 	ldw	r2,-12(fp)
 402f320:	18801826 	beq	r3,r2,402f384 <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402f324:	0005303a 	rdctl	r2,status
 402f328:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402f32c:	e0fffa17 	ldw	r3,-24(fp)
 402f330:	00bfff84 	movi	r2,-2
 402f334:	1884703a 	and	r2,r3,r2
 402f338:	1001703a 	wrctl	status,r2
  
  return context;
 402f33c:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 402f340:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 402f344:	e0bffc17 	ldw	r2,-16(fp)
 402f348:	10800817 	ldw	r2,32(r2)
 402f34c:	10c00054 	ori	r3,r2,1
 402f350:	e0bffc17 	ldw	r2,-16(fp)
 402f354:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 402f358:	e0bffc17 	ldw	r2,-16(fp)
 402f35c:	10800017 	ldw	r2,0(r2)
 402f360:	10800104 	addi	r2,r2,4
 402f364:	1007883a 	mov	r3,r2
 402f368:	e0bffc17 	ldw	r2,-16(fp)
 402f36c:	10800817 	ldw	r2,32(r2)
 402f370:	18800035 	stwio	r2,0(r3)
 402f374:	e0bff917 	ldw	r2,-28(fp)
 402f378:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402f37c:	e0bffb17 	ldw	r2,-20(fp)
 402f380:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 402f384:	e0fff517 	ldw	r3,-44(fp)
 402f388:	e0bffd17 	ldw	r2,-12(fp)
 402f38c:	18800426 	beq	r3,r2,402f3a0 <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
 402f390:	e0fff517 	ldw	r3,-44(fp)
 402f394:	e0bffd17 	ldw	r2,-12(fp)
 402f398:	1885c83a 	sub	r2,r3,r2
 402f39c:	00000606 	br	402f3b8 <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
 402f3a0:	e0bfff17 	ldw	r2,-4(fp)
 402f3a4:	1090000c 	andi	r2,r2,16384
 402f3a8:	10000226 	beq	r2,zero,402f3b4 <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
 402f3ac:	00bffd44 	movi	r2,-11
 402f3b0:	00000106 	br	402f3b8 <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
 402f3b4:	00bffec4 	movi	r2,-5
}
 402f3b8:	e037883a 	mov	sp,fp
 402f3bc:	dfc00117 	ldw	ra,4(sp)
 402f3c0:	df000017 	ldw	fp,0(sp)
 402f3c4:	dec00204 	addi	sp,sp,8
 402f3c8:	f800283a 	ret

0402f3cc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 402f3cc:	defff304 	addi	sp,sp,-52
 402f3d0:	dfc00c15 	stw	ra,48(sp)
 402f3d4:	df000b15 	stw	fp,44(sp)
 402f3d8:	df000b04 	addi	fp,sp,44
 402f3dc:	e13ffc15 	stw	r4,-16(fp)
 402f3e0:	e17ffd15 	stw	r5,-12(fp)
 402f3e4:	e1bffe15 	stw	r6,-8(fp)
 402f3e8:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 402f3ec:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 402f3f0:	e0bffd17 	ldw	r2,-12(fp)
 402f3f4:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 402f3f8:	00003806 	br	402f4dc <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 402f3fc:	e0bffc17 	ldw	r2,-16(fp)
 402f400:	10800c17 	ldw	r2,48(r2)
 402f404:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
 402f408:	e0bffc17 	ldw	r2,-16(fp)
 402f40c:	10800d17 	ldw	r2,52(r2)
 402f410:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 402f414:	e0fff817 	ldw	r3,-32(fp)
 402f418:	e0bff517 	ldw	r2,-44(fp)
 402f41c:	1880062e 	bgeu	r3,r2,402f438 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 402f420:	e0fff517 	ldw	r3,-44(fp)
 402f424:	e0bff817 	ldw	r2,-32(fp)
 402f428:	1885c83a 	sub	r2,r3,r2
 402f42c:	10bfffc4 	addi	r2,r2,-1
 402f430:	e0bff615 	stw	r2,-40(fp)
 402f434:	00000b06 	br	402f464 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 402f438:	e0bff517 	ldw	r2,-44(fp)
 402f43c:	10000526 	beq	r2,zero,402f454 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 402f440:	00c20004 	movi	r3,2048
 402f444:	e0bff817 	ldw	r2,-32(fp)
 402f448:	1885c83a 	sub	r2,r3,r2
 402f44c:	e0bff615 	stw	r2,-40(fp)
 402f450:	00000406 	br	402f464 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 402f454:	00c1ffc4 	movi	r3,2047
 402f458:	e0bff817 	ldw	r2,-32(fp)
 402f45c:	1885c83a 	sub	r2,r3,r2
 402f460:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 402f464:	e0bff617 	ldw	r2,-40(fp)
 402f468:	1000011e 	bne	r2,zero,402f470 <altera_avalon_jtag_uart_write+0xa4>
        break;
 402f46c:	00001d06 	br	402f4e4 <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
 402f470:	e0fffe17 	ldw	r3,-8(fp)
 402f474:	e0bff617 	ldw	r2,-40(fp)
 402f478:	1880022e 	bgeu	r3,r2,402f484 <altera_avalon_jtag_uart_write+0xb8>
        n = count;
 402f47c:	e0bffe17 	ldw	r2,-8(fp)
 402f480:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 402f484:	e0bff817 	ldw	r2,-32(fp)
 402f488:	10820e04 	addi	r2,r2,2104
 402f48c:	e0fffc17 	ldw	r3,-16(fp)
 402f490:	1885883a 	add	r2,r3,r2
 402f494:	1009883a 	mov	r4,r2
 402f498:	e17ffd17 	ldw	r5,-12(fp)
 402f49c:	e1bff617 	ldw	r6,-40(fp)
 402f4a0:	40211340 	call	4021134 <memcpy>
      ptr   += n;
 402f4a4:	e0fffd17 	ldw	r3,-12(fp)
 402f4a8:	e0bff617 	ldw	r2,-40(fp)
 402f4ac:	1885883a 	add	r2,r3,r2
 402f4b0:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 402f4b4:	e0fffe17 	ldw	r3,-8(fp)
 402f4b8:	e0bff617 	ldw	r2,-40(fp)
 402f4bc:	1885c83a 	sub	r2,r3,r2
 402f4c0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402f4c4:	e0fff817 	ldw	r3,-32(fp)
 402f4c8:	e0bff617 	ldw	r2,-40(fp)
 402f4cc:	1885883a 	add	r2,r3,r2
 402f4d0:	10c1ffcc 	andi	r3,r2,2047
 402f4d4:	e0bffc17 	ldw	r2,-16(fp)
 402f4d8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 402f4dc:	e0bffe17 	ldw	r2,-8(fp)
 402f4e0:	00bfc616 	blt	zero,r2,402f3fc <__flash_rwdata_start+0xffffeb38>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402f4e4:	0005303a 	rdctl	r2,status
 402f4e8:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402f4ec:	e0fffa17 	ldw	r3,-24(fp)
 402f4f0:	00bfff84 	movi	r2,-2
 402f4f4:	1884703a 	and	r2,r3,r2
 402f4f8:	1001703a 	wrctl	status,r2
  
  return context;
 402f4fc:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 402f500:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 402f504:	e0bffc17 	ldw	r2,-16(fp)
 402f508:	10800817 	ldw	r2,32(r2)
 402f50c:	10c00094 	ori	r3,r2,2
 402f510:	e0bffc17 	ldw	r2,-16(fp)
 402f514:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 402f518:	e0bffc17 	ldw	r2,-16(fp)
 402f51c:	10800017 	ldw	r2,0(r2)
 402f520:	10800104 	addi	r2,r2,4
 402f524:	1007883a 	mov	r3,r2
 402f528:	e0bffc17 	ldw	r2,-16(fp)
 402f52c:	10800817 	ldw	r2,32(r2)
 402f530:	18800035 	stwio	r2,0(r3)
 402f534:	e0bff917 	ldw	r2,-28(fp)
 402f538:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402f53c:	e0bffb17 	ldw	r2,-20(fp)
 402f540:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 402f544:	e0bffe17 	ldw	r2,-8(fp)
 402f548:	0080120e 	bge	zero,r2,402f594 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
 402f54c:	e0bfff17 	ldw	r2,-4(fp)
 402f550:	1090000c 	andi	r2,r2,16384
 402f554:	10000126 	beq	r2,zero,402f55c <altera_avalon_jtag_uart_write+0x190>
        break;
 402f558:	00001006 	br	402f59c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 402f55c:	0001883a 	nop
 402f560:	e0bffc17 	ldw	r2,-16(fp)
 402f564:	10c00d17 	ldw	r3,52(r2)
 402f568:	e0bff517 	ldw	r2,-44(fp)
 402f56c:	1880051e 	bne	r3,r2,402f584 <altera_avalon_jtag_uart_write+0x1b8>
 402f570:	e0bffc17 	ldw	r2,-16(fp)
 402f574:	10c00917 	ldw	r3,36(r2)
 402f578:	e0bffc17 	ldw	r2,-16(fp)
 402f57c:	10800117 	ldw	r2,4(r2)
 402f580:	18bff736 	bltu	r3,r2,402f560 <__flash_rwdata_start+0xffffec9c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 402f584:	e0bffc17 	ldw	r2,-16(fp)
 402f588:	10800917 	ldw	r2,36(r2)
 402f58c:	10000126 	beq	r2,zero,402f594 <altera_avalon_jtag_uart_write+0x1c8>
         break;
 402f590:	00000206 	br	402f59c <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
 402f594:	e0bffe17 	ldw	r2,-8(fp)
 402f598:	00bf9716 	blt	zero,r2,402f3f8 <__flash_rwdata_start+0xffffeb34>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 402f59c:	e0fffd17 	ldw	r3,-12(fp)
 402f5a0:	e0bff717 	ldw	r2,-36(fp)
 402f5a4:	18800426 	beq	r3,r2,402f5b8 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
 402f5a8:	e0fffd17 	ldw	r3,-12(fp)
 402f5ac:	e0bff717 	ldw	r2,-36(fp)
 402f5b0:	1885c83a 	sub	r2,r3,r2
 402f5b4:	00000606 	br	402f5d0 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
 402f5b8:	e0bfff17 	ldw	r2,-4(fp)
 402f5bc:	1090000c 	andi	r2,r2,16384
 402f5c0:	10000226 	beq	r2,zero,402f5cc <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
 402f5c4:	00bffd44 	movi	r2,-11
 402f5c8:	00000106 	br	402f5d0 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 402f5cc:	00bffec4 	movi	r2,-5
}
 402f5d0:	e037883a 	mov	sp,fp
 402f5d4:	dfc00117 	ldw	ra,4(sp)
 402f5d8:	df000017 	ldw	fp,0(sp)
 402f5dc:	dec00204 	addi	sp,sp,8
 402f5e0:	f800283a 	ret

0402f5e4 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 402f5e4:	defffa04 	addi	sp,sp,-24
 402f5e8:	dfc00515 	stw	ra,20(sp)
 402f5ec:	df000415 	stw	fp,16(sp)
 402f5f0:	df000404 	addi	fp,sp,16
 402f5f4:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 402f5f8:	0007883a 	mov	r3,zero
 402f5fc:	e0bfff17 	ldw	r2,-4(fp)
 402f600:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 402f604:	e0bfff17 	ldw	r2,-4(fp)
 402f608:	10800104 	addi	r2,r2,4
 402f60c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402f610:	0005303a 	rdctl	r2,status
 402f614:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402f618:	e0fffd17 	ldw	r3,-12(fp)
 402f61c:	00bfff84 	movi	r2,-2
 402f620:	1884703a 	and	r2,r3,r2
 402f624:	1001703a 	wrctl	status,r2
  
  return context;
 402f628:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 402f62c:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 402f630:	402e8480 	call	402e848 <alt_tick>
 402f634:	e0bffc17 	ldw	r2,-16(fp)
 402f638:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402f63c:	e0bffe17 	ldw	r2,-8(fp)
 402f640:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 402f644:	e037883a 	mov	sp,fp
 402f648:	dfc00117 	ldw	ra,4(sp)
 402f64c:	df000017 	ldw	fp,0(sp)
 402f650:	dec00204 	addi	sp,sp,8
 402f654:	f800283a 	ret

0402f658 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 402f658:	defff804 	addi	sp,sp,-32
 402f65c:	dfc00715 	stw	ra,28(sp)
 402f660:	df000615 	stw	fp,24(sp)
 402f664:	df000604 	addi	fp,sp,24
 402f668:	e13ffc15 	stw	r4,-16(fp)
 402f66c:	e17ffd15 	stw	r5,-12(fp)
 402f670:	e1bffe15 	stw	r6,-8(fp)
 402f674:	e1ffff15 	stw	r7,-4(fp)
 402f678:	e0bfff17 	ldw	r2,-4(fp)
 402f67c:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 402f680:	00800034 	movhi	r2,0
 402f684:	1087a304 	addi	r2,r2,7820
 402f688:	10800017 	ldw	r2,0(r2)
 402f68c:	1000041e 	bne	r2,zero,402f6a0 <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
 402f690:	00800034 	movhi	r2,0
 402f694:	1087a304 	addi	r2,r2,7820
 402f698:	e0fffb17 	ldw	r3,-20(fp)
 402f69c:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 402f6a0:	e0bffc17 	ldw	r2,-16(fp)
 402f6a4:	10800104 	addi	r2,r2,4
 402f6a8:	00c001c4 	movi	r3,7
 402f6ac:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 402f6b0:	d8000015 	stw	zero,0(sp)
 402f6b4:	e13ffd17 	ldw	r4,-12(fp)
 402f6b8:	e17ffe17 	ldw	r5,-8(fp)
 402f6bc:	018100f4 	movhi	r6,1027
 402f6c0:	31bd7904 	addi	r6,r6,-2588
 402f6c4:	e1fffc17 	ldw	r7,-16(fp)
 402f6c8:	402de980 	call	402de98 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 402f6cc:	e037883a 	mov	sp,fp
 402f6d0:	dfc00117 	ldw	ra,4(sp)
 402f6d4:	df000017 	ldw	fp,0(sp)
 402f6d8:	dec00204 	addi	sp,sp,8
 402f6dc:	f800283a 	ret

0402f6e0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 402f6e0:	defff504 	addi	sp,sp,-44
 402f6e4:	df000a15 	stw	fp,40(sp)
 402f6e8:	df000a04 	addi	fp,sp,40
 402f6ec:	e13ffc15 	stw	r4,-16(fp)
 402f6f0:	e17ffd15 	stw	r5,-12(fp)
 402f6f4:	e1bffe15 	stw	r6,-8(fp)
 402f6f8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 402f6fc:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 402f700:	00800034 	movhi	r2,0
 402f704:	1087a304 	addi	r2,r2,7820
 402f708:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 402f70c:	10003f26 	beq	r2,zero,402f80c <alt_alarm_start+0x12c>
  {
    if (alarm)
 402f710:	e0bffc17 	ldw	r2,-16(fp)
 402f714:	10003b26 	beq	r2,zero,402f804 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
 402f718:	e0bffc17 	ldw	r2,-16(fp)
 402f71c:	e0fffe17 	ldw	r3,-8(fp)
 402f720:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 402f724:	e0bffc17 	ldw	r2,-16(fp)
 402f728:	e0ffff17 	ldw	r3,-4(fp)
 402f72c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402f730:	0005303a 	rdctl	r2,status
 402f734:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402f738:	e0fff817 	ldw	r3,-32(fp)
 402f73c:	00bfff84 	movi	r2,-2
 402f740:	1884703a 	and	r2,r3,r2
 402f744:	1001703a 	wrctl	status,r2
  
  return context;
 402f748:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
 402f74c:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 402f750:	00800034 	movhi	r2,0
 402f754:	1087a404 	addi	r2,r2,7824
 402f758:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 402f75c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 402f760:	e0fffd17 	ldw	r3,-12(fp)
 402f764:	e0bff617 	ldw	r2,-40(fp)
 402f768:	1885883a 	add	r2,r3,r2
 402f76c:	10c00044 	addi	r3,r2,1
 402f770:	e0bffc17 	ldw	r2,-16(fp)
 402f774:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 402f778:	e0bffc17 	ldw	r2,-16(fp)
 402f77c:	10c00217 	ldw	r3,8(r2)
 402f780:	e0bff617 	ldw	r2,-40(fp)
 402f784:	1880042e 	bgeu	r3,r2,402f798 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
 402f788:	e0bffc17 	ldw	r2,-16(fp)
 402f78c:	00c00044 	movi	r3,1
 402f790:	10c00405 	stb	r3,16(r2)
 402f794:	00000206 	br	402f7a0 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
 402f798:	e0bffc17 	ldw	r2,-16(fp)
 402f79c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 402f7a0:	e0fffc17 	ldw	r3,-16(fp)
 402f7a4:	00800034 	movhi	r2,0
 402f7a8:	10879304 	addi	r2,r2,7756
 402f7ac:	e0bff915 	stw	r2,-28(fp)
 402f7b0:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 402f7b4:	e0bffa17 	ldw	r2,-24(fp)
 402f7b8:	e0fff917 	ldw	r3,-28(fp)
 402f7bc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 402f7c0:	e0bff917 	ldw	r2,-28(fp)
 402f7c4:	10c00017 	ldw	r3,0(r2)
 402f7c8:	e0bffa17 	ldw	r2,-24(fp)
 402f7cc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 402f7d0:	e0bff917 	ldw	r2,-28(fp)
 402f7d4:	10800017 	ldw	r2,0(r2)
 402f7d8:	e0fffa17 	ldw	r3,-24(fp)
 402f7dc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 402f7e0:	e0bff917 	ldw	r2,-28(fp)
 402f7e4:	e0fffa17 	ldw	r3,-24(fp)
 402f7e8:	10c00015 	stw	r3,0(r2)
 402f7ec:	e0bff717 	ldw	r2,-36(fp)
 402f7f0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402f7f4:	e0bffb17 	ldw	r2,-20(fp)
 402f7f8:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 402f7fc:	0005883a 	mov	r2,zero
 402f800:	00000306 	br	402f810 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
 402f804:	00bffa84 	movi	r2,-22
 402f808:	00000106 	br	402f810 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
 402f80c:	00bfde84 	movi	r2,-134
  }
}
 402f810:	e037883a 	mov	sp,fp
 402f814:	df000017 	ldw	fp,0(sp)
 402f818:	dec00104 	addi	sp,sp,4
 402f81c:	f800283a 	ret

0402f820 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 402f820:	defffa04 	addi	sp,sp,-24
 402f824:	dfc00515 	stw	ra,20(sp)
 402f828:	df000415 	stw	fp,16(sp)
 402f82c:	df000404 	addi	fp,sp,16
 402f830:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
 402f834:	00800244 	movi	r2,9
 402f838:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 402f83c:	e13ffd17 	ldw	r4,-12(fp)
 402f840:	014003f4 	movhi	r5,15
 402f844:	29509004 	addi	r5,r5,16960
 402f848:	402110c0 	call	402110c <__mulsi3>
 402f84c:	010221b4 	movhi	r4,2182
 402f850:	21007004 	addi	r4,r4,448
 402f854:	100b883a 	mov	r5,r2
 402f858:	40210fc0 	call	40210fc <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 402f85c:	01200034 	movhi	r4,32768
 402f860:	213fffc4 	addi	r4,r4,-1
 402f864:	100b883a 	mov	r5,r2
 402f868:	40210fc0 	call	40210fc <__udivsi3>
 402f86c:	e13fff17 	ldw	r4,-4(fp)
 402f870:	100b883a 	mov	r5,r2
 402f874:	40210fc0 	call	40210fc <__udivsi3>
 402f878:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 402f87c:	e0bffe17 	ldw	r2,-8(fp)
 402f880:	10002a26 	beq	r2,zero,402f92c <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 402f884:	e03ffc15 	stw	zero,-16(fp)
 402f888:	00001706 	br	402f8e8 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 402f88c:	00a00034 	movhi	r2,32768
 402f890:	10bfffc4 	addi	r2,r2,-1
 402f894:	10bfffc4 	addi	r2,r2,-1
 402f898:	103ffe1e 	bne	r2,zero,402f894 <__flash_rwdata_start+0xffffefd0>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 402f89c:	e13ffd17 	ldw	r4,-12(fp)
 402f8a0:	014003f4 	movhi	r5,15
 402f8a4:	29509004 	addi	r5,r5,16960
 402f8a8:	402110c0 	call	402110c <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 402f8ac:	010221b4 	movhi	r4,2182
 402f8b0:	21007004 	addi	r4,r4,448
 402f8b4:	100b883a 	mov	r5,r2
 402f8b8:	40210fc0 	call	40210fc <__udivsi3>
 402f8bc:	01200034 	movhi	r4,32768
 402f8c0:	213fffc4 	addi	r4,r4,-1
 402f8c4:	100b883a 	mov	r5,r2
 402f8c8:	40210fc0 	call	40210fc <__udivsi3>
 402f8cc:	1007883a 	mov	r3,r2
 402f8d0:	e0bfff17 	ldw	r2,-4(fp)
 402f8d4:	10c5c83a 	sub	r2,r2,r3
 402f8d8:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 402f8dc:	e0bffc17 	ldw	r2,-16(fp)
 402f8e0:	10800044 	addi	r2,r2,1
 402f8e4:	e0bffc15 	stw	r2,-16(fp)
 402f8e8:	e0fffc17 	ldw	r3,-16(fp)
 402f8ec:	e0bffe17 	ldw	r2,-8(fp)
 402f8f0:	18bfe616 	blt	r3,r2,402f88c <__flash_rwdata_start+0xffffefc8>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 402f8f4:	e13ffd17 	ldw	r4,-12(fp)
 402f8f8:	014003f4 	movhi	r5,15
 402f8fc:	29509004 	addi	r5,r5,16960
 402f900:	402110c0 	call	402110c <__mulsi3>
 402f904:	010221b4 	movhi	r4,2182
 402f908:	21007004 	addi	r4,r4,448
 402f90c:	100b883a 	mov	r5,r2
 402f910:	40210fc0 	call	40210fc <__udivsi3>
 402f914:	1009883a 	mov	r4,r2
 402f918:	e17fff17 	ldw	r5,-4(fp)
 402f91c:	402110c0 	call	402110c <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 402f920:	10bfffc4 	addi	r2,r2,-1
 402f924:	103ffe1e 	bne	r2,zero,402f920 <__flash_rwdata_start+0xfffff05c>
 402f928:	00000d06 	br	402f960 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 402f92c:	e13ffd17 	ldw	r4,-12(fp)
 402f930:	014003f4 	movhi	r5,15
 402f934:	29509004 	addi	r5,r5,16960
 402f938:	402110c0 	call	402110c <__mulsi3>
 402f93c:	010221b4 	movhi	r4,2182
 402f940:	21007004 	addi	r4,r4,448
 402f944:	100b883a 	mov	r5,r2
 402f948:	40210fc0 	call	40210fc <__udivsi3>
 402f94c:	1009883a 	mov	r4,r2
 402f950:	e17fff17 	ldw	r5,-4(fp)
 402f954:	402110c0 	call	402110c <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 402f958:	10bfffc4 	addi	r2,r2,-1
 402f95c:	00bffe16 	blt	zero,r2,402f958 <__flash_rwdata_start+0xfffff094>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 402f960:	0005883a 	mov	r2,zero
}
 402f964:	e037883a 	mov	sp,fp
 402f968:	dfc00117 	ldw	ra,4(sp)
 402f96c:	df000017 	ldw	fp,0(sp)
 402f970:	dec00204 	addi	sp,sp,8
 402f974:	f800283a 	ret

0402f978 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402f978:	defffe04 	addi	sp,sp,-8
 402f97c:	dfc00115 	stw	ra,4(sp)
 402f980:	df000015 	stw	fp,0(sp)
 402f984:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402f988:	00800034 	movhi	r2,0
 402f98c:	10879004 	addi	r2,r2,7744
 402f990:	10800017 	ldw	r2,0(r2)
 402f994:	10000526 	beq	r2,zero,402f9ac <alt_get_errno+0x34>
 402f998:	00800034 	movhi	r2,0
 402f99c:	10879004 	addi	r2,r2,7744
 402f9a0:	10800017 	ldw	r2,0(r2)
 402f9a4:	103ee83a 	callr	r2
 402f9a8:	00000206 	br	402f9b4 <alt_get_errno+0x3c>
 402f9ac:	00800034 	movhi	r2,0
 402f9b0:	10879e04 	addi	r2,r2,7800
}
 402f9b4:	e037883a 	mov	sp,fp
 402f9b8:	dfc00117 	ldw	ra,4(sp)
 402f9bc:	df000017 	ldw	fp,0(sp)
 402f9c0:	dec00204 	addi	sp,sp,8
 402f9c4:	f800283a 	ret

0402f9c8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 402f9c8:	defffa04 	addi	sp,sp,-24
 402f9cc:	dfc00515 	stw	ra,20(sp)
 402f9d0:	df000415 	stw	fp,16(sp)
 402f9d4:	df000404 	addi	fp,sp,16
 402f9d8:	e13ffe15 	stw	r4,-8(fp)
 402f9dc:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 402f9e0:	e0bffe17 	ldw	r2,-8(fp)
 402f9e4:	10000326 	beq	r2,zero,402f9f4 <alt_dev_llist_insert+0x2c>
 402f9e8:	e0bffe17 	ldw	r2,-8(fp)
 402f9ec:	10800217 	ldw	r2,8(r2)
 402f9f0:	1000061e 	bne	r2,zero,402fa0c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 402f9f4:	402f9780 	call	402f978 <alt_get_errno>
 402f9f8:	1007883a 	mov	r3,r2
 402f9fc:	00800584 	movi	r2,22
 402fa00:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 402fa04:	00bffa84 	movi	r2,-22
 402fa08:	00001306 	br	402fa58 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 402fa0c:	e0bffe17 	ldw	r2,-8(fp)
 402fa10:	e0ffff17 	ldw	r3,-4(fp)
 402fa14:	e0fffc15 	stw	r3,-16(fp)
 402fa18:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 402fa1c:	e0bffd17 	ldw	r2,-12(fp)
 402fa20:	e0fffc17 	ldw	r3,-16(fp)
 402fa24:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 402fa28:	e0bffc17 	ldw	r2,-16(fp)
 402fa2c:	10c00017 	ldw	r3,0(r2)
 402fa30:	e0bffd17 	ldw	r2,-12(fp)
 402fa34:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 402fa38:	e0bffc17 	ldw	r2,-16(fp)
 402fa3c:	10800017 	ldw	r2,0(r2)
 402fa40:	e0fffd17 	ldw	r3,-12(fp)
 402fa44:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 402fa48:	e0bffc17 	ldw	r2,-16(fp)
 402fa4c:	e0fffd17 	ldw	r3,-12(fp)
 402fa50:	10c00015 	stw	r3,0(r2)

  return 0;  
 402fa54:	0005883a 	mov	r2,zero
}
 402fa58:	e037883a 	mov	sp,fp
 402fa5c:	dfc00117 	ldw	ra,4(sp)
 402fa60:	df000017 	ldw	fp,0(sp)
 402fa64:	dec00204 	addi	sp,sp,8
 402fa68:	f800283a 	ret

0402fa6c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 402fa6c:	defffd04 	addi	sp,sp,-12
 402fa70:	dfc00215 	stw	ra,8(sp)
 402fa74:	df000115 	stw	fp,4(sp)
 402fa78:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 402fa7c:	008100f4 	movhi	r2,1027
 402fa80:	10815d04 	addi	r2,r2,1396
 402fa84:	e0bfff15 	stw	r2,-4(fp)
 402fa88:	00000606 	br	402faa4 <_do_ctors+0x38>
        (*ctor) (); 
 402fa8c:	e0bfff17 	ldw	r2,-4(fp)
 402fa90:	10800017 	ldw	r2,0(r2)
 402fa94:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 402fa98:	e0bfff17 	ldw	r2,-4(fp)
 402fa9c:	10bfff04 	addi	r2,r2,-4
 402faa0:	e0bfff15 	stw	r2,-4(fp)
 402faa4:	e0ffff17 	ldw	r3,-4(fp)
 402faa8:	008100f4 	movhi	r2,1027
 402faac:	10815e04 	addi	r2,r2,1400
 402fab0:	18bff62e 	bgeu	r3,r2,402fa8c <__flash_rwdata_start+0xfffff1c8>
        (*ctor) (); 
}
 402fab4:	e037883a 	mov	sp,fp
 402fab8:	dfc00117 	ldw	ra,4(sp)
 402fabc:	df000017 	ldw	fp,0(sp)
 402fac0:	dec00204 	addi	sp,sp,8
 402fac4:	f800283a 	ret

0402fac8 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 402fac8:	defffd04 	addi	sp,sp,-12
 402facc:	dfc00215 	stw	ra,8(sp)
 402fad0:	df000115 	stw	fp,4(sp)
 402fad4:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 402fad8:	008100f4 	movhi	r2,1027
 402fadc:	10815d04 	addi	r2,r2,1396
 402fae0:	e0bfff15 	stw	r2,-4(fp)
 402fae4:	00000606 	br	402fb00 <_do_dtors+0x38>
        (*dtor) (); 
 402fae8:	e0bfff17 	ldw	r2,-4(fp)
 402faec:	10800017 	ldw	r2,0(r2)
 402faf0:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 402faf4:	e0bfff17 	ldw	r2,-4(fp)
 402faf8:	10bfff04 	addi	r2,r2,-4
 402fafc:	e0bfff15 	stw	r2,-4(fp)
 402fb00:	e0ffff17 	ldw	r3,-4(fp)
 402fb04:	008100f4 	movhi	r2,1027
 402fb08:	10815e04 	addi	r2,r2,1400
 402fb0c:	18bff62e 	bgeu	r3,r2,402fae8 <__flash_rwdata_start+0xfffff224>
        (*dtor) (); 
}
 402fb10:	e037883a 	mov	sp,fp
 402fb14:	dfc00117 	ldw	ra,4(sp)
 402fb18:	df000017 	ldw	fp,0(sp)
 402fb1c:	dec00204 	addi	sp,sp,8
 402fb20:	f800283a 	ret

0402fb24 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 402fb24:	deffff04 	addi	sp,sp,-4
 402fb28:	df000015 	stw	fp,0(sp)
 402fb2c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 402fb30:	e037883a 	mov	sp,fp
 402fb34:	df000017 	ldw	fp,0(sp)
 402fb38:	dec00104 	addi	sp,sp,4
 402fb3c:	f800283a 	ret

0402fb40 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 402fb40:	defff804 	addi	sp,sp,-32
 402fb44:	dfc00715 	stw	ra,28(sp)
 402fb48:	df000615 	stw	fp,24(sp)
 402fb4c:	dc000515 	stw	r16,20(sp)
 402fb50:	df000604 	addi	fp,sp,24
 402fb54:	e13ffb15 	stw	r4,-20(fp)
 402fb58:	e17ffc15 	stw	r5,-16(fp)
 402fb5c:	e1bffd15 	stw	r6,-12(fp)
 402fb60:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 402fb64:	e13ffc17 	ldw	r4,-16(fp)
 402fb68:	e17ffd17 	ldw	r5,-12(fp)
 402fb6c:	e1bffe17 	ldw	r6,-8(fp)
 402fb70:	402fddc0 	call	402fddc <open>
 402fb74:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 402fb78:	e0bffa17 	ldw	r2,-24(fp)
 402fb7c:	10002216 	blt	r2,zero,402fc08 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 402fb80:	04000034 	movhi	r16,0
 402fb84:	84030604 	addi	r16,r16,3096
 402fb88:	e0bffa17 	ldw	r2,-24(fp)
 402fb8c:	1009883a 	mov	r4,r2
 402fb90:	01400304 	movi	r5,12
 402fb94:	402110c0 	call	402110c <__mulsi3>
 402fb98:	8085883a 	add	r2,r16,r2
 402fb9c:	10c00017 	ldw	r3,0(r2)
 402fba0:	e0bffb17 	ldw	r2,-20(fp)
 402fba4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 402fba8:	04000034 	movhi	r16,0
 402fbac:	84030604 	addi	r16,r16,3096
 402fbb0:	e0bffa17 	ldw	r2,-24(fp)
 402fbb4:	1009883a 	mov	r4,r2
 402fbb8:	01400304 	movi	r5,12
 402fbbc:	402110c0 	call	402110c <__mulsi3>
 402fbc0:	10800104 	addi	r2,r2,4
 402fbc4:	8085883a 	add	r2,r16,r2
 402fbc8:	10c00017 	ldw	r3,0(r2)
 402fbcc:	e0bffb17 	ldw	r2,-20(fp)
 402fbd0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 402fbd4:	04000034 	movhi	r16,0
 402fbd8:	84030604 	addi	r16,r16,3096
 402fbdc:	e0bffa17 	ldw	r2,-24(fp)
 402fbe0:	1009883a 	mov	r4,r2
 402fbe4:	01400304 	movi	r5,12
 402fbe8:	402110c0 	call	402110c <__mulsi3>
 402fbec:	10800204 	addi	r2,r2,8
 402fbf0:	8085883a 	add	r2,r16,r2
 402fbf4:	10c00017 	ldw	r3,0(r2)
 402fbf8:	e0bffb17 	ldw	r2,-20(fp)
 402fbfc:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 402fc00:	e13ffa17 	ldw	r4,-24(fp)
 402fc04:	402e6800 	call	402e680 <alt_release_fd>
  }
} 
 402fc08:	e6ffff04 	addi	sp,fp,-4
 402fc0c:	dfc00217 	ldw	ra,8(sp)
 402fc10:	df000117 	ldw	fp,4(sp)
 402fc14:	dc000017 	ldw	r16,0(sp)
 402fc18:	dec00304 	addi	sp,sp,12
 402fc1c:	f800283a 	ret

0402fc20 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 402fc20:	defffb04 	addi	sp,sp,-20
 402fc24:	dfc00415 	stw	ra,16(sp)
 402fc28:	df000315 	stw	fp,12(sp)
 402fc2c:	df000304 	addi	fp,sp,12
 402fc30:	e13ffd15 	stw	r4,-12(fp)
 402fc34:	e17ffe15 	stw	r5,-8(fp)
 402fc38:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 402fc3c:	01000034 	movhi	r4,0
 402fc40:	21030904 	addi	r4,r4,3108
 402fc44:	e17ffd17 	ldw	r5,-12(fp)
 402fc48:	01800044 	movi	r6,1
 402fc4c:	01c07fc4 	movi	r7,511
 402fc50:	402fb400 	call	402fb40 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 402fc54:	01000034 	movhi	r4,0
 402fc58:	21030604 	addi	r4,r4,3096
 402fc5c:	e17ffe17 	ldw	r5,-8(fp)
 402fc60:	000d883a 	mov	r6,zero
 402fc64:	01c07fc4 	movi	r7,511
 402fc68:	402fb400 	call	402fb40 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 402fc6c:	01000034 	movhi	r4,0
 402fc70:	21030c04 	addi	r4,r4,3120
 402fc74:	e17fff17 	ldw	r5,-4(fp)
 402fc78:	01800044 	movi	r6,1
 402fc7c:	01c07fc4 	movi	r7,511
 402fc80:	402fb400 	call	402fb40 <alt_open_fd>
}  
 402fc84:	e037883a 	mov	sp,fp
 402fc88:	dfc00117 	ldw	ra,4(sp)
 402fc8c:	df000017 	ldw	fp,0(sp)
 402fc90:	dec00204 	addi	sp,sp,8
 402fc94:	f800283a 	ret

0402fc98 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402fc98:	defffe04 	addi	sp,sp,-8
 402fc9c:	dfc00115 	stw	ra,4(sp)
 402fca0:	df000015 	stw	fp,0(sp)
 402fca4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402fca8:	00800034 	movhi	r2,0
 402fcac:	10879004 	addi	r2,r2,7744
 402fcb0:	10800017 	ldw	r2,0(r2)
 402fcb4:	10000526 	beq	r2,zero,402fccc <alt_get_errno+0x34>
 402fcb8:	00800034 	movhi	r2,0
 402fcbc:	10879004 	addi	r2,r2,7744
 402fcc0:	10800017 	ldw	r2,0(r2)
 402fcc4:	103ee83a 	callr	r2
 402fcc8:	00000206 	br	402fcd4 <alt_get_errno+0x3c>
 402fccc:	00800034 	movhi	r2,0
 402fcd0:	10879e04 	addi	r2,r2,7800
}
 402fcd4:	e037883a 	mov	sp,fp
 402fcd8:	dfc00117 	ldw	ra,4(sp)
 402fcdc:	df000017 	ldw	fp,0(sp)
 402fce0:	dec00204 	addi	sp,sp,8
 402fce4:	f800283a 	ret

0402fce8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 402fce8:	defffb04 	addi	sp,sp,-20
 402fcec:	dfc00415 	stw	ra,16(sp)
 402fcf0:	df000315 	stw	fp,12(sp)
 402fcf4:	dc000215 	stw	r16,8(sp)
 402fcf8:	df000304 	addi	fp,sp,12
 402fcfc:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 402fd00:	e0bffe17 	ldw	r2,-8(fp)
 402fd04:	10800217 	ldw	r2,8(r2)
 402fd08:	10d00034 	orhi	r3,r2,16384
 402fd0c:	e0bffe17 	ldw	r2,-8(fp)
 402fd10:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 402fd14:	e03ffd15 	stw	zero,-12(fp)
 402fd18:	00002306 	br	402fda8 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 402fd1c:	04000034 	movhi	r16,0
 402fd20:	84030604 	addi	r16,r16,3096
 402fd24:	e0bffd17 	ldw	r2,-12(fp)
 402fd28:	1009883a 	mov	r4,r2
 402fd2c:	01400304 	movi	r5,12
 402fd30:	402110c0 	call	402110c <__mulsi3>
 402fd34:	8085883a 	add	r2,r16,r2
 402fd38:	10c00017 	ldw	r3,0(r2)
 402fd3c:	e0bffe17 	ldw	r2,-8(fp)
 402fd40:	10800017 	ldw	r2,0(r2)
 402fd44:	1880151e 	bne	r3,r2,402fd9c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 402fd48:	04000034 	movhi	r16,0
 402fd4c:	84030604 	addi	r16,r16,3096
 402fd50:	e0bffd17 	ldw	r2,-12(fp)
 402fd54:	1009883a 	mov	r4,r2
 402fd58:	01400304 	movi	r5,12
 402fd5c:	402110c0 	call	402110c <__mulsi3>
 402fd60:	10800204 	addi	r2,r2,8
 402fd64:	8085883a 	add	r2,r16,r2
 402fd68:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 402fd6c:	10000b0e 	bge	r2,zero,402fd9c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 402fd70:	e13ffd17 	ldw	r4,-12(fp)
 402fd74:	01400304 	movi	r5,12
 402fd78:	402110c0 	call	402110c <__mulsi3>
 402fd7c:	1007883a 	mov	r3,r2
 402fd80:	00800034 	movhi	r2,0
 402fd84:	10830604 	addi	r2,r2,3096
 402fd88:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 402fd8c:	e0bffe17 	ldw	r2,-8(fp)
 402fd90:	18800226 	beq	r3,r2,402fd9c <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 402fd94:	00bffcc4 	movi	r2,-13
 402fd98:	00000a06 	br	402fdc4 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 402fd9c:	e0bffd17 	ldw	r2,-12(fp)
 402fda0:	10800044 	addi	r2,r2,1
 402fda4:	e0bffd15 	stw	r2,-12(fp)
 402fda8:	00800034 	movhi	r2,0
 402fdac:	10878f04 	addi	r2,r2,7740
 402fdb0:	10800017 	ldw	r2,0(r2)
 402fdb4:	1007883a 	mov	r3,r2
 402fdb8:	e0bffd17 	ldw	r2,-12(fp)
 402fdbc:	18bfd72e 	bgeu	r3,r2,402fd1c <__flash_rwdata_start+0xfffff458>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 402fdc0:	0005883a 	mov	r2,zero
}
 402fdc4:	e6ffff04 	addi	sp,fp,-4
 402fdc8:	dfc00217 	ldw	ra,8(sp)
 402fdcc:	df000117 	ldw	fp,4(sp)
 402fdd0:	dc000017 	ldw	r16,0(sp)
 402fdd4:	dec00304 	addi	sp,sp,12
 402fdd8:	f800283a 	ret

0402fddc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 402fddc:	defff604 	addi	sp,sp,-40
 402fde0:	dfc00915 	stw	ra,36(sp)
 402fde4:	df000815 	stw	fp,32(sp)
 402fde8:	df000804 	addi	fp,sp,32
 402fdec:	e13ffd15 	stw	r4,-12(fp)
 402fdf0:	e17ffe15 	stw	r5,-8(fp)
 402fdf4:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 402fdf8:	00bfffc4 	movi	r2,-1
 402fdfc:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 402fe00:	00bffb44 	movi	r2,-19
 402fe04:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 402fe08:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 402fe0c:	e13ffd17 	ldw	r4,-12(fp)
 402fe10:	01400034 	movhi	r5,0
 402fe14:	29478d04 	addi	r5,r5,7732
 402fe18:	402ff5c0 	call	402ff5c <alt_find_dev>
 402fe1c:	e0bff815 	stw	r2,-32(fp)
 402fe20:	e0bff817 	ldw	r2,-32(fp)
 402fe24:	1000051e 	bne	r2,zero,402fe3c <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 402fe28:	e13ffd17 	ldw	r4,-12(fp)
 402fe2c:	402ffec0 	call	402ffec <alt_find_file>
 402fe30:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 402fe34:	00800044 	movi	r2,1
 402fe38:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 402fe3c:	e0bff817 	ldw	r2,-32(fp)
 402fe40:	10002b26 	beq	r2,zero,402fef0 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
 402fe44:	e13ff817 	ldw	r4,-32(fp)
 402fe48:	40301000 	call	4030100 <alt_get_fd>
 402fe4c:	e0bff915 	stw	r2,-28(fp)
 402fe50:	e0bff917 	ldw	r2,-28(fp)
 402fe54:	1000030e 	bge	r2,zero,402fe64 <open+0x88>
    {
      status = index;
 402fe58:	e0bff917 	ldw	r2,-28(fp)
 402fe5c:	e0bffa15 	stw	r2,-24(fp)
 402fe60:	00002506 	br	402fef8 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
 402fe64:	e13ff917 	ldw	r4,-28(fp)
 402fe68:	01400304 	movi	r5,12
 402fe6c:	402110c0 	call	402110c <__mulsi3>
 402fe70:	1007883a 	mov	r3,r2
 402fe74:	00800034 	movhi	r2,0
 402fe78:	10830604 	addi	r2,r2,3096
 402fe7c:	1885883a 	add	r2,r3,r2
 402fe80:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 402fe84:	e0fffe17 	ldw	r3,-8(fp)
 402fe88:	00900034 	movhi	r2,16384
 402fe8c:	10bfffc4 	addi	r2,r2,-1
 402fe90:	1886703a 	and	r3,r3,r2
 402fe94:	e0bffc17 	ldw	r2,-16(fp)
 402fe98:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 402fe9c:	e0bffb17 	ldw	r2,-20(fp)
 402fea0:	1000051e 	bne	r2,zero,402feb8 <open+0xdc>
 402fea4:	e13ffc17 	ldw	r4,-16(fp)
 402fea8:	402fce80 	call	402fce8 <alt_file_locked>
 402feac:	e0bffa15 	stw	r2,-24(fp)
 402feb0:	e0bffa17 	ldw	r2,-24(fp)
 402feb4:	10001016 	blt	r2,zero,402fef8 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 402feb8:	e0bff817 	ldw	r2,-32(fp)
 402febc:	10800317 	ldw	r2,12(r2)
 402fec0:	10000826 	beq	r2,zero,402fee4 <open+0x108>
 402fec4:	e0bff817 	ldw	r2,-32(fp)
 402fec8:	10800317 	ldw	r2,12(r2)
 402fecc:	e13ffc17 	ldw	r4,-16(fp)
 402fed0:	e17ffd17 	ldw	r5,-12(fp)
 402fed4:	e1bffe17 	ldw	r6,-8(fp)
 402fed8:	e1ffff17 	ldw	r7,-4(fp)
 402fedc:	103ee83a 	callr	r2
 402fee0:	00000106 	br	402fee8 <open+0x10c>
 402fee4:	0005883a 	mov	r2,zero
 402fee8:	e0bffa15 	stw	r2,-24(fp)
 402feec:	00000206 	br	402fef8 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
 402fef0:	00bffb44 	movi	r2,-19
 402fef4:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 402fef8:	e0bffa17 	ldw	r2,-24(fp)
 402fefc:	1000090e 	bge	r2,zero,402ff24 <open+0x148>
  {
    alt_release_fd (index);  
 402ff00:	e13ff917 	ldw	r4,-28(fp)
 402ff04:	402e6800 	call	402e680 <alt_release_fd>
    ALT_ERRNO = -status;
 402ff08:	402fc980 	call	402fc98 <alt_get_errno>
 402ff0c:	1007883a 	mov	r3,r2
 402ff10:	e0bffa17 	ldw	r2,-24(fp)
 402ff14:	0085c83a 	sub	r2,zero,r2
 402ff18:	18800015 	stw	r2,0(r3)
    return -1;
 402ff1c:	00bfffc4 	movi	r2,-1
 402ff20:	00000106 	br	402ff28 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
 402ff24:	e0bff917 	ldw	r2,-28(fp)
}
 402ff28:	e037883a 	mov	sp,fp
 402ff2c:	dfc00117 	ldw	ra,4(sp)
 402ff30:	df000017 	ldw	fp,0(sp)
 402ff34:	dec00204 	addi	sp,sp,8
 402ff38:	f800283a 	ret

0402ff3c <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
 402ff3c:	deffff04 	addi	sp,sp,-4
 402ff40:	df000015 	stw	fp,0(sp)
 402ff44:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 402ff48:	000170fa 	wrctl	ienable,zero
}
 402ff4c:	e037883a 	mov	sp,fp
 402ff50:	df000017 	ldw	fp,0(sp)
 402ff54:	dec00104 	addi	sp,sp,4
 402ff58:	f800283a 	ret

0402ff5c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 402ff5c:	defffa04 	addi	sp,sp,-24
 402ff60:	dfc00515 	stw	ra,20(sp)
 402ff64:	df000415 	stw	fp,16(sp)
 402ff68:	df000404 	addi	fp,sp,16
 402ff6c:	e13ffe15 	stw	r4,-8(fp)
 402ff70:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 402ff74:	e0bfff17 	ldw	r2,-4(fp)
 402ff78:	10800017 	ldw	r2,0(r2)
 402ff7c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 402ff80:	e13ffe17 	ldw	r4,-8(fp)
 402ff84:	402142c0 	call	402142c <strlen>
 402ff88:	10800044 	addi	r2,r2,1
 402ff8c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 402ff90:	00000d06 	br	402ffc8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 402ff94:	e0bffc17 	ldw	r2,-16(fp)
 402ff98:	10c00217 	ldw	r3,8(r2)
 402ff9c:	e0bffd17 	ldw	r2,-12(fp)
 402ffa0:	1809883a 	mov	r4,r3
 402ffa4:	e17ffe17 	ldw	r5,-8(fp)
 402ffa8:	100d883a 	mov	r6,r2
 402ffac:	40302200 	call	4030220 <memcmp>
 402ffb0:	1000021e 	bne	r2,zero,402ffbc <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 402ffb4:	e0bffc17 	ldw	r2,-16(fp)
 402ffb8:	00000706 	br	402ffd8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 402ffbc:	e0bffc17 	ldw	r2,-16(fp)
 402ffc0:	10800017 	ldw	r2,0(r2)
 402ffc4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 402ffc8:	e0fffc17 	ldw	r3,-16(fp)
 402ffcc:	e0bfff17 	ldw	r2,-4(fp)
 402ffd0:	18bff01e 	bne	r3,r2,402ff94 <__flash_rwdata_start+0xfffff6d0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 402ffd4:	0005883a 	mov	r2,zero
}
 402ffd8:	e037883a 	mov	sp,fp
 402ffdc:	dfc00117 	ldw	ra,4(sp)
 402ffe0:	df000017 	ldw	fp,0(sp)
 402ffe4:	dec00204 	addi	sp,sp,8
 402ffe8:	f800283a 	ret

0402ffec <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 402ffec:	defffb04 	addi	sp,sp,-20
 402fff0:	dfc00415 	stw	ra,16(sp)
 402fff4:	df000315 	stw	fp,12(sp)
 402fff8:	df000304 	addi	fp,sp,12
 402fffc:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 4030000:	00800034 	movhi	r2,0
 4030004:	10878b04 	addi	r2,r2,7724
 4030008:	10800017 	ldw	r2,0(r2)
 403000c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 4030010:	00003106 	br	40300d8 <alt_find_file+0xec>
  {
    len = strlen(next->name);
 4030014:	e0bffd17 	ldw	r2,-12(fp)
 4030018:	10800217 	ldw	r2,8(r2)
 403001c:	1009883a 	mov	r4,r2
 4030020:	402142c0 	call	402142c <strlen>
 4030024:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 4030028:	e0bffd17 	ldw	r2,-12(fp)
 403002c:	10c00217 	ldw	r3,8(r2)
 4030030:	e0bffe17 	ldw	r2,-8(fp)
 4030034:	10bfffc4 	addi	r2,r2,-1
 4030038:	1885883a 	add	r2,r3,r2
 403003c:	10800003 	ldbu	r2,0(r2)
 4030040:	10803fcc 	andi	r2,r2,255
 4030044:	1080201c 	xori	r2,r2,128
 4030048:	10bfe004 	addi	r2,r2,-128
 403004c:	10800bd8 	cmpnei	r2,r2,47
 4030050:	1000031e 	bne	r2,zero,4030060 <alt_find_file+0x74>
    {
      len -= 1;
 4030054:	e0bffe17 	ldw	r2,-8(fp)
 4030058:	10bfffc4 	addi	r2,r2,-1
 403005c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 4030060:	e0bffe17 	ldw	r2,-8(fp)
 4030064:	e0ffff17 	ldw	r3,-4(fp)
 4030068:	1885883a 	add	r2,r3,r2
 403006c:	10800003 	ldbu	r2,0(r2)
 4030070:	10803fcc 	andi	r2,r2,255
 4030074:	1080201c 	xori	r2,r2,128
 4030078:	10bfe004 	addi	r2,r2,-128
 403007c:	10800be0 	cmpeqi	r2,r2,47
 4030080:	1000081e 	bne	r2,zero,40300a4 <alt_find_file+0xb8>
 4030084:	e0bffe17 	ldw	r2,-8(fp)
 4030088:	e0ffff17 	ldw	r3,-4(fp)
 403008c:	1885883a 	add	r2,r3,r2
 4030090:	10800003 	ldbu	r2,0(r2)
 4030094:	10803fcc 	andi	r2,r2,255
 4030098:	1080201c 	xori	r2,r2,128
 403009c:	10bfe004 	addi	r2,r2,-128
 40300a0:	10000a1e 	bne	r2,zero,40300cc <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
 40300a4:	e0bffd17 	ldw	r2,-12(fp)
 40300a8:	10c00217 	ldw	r3,8(r2)
 40300ac:	e0bffe17 	ldw	r2,-8(fp)
 40300b0:	1809883a 	mov	r4,r3
 40300b4:	e17fff17 	ldw	r5,-4(fp)
 40300b8:	100d883a 	mov	r6,r2
 40300bc:	40302200 	call	4030220 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 40300c0:	1000021e 	bne	r2,zero,40300cc <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 40300c4:	e0bffd17 	ldw	r2,-12(fp)
 40300c8:	00000806 	br	40300ec <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
 40300cc:	e0bffd17 	ldw	r2,-12(fp)
 40300d0:	10800017 	ldw	r2,0(r2)
 40300d4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 40300d8:	e0fffd17 	ldw	r3,-12(fp)
 40300dc:	00800034 	movhi	r2,0
 40300e0:	10878b04 	addi	r2,r2,7724
 40300e4:	18bfcb1e 	bne	r3,r2,4030014 <__flash_rwdata_start+0xfffff750>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 40300e8:	0005883a 	mov	r2,zero
}
 40300ec:	e037883a 	mov	sp,fp
 40300f0:	dfc00117 	ldw	ra,4(sp)
 40300f4:	df000017 	ldw	fp,0(sp)
 40300f8:	dec00204 	addi	sp,sp,8
 40300fc:	f800283a 	ret

04030100 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 4030100:	defffa04 	addi	sp,sp,-24
 4030104:	dfc00515 	stw	ra,20(sp)
 4030108:	df000415 	stw	fp,16(sp)
 403010c:	dc000315 	stw	r16,12(sp)
 4030110:	df000404 	addi	fp,sp,16
 4030114:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 4030118:	00bffa04 	movi	r2,-24
 403011c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 4030120:	e03ffc15 	stw	zero,-16(fp)
 4030124:	00002106 	br	40301ac <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
 4030128:	04000034 	movhi	r16,0
 403012c:	84030604 	addi	r16,r16,3096
 4030130:	e0bffc17 	ldw	r2,-16(fp)
 4030134:	1009883a 	mov	r4,r2
 4030138:	01400304 	movi	r5,12
 403013c:	402110c0 	call	402110c <__mulsi3>
 4030140:	8085883a 	add	r2,r16,r2
 4030144:	10800017 	ldw	r2,0(r2)
 4030148:	1000151e 	bne	r2,zero,40301a0 <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
 403014c:	04000034 	movhi	r16,0
 4030150:	84030604 	addi	r16,r16,3096
 4030154:	e0bffc17 	ldw	r2,-16(fp)
 4030158:	1009883a 	mov	r4,r2
 403015c:	01400304 	movi	r5,12
 4030160:	402110c0 	call	402110c <__mulsi3>
 4030164:	8085883a 	add	r2,r16,r2
 4030168:	e0fffe17 	ldw	r3,-8(fp)
 403016c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 4030170:	00800034 	movhi	r2,0
 4030174:	10878f04 	addi	r2,r2,7740
 4030178:	10c00017 	ldw	r3,0(r2)
 403017c:	e0bffc17 	ldw	r2,-16(fp)
 4030180:	1880040e 	bge	r3,r2,4030194 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
 4030184:	00800034 	movhi	r2,0
 4030188:	10878f04 	addi	r2,r2,7740
 403018c:	e0fffc17 	ldw	r3,-16(fp)
 4030190:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
 4030194:	e0bffc17 	ldw	r2,-16(fp)
 4030198:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 403019c:	00000606 	br	40301b8 <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 40301a0:	e0bffc17 	ldw	r2,-16(fp)
 40301a4:	10800044 	addi	r2,r2,1
 40301a8:	e0bffc15 	stw	r2,-16(fp)
 40301ac:	e0bffc17 	ldw	r2,-16(fp)
 40301b0:	10800810 	cmplti	r2,r2,32
 40301b4:	103fdc1e 	bne	r2,zero,4030128 <__flash_rwdata_start+0xfffff864>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 40301b8:	e0bffd17 	ldw	r2,-12(fp)
}
 40301bc:	e6ffff04 	addi	sp,fp,-4
 40301c0:	dfc00217 	ldw	ra,8(sp)
 40301c4:	df000117 	ldw	fp,4(sp)
 40301c8:	dc000017 	ldw	r16,0(sp)
 40301cc:	dec00304 	addi	sp,sp,12
 40301d0:	f800283a 	ret

040301d4 <atexit>:
 40301d4:	200b883a 	mov	r5,r4
 40301d8:	000d883a 	mov	r6,zero
 40301dc:	0009883a 	mov	r4,zero
 40301e0:	000f883a 	mov	r7,zero
 40301e4:	403029c1 	jmpi	403029c <__register_exitproc>

040301e8 <exit>:
 40301e8:	defffe04 	addi	sp,sp,-8
 40301ec:	000b883a 	mov	r5,zero
 40301f0:	dc000015 	stw	r16,0(sp)
 40301f4:	dfc00115 	stw	ra,4(sp)
 40301f8:	2021883a 	mov	r16,r4
 40301fc:	40303b00 	call	40303b0 <__call_exitprocs>
 4030200:	00800034 	movhi	r2,0
 4030204:	10878504 	addi	r2,r2,7700
 4030208:	11000017 	ldw	r4,0(r2)
 403020c:	20800f17 	ldw	r2,60(r4)
 4030210:	10000126 	beq	r2,zero,4030218 <exit+0x30>
 4030214:	103ee83a 	callr	r2
 4030218:	8009883a 	mov	r4,r16
 403021c:	40305440 	call	4030544 <_exit>

04030220 <memcmp>:
 4030220:	01c000c4 	movi	r7,3
 4030224:	3980192e 	bgeu	r7,r6,403028c <memcmp+0x6c>
 4030228:	2144b03a 	or	r2,r4,r5
 403022c:	11c4703a 	and	r2,r2,r7
 4030230:	10000f26 	beq	r2,zero,4030270 <memcmp+0x50>
 4030234:	20800003 	ldbu	r2,0(r4)
 4030238:	28c00003 	ldbu	r3,0(r5)
 403023c:	10c0151e 	bne	r2,r3,4030294 <memcmp+0x74>
 4030240:	31bfff84 	addi	r6,r6,-2
 4030244:	01ffffc4 	movi	r7,-1
 4030248:	00000406 	br	403025c <memcmp+0x3c>
 403024c:	20800003 	ldbu	r2,0(r4)
 4030250:	28c00003 	ldbu	r3,0(r5)
 4030254:	31bfffc4 	addi	r6,r6,-1
 4030258:	10c00e1e 	bne	r2,r3,4030294 <memcmp+0x74>
 403025c:	21000044 	addi	r4,r4,1
 4030260:	29400044 	addi	r5,r5,1
 4030264:	31fff91e 	bne	r6,r7,403024c <__flash_rwdata_start+0xfffff988>
 4030268:	0005883a 	mov	r2,zero
 403026c:	f800283a 	ret
 4030270:	20c00017 	ldw	r3,0(r4)
 4030274:	28800017 	ldw	r2,0(r5)
 4030278:	1880041e 	bne	r3,r2,403028c <memcmp+0x6c>
 403027c:	31bfff04 	addi	r6,r6,-4
 4030280:	21000104 	addi	r4,r4,4
 4030284:	29400104 	addi	r5,r5,4
 4030288:	39bff936 	bltu	r7,r6,4030270 <__flash_rwdata_start+0xfffff9ac>
 403028c:	303fe91e 	bne	r6,zero,4030234 <__flash_rwdata_start+0xfffff970>
 4030290:	003ff506 	br	4030268 <__flash_rwdata_start+0xfffff9a4>
 4030294:	10c5c83a 	sub	r2,r2,r3
 4030298:	f800283a 	ret

0403029c <__register_exitproc>:
 403029c:	00800034 	movhi	r2,0
 40302a0:	defffa04 	addi	sp,sp,-24
 40302a4:	10878504 	addi	r2,r2,7700
 40302a8:	dc000315 	stw	r16,12(sp)
 40302ac:	14000017 	ldw	r16,0(r2)
 40302b0:	dc400415 	stw	r17,16(sp)
 40302b4:	dfc00515 	stw	ra,20(sp)
 40302b8:	80805217 	ldw	r2,328(r16)
 40302bc:	2023883a 	mov	r17,r4
 40302c0:	10003626 	beq	r2,zero,403039c <__register_exitproc+0x100>
 40302c4:	10c00117 	ldw	r3,4(r2)
 40302c8:	010007c4 	movi	r4,31
 40302cc:	20c00e16 	blt	r4,r3,4030308 <__register_exitproc+0x6c>
 40302d0:	1a400044 	addi	r9,r3,1
 40302d4:	8800211e 	bne	r17,zero,403035c <__register_exitproc+0xc0>
 40302d8:	18c00084 	addi	r3,r3,2
 40302dc:	18c7883a 	add	r3,r3,r3
 40302e0:	18c7883a 	add	r3,r3,r3
 40302e4:	12400115 	stw	r9,4(r2)
 40302e8:	10c7883a 	add	r3,r2,r3
 40302ec:	19400015 	stw	r5,0(r3)
 40302f0:	0005883a 	mov	r2,zero
 40302f4:	dfc00517 	ldw	ra,20(sp)
 40302f8:	dc400417 	ldw	r17,16(sp)
 40302fc:	dc000317 	ldw	r16,12(sp)
 4030300:	dec00604 	addi	sp,sp,24
 4030304:	f800283a 	ret
 4030308:	00800034 	movhi	r2,0
 403030c:	10800004 	addi	r2,r2,0
 4030310:	10002526 	beq	r2,zero,40303a8 <__register_exitproc+0x10c>
 4030314:	01006404 	movi	r4,400
 4030318:	d9400015 	stw	r5,0(sp)
 403031c:	d9800115 	stw	r6,4(sp)
 4030320:	d9c00215 	stw	r7,8(sp)
 4030324:	00000000 	call	0 <__alt_mem_sdram>
 4030328:	d9400017 	ldw	r5,0(sp)
 403032c:	d9800117 	ldw	r6,4(sp)
 4030330:	d9c00217 	ldw	r7,8(sp)
 4030334:	10001c26 	beq	r2,zero,40303a8 <__register_exitproc+0x10c>
 4030338:	80c05217 	ldw	r3,328(r16)
 403033c:	10000115 	stw	zero,4(r2)
 4030340:	02400044 	movi	r9,1
 4030344:	10c00015 	stw	r3,0(r2)
 4030348:	80805215 	stw	r2,328(r16)
 403034c:	10006215 	stw	zero,392(r2)
 4030350:	10006315 	stw	zero,396(r2)
 4030354:	0007883a 	mov	r3,zero
 4030358:	883fdf26 	beq	r17,zero,40302d8 <__flash_rwdata_start+0xfffffa14>
 403035c:	18d1883a 	add	r8,r3,r3
 4030360:	4211883a 	add	r8,r8,r8
 4030364:	1211883a 	add	r8,r2,r8
 4030368:	41802215 	stw	r6,136(r8)
 403036c:	01000044 	movi	r4,1
 4030370:	11806217 	ldw	r6,392(r2)
 4030374:	20c8983a 	sll	r4,r4,r3
 4030378:	310cb03a 	or	r6,r6,r4
 403037c:	11806215 	stw	r6,392(r2)
 4030380:	41c04215 	stw	r7,264(r8)
 4030384:	01800084 	movi	r6,2
 4030388:	89bfd31e 	bne	r17,r6,40302d8 <__flash_rwdata_start+0xfffffa14>
 403038c:	11806317 	ldw	r6,396(r2)
 4030390:	3108b03a 	or	r4,r6,r4
 4030394:	11006315 	stw	r4,396(r2)
 4030398:	003fcf06 	br	40302d8 <__flash_rwdata_start+0xfffffa14>
 403039c:	80805304 	addi	r2,r16,332
 40303a0:	80805215 	stw	r2,328(r16)
 40303a4:	003fc706 	br	40302c4 <__flash_rwdata_start+0xfffffa00>
 40303a8:	00bfffc4 	movi	r2,-1
 40303ac:	003fd106 	br	40302f4 <__flash_rwdata_start+0xfffffa30>

040303b0 <__call_exitprocs>:
 40303b0:	00800034 	movhi	r2,0
 40303b4:	10878504 	addi	r2,r2,7700
 40303b8:	10800017 	ldw	r2,0(r2)
 40303bc:	defff404 	addi	sp,sp,-48
 40303c0:	dd800815 	stw	r22,32(sp)
 40303c4:	d8800015 	stw	r2,0(sp)
 40303c8:	10805204 	addi	r2,r2,328
 40303cc:	dd000615 	stw	r20,24(sp)
 40303d0:	dc800415 	stw	r18,16(sp)
 40303d4:	dfc00b15 	stw	ra,44(sp)
 40303d8:	df000a15 	stw	fp,40(sp)
 40303dc:	ddc00915 	stw	r23,36(sp)
 40303e0:	dd400715 	stw	r21,28(sp)
 40303e4:	dcc00515 	stw	r19,20(sp)
 40303e8:	dc400315 	stw	r17,12(sp)
 40303ec:	dc000215 	stw	r16,8(sp)
 40303f0:	2025883a 	mov	r18,r4
 40303f4:	2829883a 	mov	r20,r5
 40303f8:	d8800115 	stw	r2,4(sp)
 40303fc:	05bfffc4 	movi	r22,-1
 4030400:	d8800017 	ldw	r2,0(sp)
 4030404:	14c05217 	ldw	r19,328(r2)
 4030408:	98001d26 	beq	r19,zero,4030480 <__call_exitprocs+0xd0>
 403040c:	dd400117 	ldw	r21,4(sp)
 4030410:	98800117 	ldw	r2,4(r19)
 4030414:	173fffc4 	addi	fp,r2,-1
 4030418:	e0000d16 	blt	fp,zero,4030450 <__call_exitprocs+0xa0>
 403041c:	14000044 	addi	r16,r2,1
 4030420:	8421883a 	add	r16,r16,r16
 4030424:	8421883a 	add	r16,r16,r16
 4030428:	84402004 	addi	r17,r16,128
 403042c:	9c63883a 	add	r17,r19,r17
 4030430:	9c21883a 	add	r16,r19,r16
 4030434:	a0001e26 	beq	r20,zero,40304b0 <__call_exitprocs+0x100>
 4030438:	80804017 	ldw	r2,256(r16)
 403043c:	15001c26 	beq	r2,r20,40304b0 <__call_exitprocs+0x100>
 4030440:	e73fffc4 	addi	fp,fp,-1
 4030444:	843fff04 	addi	r16,r16,-4
 4030448:	8c7fff04 	addi	r17,r17,-4
 403044c:	e5bff91e 	bne	fp,r22,4030434 <__flash_rwdata_start+0xfffffb70>
 4030450:	00800034 	movhi	r2,0
 4030454:	10800004 	addi	r2,r2,0
 4030458:	10000926 	beq	r2,zero,4030480 <__call_exitprocs+0xd0>
 403045c:	98800117 	ldw	r2,4(r19)
 4030460:	1000311e 	bne	r2,zero,4030528 <__call_exitprocs+0x178>
 4030464:	98800017 	ldw	r2,0(r19)
 4030468:	10003426 	beq	r2,zero,403053c <__call_exitprocs+0x18c>
 403046c:	9809883a 	mov	r4,r19
 4030470:	a8800015 	stw	r2,0(r21)
 4030474:	00000000 	call	0 <__alt_mem_sdram>
 4030478:	acc00017 	ldw	r19,0(r21)
 403047c:	983fe41e 	bne	r19,zero,4030410 <__flash_rwdata_start+0xfffffb4c>
 4030480:	dfc00b17 	ldw	ra,44(sp)
 4030484:	df000a17 	ldw	fp,40(sp)
 4030488:	ddc00917 	ldw	r23,36(sp)
 403048c:	dd800817 	ldw	r22,32(sp)
 4030490:	dd400717 	ldw	r21,28(sp)
 4030494:	dd000617 	ldw	r20,24(sp)
 4030498:	dcc00517 	ldw	r19,20(sp)
 403049c:	dc800417 	ldw	r18,16(sp)
 40304a0:	dc400317 	ldw	r17,12(sp)
 40304a4:	dc000217 	ldw	r16,8(sp)
 40304a8:	dec00c04 	addi	sp,sp,48
 40304ac:	f800283a 	ret
 40304b0:	98800117 	ldw	r2,4(r19)
 40304b4:	80c00017 	ldw	r3,0(r16)
 40304b8:	10bfffc4 	addi	r2,r2,-1
 40304bc:	17001526 	beq	r2,fp,4030514 <__call_exitprocs+0x164>
 40304c0:	80000015 	stw	zero,0(r16)
 40304c4:	183fde26 	beq	r3,zero,4030440 <__flash_rwdata_start+0xfffffb7c>
 40304c8:	00800044 	movi	r2,1
 40304cc:	1708983a 	sll	r4,r2,fp
 40304d0:	98806217 	ldw	r2,392(r19)
 40304d4:	9dc00117 	ldw	r23,4(r19)
 40304d8:	2084703a 	and	r2,r4,r2
 40304dc:	1000061e 	bne	r2,zero,40304f8 <__call_exitprocs+0x148>
 40304e0:	183ee83a 	callr	r3
 40304e4:	98800117 	ldw	r2,4(r19)
 40304e8:	15ffc51e 	bne	r2,r23,4030400 <__flash_rwdata_start+0xfffffb3c>
 40304ec:	a8800017 	ldw	r2,0(r21)
 40304f0:	14ffd326 	beq	r2,r19,4030440 <__flash_rwdata_start+0xfffffb7c>
 40304f4:	003fc206 	br	4030400 <__flash_rwdata_start+0xfffffb3c>
 40304f8:	98806317 	ldw	r2,396(r19)
 40304fc:	2084703a 	and	r2,r4,r2
 4030500:	1000061e 	bne	r2,zero,403051c <__call_exitprocs+0x16c>
 4030504:	89400017 	ldw	r5,0(r17)
 4030508:	9009883a 	mov	r4,r18
 403050c:	183ee83a 	callr	r3
 4030510:	003ff406 	br	40304e4 <__flash_rwdata_start+0xfffffc20>
 4030514:	9f000115 	stw	fp,4(r19)
 4030518:	003fea06 	br	40304c4 <__flash_rwdata_start+0xfffffc00>
 403051c:	89000017 	ldw	r4,0(r17)
 4030520:	183ee83a 	callr	r3
 4030524:	003fef06 	br	40304e4 <__flash_rwdata_start+0xfffffc20>
 4030528:	98800017 	ldw	r2,0(r19)
 403052c:	982b883a 	mov	r21,r19
 4030530:	1027883a 	mov	r19,r2
 4030534:	983fb61e 	bne	r19,zero,4030410 <__flash_rwdata_start+0xfffffb4c>
 4030538:	003fd106 	br	4030480 <__flash_rwdata_start+0xfffffbbc>
 403053c:	0005883a 	mov	r2,zero
 4030540:	003ffa06 	br	403052c <__flash_rwdata_start+0xfffffc68>

04030544 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 4030544:	defffd04 	addi	sp,sp,-12
 4030548:	df000215 	stw	fp,8(sp)
 403054c:	df000204 	addi	fp,sp,8
 4030550:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 4030554:	0001883a 	nop
 4030558:	e0bfff17 	ldw	r2,-4(fp)
 403055c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 4030560:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 4030564:	10000226 	beq	r2,zero,4030570 <_exit+0x2c>
    ALT_SIM_FAIL();
 4030568:	002af070 	cmpltui	zero,zero,43969
 403056c:	00000106 	br	4030574 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 4030570:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 4030574:	003fff06 	br	4030574 <__flash_rwdata_start+0xfffffcb0>
